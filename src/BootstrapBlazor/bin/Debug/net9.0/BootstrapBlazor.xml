<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BootstrapBlazor</name>
    </assembly>
    <members>
        <member name="T:BootstrapBlazor.Components.AutoGenerateBaseAttribute">
            <summary>
            Base class for AutoGenerateColumn attribute, used to mark auto-generated columns in <see cref="T:BootstrapBlazor.Components.Table`1"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.Editable">
            <summary>
            Gets or sets whether the current column is editable. Default is true. When set to false, the auto-generated edit UI will not generate this column.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.Ignore">
            <summary>
            Gets or sets whether the current column is rendered. Default is false. When set to true, the UI will not generate this column.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.Readonly">
            <summary>
            Gets or sets whether the current edit item is read-only. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.Visible">
            <summary>
            Gets or sets whether the current edit item is visible. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.Sortable">
            <summary>
            Gets or sets whether sorting is allowed. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.Filterable">
            <summary>
            Gets or sets whether data filtering is allowed. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.Searchable">
            <summary>
            Gets or sets whether the column participates in search. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.TextWrap">
            <summary>
            Gets or sets whether text wrapping is allowed in this column. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.TextEllipsis">
            <summary>
            Gets or sets whether text overflow is ellipsis in this column. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.Align">
            <summary>
            Gets or sets the text alignment. Default is Alignment.None.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.ShowTips">
            <summary>
            Gets or sets whether to show tooltips on mouse hover. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.ShowCopyColumn">
            <summary>
            Gets or sets whether the column can be copied. Default is false.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.AutoGenerateClassAttribute">
            <summary>
            AutoGenerateColumn attribute class, used to mark auto-generated columns in <see cref="T:BootstrapBlazor.Components.Table`1"/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.AutoGenerateColumnAttribute">
            <summary>
            AutoGenerateColumn attribute class, used to mark auto-generated columns in <see cref="T:BootstrapBlazor.Components.Table`1"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Order">
            <summary>
            Gets or sets the display order. The rules are as follows:
            <para></para>
            &gt;0 for the front, 1,2,3...
            <para></para>
            =0 for the middle (default)
            <para></para>
            &lt;0 for the back, ...-3,-2,-1
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.DefaultSort">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.SkipValidate">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.IsReadonlyWhenAdd">
            <summary>
            Gets or sets whether the column is read-only when adding a new item. Default is null, using the <see cref="P:BootstrapBlazor.Components.IEditorItem.Readonly"/> value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.IsReadonlyWhenEdit">
            <summary>
            Gets or sets whether the column is read-only when editing an item. Default is null, using the <see cref="P:BootstrapBlazor.Components.IEditorItem.Readonly"/> value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.IsVisibleWhenAdd">
            <summary>
            Gets or sets whether the column is visible when adding a new item. Default is null, using the <see cref="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.Visible"/> value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.IsVisibleWhenEdit">
            <summary>
            Gets or sets whether the column is visible when editing an item. Default is null, using the <see cref="P:BootstrapBlazor.Components.AutoGenerateBaseAttribute.Visible"/> value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.RequiredErrorMessage">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.ShowLabelTooltip">
            <summary>
            Gets or sets whether to show label tooltip. Mostly used when the label text is too long and gets truncated. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.DefaultSortOrder">
            <summary>
            Gets or sets the default sort order. Default is SortOrder.Unset.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Width">
            <summary>
            Gets or sets the column width.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Fixed">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.CssClass">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.ShownWithBreakPoint">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.FormatString">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.PlaceHolder">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Formatter">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.ComponentType">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Step">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Rows">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Cols">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.PropertyType">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.Text">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.FieldName">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.ShowSearchWhenSelect">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.IsFixedSearchWhenSelect">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.IsPopover">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.BootstrapBlazor#Components#ILookup#Lookup">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.BootstrapBlazor#Components#ILookup#LookupService">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.LookupServiceKey">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.LookupServiceData">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.LookupStringComparison">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoGenerateColumnAttribute.GetDisplayName">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoGenerateColumnAttribute.GetFieldName">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.GroupName">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.GroupOrder">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.HeaderTextWrap">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.ShowHeaderTooltip">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.HeaderTextTooltip">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.HeaderTextEllipsis">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.IsMarkupString">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoGenerateColumnAttribute.IgnoreWhenExport">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapModuleAutoLoaderAttribute">
            <summary>
            Constructor
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapModuleAutoLoaderAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapModuleAutoLoaderAttribute.ModuleName">
            <summary>
            Gets or sets the module name. Automatically uses scripts from the modules folder.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FileValidationAttribute">
            <summary>
            上传文件扩展名验证标签类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FileValidationAttribute.Extensions">
            <summary>
            获得/设置 允许的扩展名
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FileValidationAttribute.FileSize">
            <summary>
            获得/设置 文件大小 默认为 0 未限制
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FileValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            是否合规判断方法
            </summary>
            <param name="value"></param>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.JSModuleAutoLoaderAttribute">
            <summary>
            JSModuleAutoLoaderAttribute class
            </summary>
            <param name="path">The path to the JavaScript module</param>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleAutoLoaderAttribute.#ctor(System.String)">
            <summary>
            JSModuleAutoLoaderAttribute class
            </summary>
            <param name="path">The path to the JavaScript module</param>
        </member>
        <member name="P:BootstrapBlazor.Components.JSModuleAutoLoaderAttribute.Path">
            <summary>
            Gets the path property
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.JSModuleAutoLoaderAttribute.JSObjectReference">
            <summary>
            Represents a reference to a JavaScript object. Default value is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.JSModuleAutoLoaderAttribute.AutoInvokeInit">
            <summary>
            Gets or sets whether to automatically invoke init. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.JSModuleAutoLoaderAttribute.AutoInvokeDispose">
            <summary>
            Gets or sets whether to automatically invoke dispose. Default is true.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.JSModuleNotInheritedAttribute">
            <summary>
            JSModuleNotInheritedAttribute <see cref="T:BootstrapBlazor.Components.JSModuleAutoLoaderAttribute"/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.NullableBoolItemsAttribute">
            <summary>
            Nullable boolean type converter
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullableBoolItemsAttribute.NullValueDisplayText">
            <summary>
            Gets or sets the display text for null value
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullableBoolItemsAttribute.TrueValueDisplayText">
            <summary>
            Gets or sets the display text for true value
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullableBoolItemsAttribute.FalseValueDisplayText">
            <summary>
            Gets or sets the display text for false value
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PlaceHolderAttribute">
            <summary>
            PlaceHolderAttribute class used to define a placeholder for a property.
            </summary>
            <param name="placeholder">The placeholder text.</param>
        </member>
        <member name="M:BootstrapBlazor.Components.PlaceHolderAttribute.#ctor(System.String)">
            <summary>
            PlaceHolderAttribute class used to define a placeholder for a property.
            </summary>
            <param name="placeholder">The placeholder text.</param>
        </member>
        <member name="P:BootstrapBlazor.Components.PlaceHolderAttribute.Text">
            <summary>
            Gets the placeholder text.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TabItemOptionAttribute">
            <summary>
            TabItem configuration attribute class
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItemOptionAttribute.Text">
            <summary>
            Gets or sets the text of the tab item.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItemOptionAttribute.Closable">
            <summary>
            Gets or sets whether the current TabItem is closable. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItemOptionAttribute.Icon">
            <summary>
            Gets or sets the icon string.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableMetadataForAttribute">
             <summary>
             Define a group of UI generation metadata for target data type
             Usually model types are at different layer to the blazor component UI layer.
             In this case, use <see cref="T:BootstrapBlazor.Components.TableMetadataForAttribute"/> to define a metadata type for Table component.
             Then register metadata type with <seealso cref="T:BootstrapBlazor.Components.TableMetadataTypeService"/>
            
             <example>
                 Example:
                 the Pig data type is usually at biz or data layer
                 <code>
                 public class Pig
                 {
                     public string? Name1 { get; set; }
            
                     public string? Name2 { get; set; }
                 }
                 </code>
                 the PigMetadata can be defined at UI/component layer
                 <code>
                 [TableMetadataFor(typeof(Pig))]
                 [AutoGenerateClass(Align = Alignment.Center)]
                 public class PigMetadata
                 {
                     [AutoGenerateColumn(Ignore = true)]
                     public string? Name1 { get; set; }
                     
                     [AutoGenerateColumn(Align = Alignment.Center, Order = -2)]
                     public string? Name2 { get; set; }
                 }
                 </code>
                 before using the metadata, it needs to register the metadata types.
                 register metadata types in assembly
                 <code>
                 TableMetadataTypeService.RegisterMetadataTypes(typeof(Pig).Assembly);
                 var cols = Utility.GetTableColumns&lt;Pig&gt;().ToList();
                 Assert.Single(cols);
                 </code>
                 or you can register types individually
                 <code>
                 TableMetadataTypeService.RegisterMetadataType(metadataType, dataType);
                 </code>
             </example>
             </summary>
             <remarks>
             Constructor TableMetadataForAttribute for target data type
             </remarks>
             <param name="dataType">The target model/data type</param>
        </member>
        <member name="M:BootstrapBlazor.Components.TableMetadataForAttribute.#ctor(System.Type)">
             <summary>
             Define a group of UI generation metadata for target data type
             Usually model types are at different layer to the blazor component UI layer.
             In this case, use <see cref="T:BootstrapBlazor.Components.TableMetadataForAttribute"/> to define a metadata type for Table component.
             Then register metadata type with <seealso cref="T:BootstrapBlazor.Components.TableMetadataTypeService"/>
            
             <example>
                 Example:
                 the Pig data type is usually at biz or data layer
                 <code>
                 public class Pig
                 {
                     public string? Name1 { get; set; }
            
                     public string? Name2 { get; set; }
                 }
                 </code>
                 the PigMetadata can be defined at UI/component layer
                 <code>
                 [TableMetadataFor(typeof(Pig))]
                 [AutoGenerateClass(Align = Alignment.Center)]
                 public class PigMetadata
                 {
                     [AutoGenerateColumn(Ignore = true)]
                     public string? Name1 { get; set; }
                     
                     [AutoGenerateColumn(Align = Alignment.Center, Order = -2)]
                     public string? Name2 { get; set; }
                 }
                 </code>
                 before using the metadata, it needs to register the metadata types.
                 register metadata types in assembly
                 <code>
                 TableMetadataTypeService.RegisterMetadataTypes(typeof(Pig).Assembly);
                 var cols = Utility.GetTableColumns&lt;Pig&gt;().ToList();
                 Assert.Single(cols);
                 </code>
                 or you can register types individually
                 <code>
                 TableMetadataTypeService.RegisterMetadataType(metadataType, dataType);
                 </code>
             </example>
             </summary>
             <remarks>
             Constructor TableMetadataForAttribute for target data type
             </remarks>
             <param name="dataType">The target model/data type</param>
        </member>
        <member name="P:BootstrapBlazor.Components.TableMetadataForAttribute.DataType">
            <summary>
            Gets the target model/data type
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Affix">
            <summary>
            Affix 固钉组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Affix.Offset">
            <summary>
            获得/设置 指定偏移量后触发
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Affix.Position">
            <summary>
            获得/设置 固定位置枚举 默认 <see cref="F:BootstrapBlazor.Components.AffixPosition.Top"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Affix.ZIndex">
            <summary>
            获得/设置 z-index 值 默认 100
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Affix.ChildContent">
            <summary>
            获得/设置 组件内容
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.AjaxOption">
            <summary>
            Ajax配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AjaxOption.Data">
            <summary>
            获取/设置 要上传的参数类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AjaxOption.Method">
            <summary>
            获取/设置 传输方式，默认为POST
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AjaxOption.Url">
            <summary>
            获取/设置 请求的URL
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AjaxOption.ToJson">
            <summary>
            获得/设置 是否获得序列化 Json 结果 参数 默认为 true
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Alert">
            <summary>
            Alert 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Alert.ClassName">
            <summary>
            获得 样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Alert.ShowShadow">
            <summary>
            获得/设置 是否显示阴影 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Alert.ShowBorder">
            <summary>
            获得/设置 是否显示边框 默认 false 不显示
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.AlertBase">
            <summary>
            Alert 警告框组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.IconString">
            <summary>
            获得 图标样式字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.Color">
            <summary>
            获得/设置 颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.ShowDismiss">
            <summary>
            获得/设置 是否显示关闭按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.Icon">
            <summary>
            获得/设置 显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.ShowBar">
            <summary>
            获得/设置 是否显示左侧 Bar
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.ChildContent">
            <summary>
            子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AlertBase.OnDismiss">
            <summary>
            关闭警告框回调方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Anchor">
            <summary>
            Anchor 组件部分类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Anchor.Target">
            <summary>
            获得/设置 目标组件 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Anchor.Container">
            <summary>
            获得/设置 滚动组件 Id 默认为 null 使用最近滚动条容器元素
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Anchor.IsAnimation">
            <summary>
            获得/设置 滚动时是否开启动画 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Anchor.AnimationString">
            <summary>
            获得 滚动动画
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Anchor.Offset">
            <summary>
            获得/设置 距离顶端偏移量 默认为 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Anchor.ChildContent">
            <summary>
            获得/设置 子内容
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.AnchorLink">
            <summary>
            AnchorLink 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AnchorLink.Text">
            <summary>
            获得/设置 组件 Text 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AnchorLink.TooltipText">
            <summary>
            获得/设置 组件 拷贝成功后 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AnchorLink.Icon">
            <summary>
            获得/设置 锚点图标 默认 fa-solid fa-link
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AnchorLink.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.AutoComplete">
            <summary>
            AutoComplete component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoComplete.Items">
            <summary>
            Gets or sets the collection of matching data obtained by inputting a string
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoComplete.OnCustomFilter">
            <summary>
            Gets or sets custom collection filtering rules, default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoComplete.Icon">
            <summary>
            Gets or sets the icon
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoComplete.LoadingIcon">
            <summary>
            Gets or sets the loading icon
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoComplete.DisplayCount">
            <summary>
            Gets or sets the number of items to display when matching data
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoComplete.IsLikeMatch">
            <summary>
            Gets or sets whether to enable fuzzy search, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoComplete.IgnoreCase">
            <summary>
            Gets or sets whether to ignore case when matching, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoComplete.ShowDropdownListOnFocus">
            <summary>
            Gets or sets whether to expand the dropdown candidate menu when focused, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoComplete.ShowNoDataTip">
            <summary>
            Gets or sets whether to show the no matching data option, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoComplete.Localizer">
            <summary>
            IStringLocalizer service instance
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoComplete.ShowDropdownListOnFocusString">
            <summary>
            Gets the string setting for automatically displaying the dropdown when focused
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoComplete.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoComplete.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoComplete.OnClickItem(System.String)">
            <summary>
            Callback method when a candidate item is clicked
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoComplete.TriggerFilter(System.String)">
            <summary>
            TriggerFilter method
            </summary>
            <param name="val"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.PopoverCompleteBase`1">
            <summary>
            弹窗可悬浮组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.IconTheme">
            <summary>
            图标主题服务
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.Placement">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.CustomClass">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.ShowShadow">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.NoDataTip">
            <summary>
            获得/设置 无匹配数据时显示提示信息 默认提示"无匹配数据"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.IsPopover">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.Offset">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.Debounce">
            <summary>
            获得/设置 防抖时间 默认为 0 即不开启
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.OnSelectedItemChanged">
            <summary>
            获得/设置 下拉菜单选择回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.SkipEnter">
            <summary>
            获得/设置 是否跳过 Enter 按键处理 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.SkipEsc">
            <summary>
            获得/设置 是否跳过 Esc 按键处理 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.ScrollIntoViewBehavior">
            <summary>
            获得/设置 滚动行为 默认 <see cref="F:BootstrapBlazor.Components.ScrollIntoViewBehavior.Smooth"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.ItemTemplate">
            <summary>
            获得/设置 候选项模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.SkipEscString">
            <summary>
            获得 是否跳过 ESC 按键字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.SkipEnterString">
            <summary>
            获得 是否跳过 Enter 按键字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.TriggerBlurString">
            <summary>
            获得 是否跳过 Blur 处理字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.ScrollIntoViewBehaviorString">
            <summary>
            获得 滚动行为字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.DurationString">
            <summary>
            防抖时长字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.ToggleString">
            <summary>
            data-bs-toggle 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.OffsetString">
            <summary>
            偏移量字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.InputId">
            <summary>
            输入框 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.PlacementString">
            <summary>
            弹窗位置字符串
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopoverCompleteBase`1.GetInputId">
            <summary>
            获得输入框 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverCompleteBase`1.CustomClassString">
            <summary>
            获得 CustomClass 字符串
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopoverCompleteBase`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopoverCompleteBase`1.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.PopoverCompleteBase`1.TriggerBlur">
            <summary>
            触发 OnBlur 回调方法 由 Javascript 触发
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.AutoFill`1">
            <summary>
            AutoFill component
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.ClassString">
            <summary>
            Gets the component style.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.Items">
            <summary>
            Gets or sets the collection of items for the component.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.DisplayCount">
            <summary>
            Gets or sets the number of items to display when matching data. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.IsLikeMatch">
            <summary>
            Gets or sets whether to enable fuzzy search. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.IgnoreCase">
            <summary>
            Gets or sets whether to ignore case when matching. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.ShowDropdownListOnFocus">
            <summary>
            Gets or sets whether to expand the dropdown candidate menu when focused. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.OnGetDisplayText">
            <summary>
            Gets or sets the method to get the display text from the model. Default is to use the ToString override method.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.Icon">
            <summary>
            Gets or sets the icon.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.LoadingIcon">
            <summary>
            Gets or sets the loading icon.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.OnCustomFilter">
            <summary>
            Gets or sets the custom collection filtering rules.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.ShowNoDataTip">
            <summary>
            Gets or sets whether to show the no matching data option. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.Template">
            <summary>
            Gets or sets the candidate item template. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.IsVirtualize">
            <summary>
            Gets or sets whether virtual scrolling is enabled. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.RowHeight">
            <summary>
            Gets or sets the row height for virtual scrolling. Default is 50f.
            </summary>
            <remarks>Effective when <see cref="P:BootstrapBlazor.Components.AutoFill`1.IsVirtualize"/> is set to true.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.OverscanCount">
            <summary>
            Gets or sets the overscan count for virtual scrolling. Default is 3.
            </summary>
            <remarks>Effective when <see cref="P:BootstrapBlazor.Components.AutoFill`1.IsVirtualize"/> is set to true.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.OnQueryAsync">
            <summary>
            Gets or sets the callback method for loading virtualized items.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.IsClearable">
            <summary>
            Gets or sets whether the select component is clearable. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.ClearIcon">
            <summary>
            Gets or sets the right-side clear icon. Default is fa-solid fa-angle-up.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.OnClearAsync">
            <summary>
            Gets or sets the callback method when the clear button is clicked. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoFill`1.ClearClassString">
            <summary>
            Gets the clear icon class string.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoFill`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoFill`1.GetClearable">
            <summary>
            Gets whether show the clear button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoFill`1.OnClearValue">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoFill`1.OnClickItem(`0)">
            <summary>
            Callback method when a candidate item is clicked.
            </summary>
            <param name="val">The value of the clicked item.</param>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoFill`1.TriggerFilter(System.String)">
            <summary>
            Triggers the filter method.
            </summary>
            <param name="val">The value to filter by.</param>
        </member>
        <member name="T:BootstrapBlazor.Components.AutoRedirect">
            <summary>
            AutoRedirect component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoRedirect.RedirectUrl">
            <summary>
            获得/设置 重定向地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoRedirect.IsForceLoad">
            <summary>
            获得/设置 是否强制导航 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoRedirect.Interval">
            <summary>
            获得/设置 自动锁屏间隔单位 秒 默认 60000 毫秒
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoRedirect.OnBeforeRedirectAsync">
            <summary>
            获得/设置 地址跳转前回调方法 返回 true 时中止跳转
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AutoRedirect.NavigationManager">
            <summary>
            获得/设置 NavigationManager 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoRedirect.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.AutoRedirect.Lock">
            <summary>
            锁屏操作由 JS 调用
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Avatar">
            <summary>
            Avatar 头像框组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Avatar.ClassName">
            <summary>
            获得 样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Avatar.ImgClassString">
            <summary>
            获得 图片样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Avatar.IsCircle">
            <summary>
            获得/设置 是否为圆形
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Avatar.Url">
            <summary>
            获得/设置 Image 头像路径地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Avatar.IsIcon">
            <summary>
            获得/设置 是否为图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Avatar.Icon">
            <summary>
            获得/设置 头像框显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Avatar.IsText">
            <summary>
            获得/设置 是否为显示为文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Avatar.Text">
            <summary>
            获得/设置 头像框显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Avatar.Size">
            <summary>
            获得/设置 头像框大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Avatar.IsBorder">
            <summary>
            获得/设置 是否显示 Border 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Avatar.GetUrlAsync">
            <summary>
            获得/设置 获取图片地址异步回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Avatar.IsLoaded">
            <summary>
            获得/设置 是否显示图片
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Avatar.OnParametersSetAsync">
            <summary>
            OnInitializedAsync 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Avatar.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Avatar.OnError">
            <summary>
            图片加载失败时回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Avatar.OnLoad">
            <summary>
            图片加载成功时回调此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Badge">
            <summary>
            Badge component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Badge.Color">
            <summary>
            Gets or sets the color of the badge. Default is <see cref="F:BootstrapBlazor.Components.Color.Primary"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Badge.IsPill">
            <summary>
            Gets or sets whether the badge should be displayed as a pill (rounded) or not. Default is false.
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Badge.ChildContent">
            <summary>
            Gets or sets the child content of the component. Default is false.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ShieldBadge">
            <summary>
            ShieldBadge component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ShieldBadge.Icon">
            <summary>
            Gets or sets the icon. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ShieldBadge.IconColor">
            <summary>
            Gets or sets the icon color. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ShieldBadge.Text">
            <summary>
            Gets or sets the text of badge. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ShieldBadge.TextColor">
            <summary>
            Gets or sets the text color. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ShieldBadge.TextBackgroundColor">
            <summary>
            Gets or sets the text background color. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ShieldBadge.Label">
            <summary>
            Gets or sets the label of badge. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ShieldBadge.LabelColor">
            <summary>
            Gets or sets the label color of badge. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ShieldBadge.LabelBackgroundColor">
            <summary>
            Gets or sets the label background color. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ShieldBadge.Radius">
            <summary>
            Gets or sets the badge radius. Default is 3.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorRoot">
            <summary>
            BootstrapBlazorRoot 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorRoot.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorRoot.MessageContainer">
            <summary>
            获得 Message 组件实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorRoot.ToastContainer">
            <summary>
            获得 ToastContainer 组件实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorRoot.OnErrorHandleAsync">
            <summary>
            获得/设置 自定义错误处理回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorRoot.ShowToast">
            <summary>
            获得/设置 是否显示 Error 提示弹窗 默认 null 使用 <see cref="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ShowErrorLoggerToast"/> 设置值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorRoot.ToastTitle">
            <summary>
            获得/设置 Error Toast 弹窗标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorRoot.EnableErrorLogger">
            <summary>
            获得/设置 是否开启全局异常捕获 默认 null 读取配置文件 EnableErrorLogger 值
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorRoot.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            SetParametersAsync 方法
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapComponentBase">
            <summary>
            Bootstrap Blazor 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapComponentBase.AdditionalAttributes">
            <summary>
            获得/设置 用户自定义属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapComponentBase.ErrorLogger">
            <summary>
            异常捕获组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapComponentBase.JSRuntime">
            <summary>
            获得/设置 IJSRuntime 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapComponentBase.IsNotRender">
            <summary>
            获得/设置 是否需要 Render 组件 默认 false 需要重新渲染组件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapModuleComponentBase">
            <summary>
            Bootstrap blazor JavaScript isolation base class
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapModuleComponentBase.Module">
            <summary>
            Instance of <see cref="T:BootstrapBlazor.Components.JSModule"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapModuleComponentBase.ModulePath">
            <summary>
            获得/设置 脚本路径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapModuleComponentBase.AutoInvokeInit">
            <summary>
            获得/设置 是否自动调用 init 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapModuleComponentBase.AutoInvokeDispose">
            <summary>
            获得/设置 是否自动调用 dispose 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapModuleComponentBase.Interop">
            <summary>
            获得/设置 DotNetObjectReference 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapModuleComponentBase.ModuleLoadTask">
            <summary>
            获得/设置 Module 是否加载完成
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapModuleComponentBase.ModuleInitTask">
            <summary>
            获得/设置 Module 是否初始化完成
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapModuleComponentBase.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapModuleComponentBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapModuleComponentBase.OnLoadJSModule">
            <summary>
            加载 JS Module 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapModuleComponentBase.InvokeInitAsync">
            <summary>
            call JavaScript method
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapModuleComponentBase.InvokeVoidAsync(System.String,System.Object[])">
            <summary>
            call JavaScript method
            </summary>
            <param name="identifier"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapModuleComponentBase.InvokeVoidAsync(System.String,System.TimeSpan,System.Object[])">
            <summary>
            call JavaScript method
            </summary>
            <param name="identifier"></param>
            <param name="timeout"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapModuleComponentBase.InvokeVoidAsync(System.String,System.Threading.CancellationToken,System.Object[])">
            <summary>
            call JavaScript method
            </summary>
            <param name="identifier"></param>
            <param name="cancellationToken"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapModuleComponentBase.InvokeAsync``1(System.String,System.Object[])">
            <summary>
            call JavaScript method
            </summary>
            <param name="identifier"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapModuleComponentBase.InvokeAsync``1(System.String,System.TimeSpan,System.Object[])">
            <summary>
            call JavaScript method
            </summary>
            <param name="identifier"></param>
            <param name="timeout"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapModuleComponentBase.InvokeAsync``1(System.String,System.Threading.CancellationToken,System.Object[])">
            <summary>
            call JavaScript method
            </summary>
            <param name="identifier"></param>
            <param name="cancellationToken"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapModuleComponentBase.DisposeAsync(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously.
            </summary>
            <param name="disposing"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapModuleComponentBase.DisposeAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DynamicElement">
            <summary>
            动态元素组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.TagName">
            <summary>
            获得/设置 TagName 属性 默认为 div
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.TriggerClick">
            <summary>
            获得/设置 是否触发 Click 事件 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.PreventDefault">
            <summary>
            获得/设置 是否阻止默认行为 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.StopPropagation">
            <summary>
            获得/设置 是否事件冒泡 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.OnClick">
            <summary>
            获得/设置 Click 回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.TriggerDoubleClick">
            <summary>
            获得/设置 是否触发 DoubleClick 事件 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.OnDoubleClick">
            <summary>
            获得/设置 DoubleClick 回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.OnContextMenu">
            <summary>
            获得/设置 OnContextMenu 回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.TriggerContextMenu">
            <summary>
            获得/设置 是否触发 OnContextMenu 事件 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.ChildContent">
            <summary>
            获得/设置 内容组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicElement.GenerateElement">
            <summary>
            获得/设置 是否生成指定 Tag 元素 默认 true 生成
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicElement.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            BuildRenderTree 方法
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.IdComponentBase">
            <summary>
            自动生成客户端 ID 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IdComponentBase.Id">
            <summary>
            获得/设置 组件 id 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IdComponentBase.ComponentIdGenerator">
            <summary>
            获得 <see cref="T:BootstrapBlazor.Components.IComponentIdGenerator"/> 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IdComponentBase.RetrieveId">
            <summary>
            获得 弹窗客户端 ID
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IdComponentBase.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.RenderTemplate">
            <summary>
            RenderTemplate component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RenderTemplate.ChildContent">
            <summary>
            Gets or sets the child component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RenderTemplate.OnRenderAsync">
            <summary>
            Gets or sets the callback delegate for the first load
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RenderTemplate.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.RenderTemplate.Render">
            <summary>
            Render method
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Block">
            <summary>
            条件输出自组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Block.Name">
            <summary>
            获得/设置 Block 名字 此名字通过 <see cref="P:BootstrapBlazor.Components.Block.OnQueryCondition"/> 第一个参数传递给使用者
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Block.Roles">
            <summary>
            获得/设置 Block 允许的角色集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Block.Users">
            <summary>
            获得/设置 Block 允许的用户集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Block.OnQueryCondition">
            <summary>
            获得/设置 是否显示此 Block 默认显示 返回 true 时显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Block.Condition">
            <summary>
            获得/设置 是否显示此 Block 默认显示 null 未参与判断 设置 true 时显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Block.ChildContent">
            <summary>
            获得/设置 子组件内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Block.Authorized">
            <summary>
            获得/设置 符合条件显示的内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Block.NotAuthorized">
            <summary>
            获得/设置 不符合条件显示的内容
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Block.OnParametersSetAsync">
            <summary>
            OnParametersSetAsync 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Block.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            BuildRenderTree 方法
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorRootContent">
            <summary>
            BootstrapBlazorRootContent Component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorRootContent.RootName">
            <summary>
            Gets or sets the <see cref="T:System.String"/> ID that determines which <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRootOutlet"/> instance will render
            the content of this instance.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorRootContent.RootId">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> ID that determines which <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRootOutlet"/> instance will render
            the content of this instance.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorRootContent.ChildContent">
            <summary>
            Gets or sets the content.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorRootContent.Microsoft#AspNetCore#Components#IComponent#Attach(Microsoft.AspNetCore.Components.RenderHandle)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="renderHandle"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorRootContent.Microsoft#AspNetCore#Components#IComponent#SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorRootContent.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorRootOutlet">
            <summary>
            BootstrapBlazorRootOutlet Component
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BootstrapBlazorRootOutlet.DefaultIdentifier">
            <summary>
            Gets the default identifier that can be used to subscribe to all <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRootContent"/> instances.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorRootOutlet.RootName">
            <summary>
            Gets or sets the <see cref="T:System.String"/> ID that determines which <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRootContent"/> instances will provide
            content to this instance.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorRootOutlet.RootId">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> ID that determines which <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRootContent"/> instances will provide
            content to this instance.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorRootOutlet.Microsoft#AspNetCore#Components#IComponent#SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorRootOutlet.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorRootOutlet.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Breadcrumb">
            <summary>
            Breadcrumb 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Breadcrumb.Value">
            <summary>
            获得/设置 数据集
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BreadcrumbItem">
            <summary>
            BreadcrumbItem 实体类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BreadcrumbItem.Url">
            <summary>
            获得/设置 导航地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BreadcrumbItem.Text">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BreadcrumbItem.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="text"></param>
            <param name="url"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Button">
            <summary>
            Button 按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Button.IsAutoFocus">
            <summary>
            获得/设置 是否自动获取焦点 默认 false 不自动获取焦点
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Button.ButtonElement">
            <summary>
            获得/设置 html button 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Button.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Button.OnClickButton">
            <summary>
            OnClickButton 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Button.FocusAsync">
            <summary>
            自动获得焦点方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Button.HandlerClick">
            <summary>
            处理点击方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ButtonBase">
            <summary>
            Button 按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.ClassName">
            <summary>
            获得 按钮样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.Disabled">
            <summary>
            获得 按钮 disabled 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.DisabledString">
            <summary>
            获得 按钮 aria-disabled 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.Tab">
            <summary>
            获得 按钮 tab index 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.ButtonStyle">
            <summary>
            获得/设置 按钮风格枚举
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.ButtonType">
            <summary>
            获得/设置 按钮类型 Submit 为表单提交按钮 Reset 为表单重置按钮 默认为 Button
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.OnClick">
            <summary>
            获得/设置 OnClick 事件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.OnClickWithoutRender">
            <summary>
            获得/设置 OnClick 事件不刷新父组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.Color">
            <summary>
            获得/设置 按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.Icon">
            <summary>
            获得/设置 显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.LoadingIcon">
            <summary>
            获得/设置 正在加载动画图标 默认为 fa-solid fa-spin fa-spinner
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.IsAsync">
            <summary>
            获得/设置 是否为异步按钮，默认为 false 如果为 true 表示是异步按钮，点击按钮后禁用自身并且等待异步完成，过程中显示 loading 动画
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.IsKeepDisabled">
            <summary>
            获得/设置 是否异步结束后是否保持禁用状态，默认为 false
            </summary>
            <remarks><see cref="P:BootstrapBlazor.Components.ButtonBase.IsAsync"/> 开启时有效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.Text">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.IsOutline">
            <summary>
            获得/设置 Outline 样式 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.Size">
            <summary>
            获得/设置 Size 大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.IsBlock">
            <summary>
            获得/设置 Block 模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.StopPropagation">
            <summary>
            获得/设置 点击时间是否向上传播 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.ChildContent">
            <summary>
            获得/设置 RenderFragment 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.ValidateForm">
            <summary>
            获得 ValidateForm 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.IconTheme">
            <summary>
            获得 IconTheme 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonBase.IsAsyncLoading">
            <summary>
            获得/设置 是否当前正在异步执行操作
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ButtonBase.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ButtonBase.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ButtonBase.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ButtonBase.SetDisable(System.Boolean)">
            <summary>
            设置按钮是否可用状态
            </summary>
            <param name="disable"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ButtonBase.TriggerAsync(System.Boolean)">
            <summary>
            触发按钮异步操作方法
            </summary>
            <param name="loading">true 时显示正在操作 false 时表示结束</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ButtonBase.ShowTooltip">
            <summary>
            显示 Tooltip 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ButtonBase.RemoveTooltip">
            <summary>
            销毁 Tooltip 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ButtonBase.DisposeAsync(System.Boolean)">
            <summary>
            DisposeAsyncCore 方法
            </summary>
            <param name="disposing"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.CountButton">
            <summary>
            CountButton 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountButton.Count">
            <summary>
            倒计时数量 默认 5 秒
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountButton.CountText">
            <summary>
            倒计时文本 默认 null 使用 <see cref="P:BootstrapBlazor.Components.ButtonBase.Text"/> 参数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountButton.CountTextCallback">
            <summary>
            倒计时格式化回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CountButton.OnClickButton">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CountButton.HandlerClick">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DialButton">
            <summary>
            拨号按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.ChildContent">
            <summary>
            数据项模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.ButtonTemplate">
            <summary>
            按钮模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.ItemTemplate">
            <summary>
            展开部分模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.Items">
            <summary>
            展开项集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.Color">
            <summary>
            获得/设置 按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.Duration">
            <summary>
            获得/设置 动画延时 默认 400 单位 ms 毫秒
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.Placement">
            <summary>
            获得/设置 位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.Radius">
            <summary>
            获得/设置 <see cref="P:BootstrapBlazor.Components.DialButton.DialMode"/> 为 <seealso cref="F:BootstrapBlazor.Components.DialMode.Radial"/> 时扇形分布半径值 默认 75;
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.Offset">
            <summary>
            获得/设置 弹窗便宜量 默认 8px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.Size">
            <summary>
            获得/设置 Size 大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.Icon">
            <summary>
            获得/设置 显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.IsAutoClose">
            <summary>
            获得/设置 是否自动关闭弹窗 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.OnClick">
            <summary>
            获得/设置 OnClick 事件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.DialMode">
            <summary>
            获得/设置 呈现方式 默认为 直线
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.ClassString">
            <summary>
            获得 按钮样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.ButtonClassString">
            <summary>
            获得 按钮样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButton.Disabled">
            <summary>
            获得 按钮 disabled 属性
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialButton.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialButton.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DialButtonItem">
            <summary>
            DialButtonItem 项组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButtonItem.Icon">
            <summary>
            获得/设置 显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButtonItem.Value">
            <summary>
            获得/设置 选项值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialButtonItem.ChildContent">
            <summary>
            获得/设置 组件内容
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialButtonItem.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialButtonItem.Dispose(System.Boolean)">
            <summary>
            资源销毁
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DialButtonItem.Dispose">
            <summary>
            资源销毁
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:BootstrapBlazor.Components.ExportPdfButton">
            <summary>
            导出 Pdf 按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButton.Selector">
            <summary>
            获得/设置 导出 Pdf 选择器 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButton.ElementId">
            <summary>
            获得/设置 导出 Pdf 元素 Id 默认为 null 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButton.StyleTags">
            <summary>
            获得/设置 导出 Pdf 所需样式表文件集合 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButton.ScriptTags">
            <summary>
            获得/设置 导出 Pdf 所需脚本文件集合 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButton.FileName">
            <summary>
            获得/设置 导出 Pdf 文件名 默认为 null 未设置时使用 pdf-时间戳.pdf
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButton.OnBeforeExport">
            <summary>
            获得/设置 导出 Pdf 之前回调委托 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButton.OnBeforeDownload">
            <summary>
            获得/设置 下载 Pdf 之前回调委托 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButton.OnAfterDownload">
            <summary>
            获得/设置 下载 Pdf 之后回调委托 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButton.AutoDownload">
            <summary>
            获得/设置 是否自动下载 Pdf 默认为 true
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ExportPdfButton.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ExportPdfButton.HandlerClick">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ExportPdfButton.SetOptions(BootstrapBlazor.Components.ExportPdfButtonOptions)">
            <summary>
            设置配置方法
            </summary>
            <param name="options"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ExportPdfButtonSettings">
            <summary>
            ExportPdfButtonSettings 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonSettings.Options">
            <summary>
            获得/设置 ExportPdfButtonOptions 参数配置类实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ExportPdfButtonSettings.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.LinkButton">
            <summary>
            LinkButton 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LinkButton.Url">
            <summary>
            获得/设置 Url 默认为 #
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LinkButton.Target">
            <summary>
            获得/设置 A 标签 target 参数 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LinkButton.ImageUrl">
            <summary>
            获得/设置 显示图片地址 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LinkButton.ImageCss">
            <summary>
            The css class of img element default value null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LinkButton.IsVertical">
            <summary>
            获得/设置 是否为垂直布局 默认 false
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PopConfirmButton">
            <summary>
            PopConfirmButton 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButton.Color">
            <summary>
            获得/设置 按钮颜色
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButton.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButton.ShowTooltip">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButton.RemoveTooltip">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButton.Show">
            <summary>
            显示确认弹窗方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButton.OnClickConfirm">
            <summary>
            确认回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.PopConfirmButtonBase">
            <summary>
            确认弹窗按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.PlacementString">
            <summary>
            弹窗位置字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.TriggerString">
            <summary>
            Trigger 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.IsLink">
            <summary>
            获得/设置 是否为 A 标签 默认 false 使用 button 渲染
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.Placement">
            <summary>
            获得/设置 弹窗显示位置 默认 <see cref="F:BootstrapBlazor.Components.Placement.Auto"/>
            </summary>
            <remarks>仅支持 <see cref="F:BootstrapBlazor.Components.Placement.Auto"/> <see cref="F:BootstrapBlazor.Components.Placement.Top"/> <see cref="F:BootstrapBlazor.Components.Placement.Right"/> <see cref="F:BootstrapBlazor.Components.Placement.Bottom"/> <see cref="F:BootstrapBlazor.Components.Placement.Left"/></remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.Trigger">
            <summary>
            获得/设置 弹窗触发方式 默认 click 可设置 hover focus
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.Content">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.BodyTemplate">
            <summary>
            获得/设置 自定义内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.OnConfirm">
            <summary>
            获得/设置 点击确认时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.ShowConfirmButton">
            <summary>
            获得/设置 是否显示确认按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.OnClose">
            <summary>
            获得/设置 点击关闭时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.ShowCloseButton">
            <summary>
            获得/设置 是否显示关闭按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.OnBeforeClick">
            <summary>
            获得/设置 点击确认弹窗前回调方法 返回真时弹出弹窗 返回假时不弹出 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.Title">
            <summary>
            获得/设置 显示标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.CloseButtonColor">
            <summary>
            获得/设置 确认按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.CloseButtonText">
            <summary>
            获得/设置 关闭按钮显示文字 默认为 关闭
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.CloseButtonIcon">
            <summary>
            获得/设置 关闭按钮显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.ConfirmButtonText">
            <summary>
            获得/设置 确认按钮显示文字 默认为 确定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.ConfirmButtonColor">
            <summary>
            获得/设置 确认按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.ConfirmButtonIcon">
            <summary>
            获得/设置 确认按钮显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.ConfirmIcon">
            <summary>
            获得/设置 确认框图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.CustomClass">
            <summary>
            获得/设置 自定义样式 默认 null
            </summary>
            <remarks>由 data-bs-custom-class 实现</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonBase.ShowShadow">
            <summary>
            获得/设置 是否显示阴影 默认 true
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButtonBase.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButtonBase.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButtonBase.TriggerCloseCallback">
            <summary>
            Trigger OnClose event callback.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.PopConfirmButtonContent">
            <summary>
            Popover Confirm 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.CloseButtonClass">
            <summary>
            获得 关闭按钮样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.ConfirmButtonClass">
            <summary>
            获得 关闭按钮样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.ShowConfirmButton">
            <summary>
            获得/设置 是否显示确认按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.ShowCloseButton">
            <summary>
            获得/设置 是否显示关闭按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.Title">
            <summary>
            获得/设置 显示标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.Content">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.ChildContent">
            <summary>
            获得/设置 自定义组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.CloseButtonIcon">
            <summary>
            获得/设置 关闭按钮显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.CloseButtonText">
            <summary>
            获得/设置 关闭按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.CloseButtonColor">
            <summary>
            获得/设置 确认按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.ConfirmButtonIcon">
            <summary>
            获得/设置 确认按钮显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.ConfirmButtonText">
            <summary>
            获得/设置 确认按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.ConfirmButtonColor">
            <summary>
            获得/设置 确认按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.Icon">
            <summary>
            获得/设置 确认框图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.OnConfirm">
            <summary>
            获得/设置 确认按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopConfirmButtonContent.OnClose">
            <summary>
            获得/设置 确认按钮回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButtonContent.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButtonContent.OnCloseClick">
            <summary>
            点击关闭按钮调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopConfirmButtonContent.OnConfirmClick">
            <summary>
            点击确认按钮调用此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PulseButton">
            <summary>
            PulseButton 按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PulseButton.ImageUrl">
            <summary>
            获得/设置 显示图片地址 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PulseButton.PulseColor">
            <summary>
            获得/设置 心跳环颜色 默认 <see cref="F:BootstrapBlazor.Components.Color.Warning"/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PulseButton.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ShareButton">
            <summary>
            分享按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ShareButton.ShareContext">
            <summary>
            获得/设置 分享内容上下文 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ShareButton.HandlerClick">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ShareButtonContext">
            <summary>
            分享按钮上下文类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ShareButtonContext.Title">
            <summary>
            获得/设置 分享标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ShareButtonContext.Text">
            <summary>
            获得/设置 分享描述文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ShareButtonContext.Url">
            <summary>
            获得/设置 分享链接地址
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SlideButton">
            <summary>
            SlideButton 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.SlideButtonItems">
            <summary>
            获得/设置 数据项模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.ButtonTemplate">
            <summary>
            获得/设置 按钮模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.ButtonItemTemplate">
            <summary>
            获得/设置 展开按钮项模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.BodyTemplate">
            <summary>
            获得/设置 展开部分模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.Items">
            <summary>
            获得/设置 展开项集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.HeaderText">
            <summary>
            获得/设置 展开项 Header 文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.Color">
            <summary>
            获得/设置 按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.Placement">
            <summary>
            获得/设置 按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.Offset">
            <summary>
            获得/设置 弹窗偏移量 默认 8px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.Size">
            <summary>
            获得/设置 Size 大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.Icon">
            <summary>
            获得/设置 显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.Text">
            <summary>
            获得/设置 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.IsAutoClose">
            <summary>
            获得/设置 是否自动关闭弹窗 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.OnClick">
            <summary>
            获得/设置 OnClick 事件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.ShowHeader">
            <summary>
            获得/设置 是否显示标题 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.HeaderTemplate">
            <summary>
            获得/设置 Header 部分模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.ClassString">
            <summary>
            获得 按钮样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.ButtonClassString">
            <summary>
            获得 按钮样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButton.Disabled">
            <summary>
            获得 按钮 disabled 属性
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SlideButton.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SlideButton.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SlideButtonItem">
            <summary>
            SlideButton 项组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButtonItem.Text">
            <summary>
            显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SlideButtonItem.Value">
            <summary>
            选项值
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SlideButtonItem.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SlideButtonItem.Dispose(System.Boolean)">
            <summary>
            资源销毁
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.SlideButtonItem.Dispose">
            <summary>
            资源销毁
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:BootstrapBlazor.Components.SwitchButton">
            <summary>
            Switch Button
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchButton.OnText">
            <summary>
            获得/设置 On 状态显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchButton.OffText">
            <summary>
            获得/设置 Off 状态显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchButton.ToggleState">
            <summary>
            获得/设置 当前状态
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchButton.ToggleStateChanged">
            <summary>
            状态切换回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwitchButton.OnClick">
            <summary>
            点击回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SwitchButton.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BodyTemplateContext">
            <summary>
            BodyTemplateContext 上下文类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BodyTemplateContext.Values">
            <summary>
            获得/设置 当前星期日数据集合
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Calendar">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Calendar.GetTitle">
            <summary>
            获得 当前日历框年月
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.WeekNumberText">
            <summary>
            获得 当前日历周文字
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Calendar.GetWeekDayString(System.Int32)">
            <summary>
            获得 周日期
            </summary>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Calendar.GetWeekDayClassString(System.Int32)">
            <summary>
            获得 周日期样式
            </summary>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Calendar.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.StartDate">
            <summary>
            获得/设置 日历框开始时间
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Calendar.GetWeekCount">
            <summary>
            获得 当前周数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.EndDate">
            <summary>
            获得/设置 日历框结束时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.Value">
            <summary>
            获得/设置 组件值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.ValueChanged">
            <summary>
            获得/设置 值改变时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.OnValueChanged">
            <summary>
            获得/设置 值改变时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.ViewMode">
            <summary>
            获得/设置 是否显示周视图 默认为 <see cref="F:BootstrapBlazor.Components.CalendarViewMode.Month"/> 月视图
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.ChildContent">
            <summary>
            获得/设置 周内容 <see cref="F:BootstrapBlazor.Components.CalendarViewMode.Week"/> 时有效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.HeaderTemplate">
            <summary>
            获得/设置 列头模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.BodyTemplate">
            <summary>
            获得/设置 Body 模板仅 <see cref="F:BootstrapBlazor.Components.CalendarViewMode.Month"/> 有效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.CellTemplate">
            <summary>
            获得/设置 单元格模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.ShowYearButtons">
            <summary>
            获得/设置 是否显示年按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Calendar.FirstDayOfWeek">
            <summary>
            获得/设置 星期第一天 默认 <see cref="F:System.DayOfWeek.Sunday"/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Calendar.OnCellClickCallback(System.DateTime)">
            <summary>
            选中日期时回调此方法
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Calendar.OnChangeYear(System.Int32)">
            <summary>
            右侧快捷切换年按钮回调此方法
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Calendar.OnChangeMonth(System.Int32)">
            <summary>
            右侧快捷切换月按钮回调此方法
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Calendar.OnChangeWeek(System.Int32)">
            <summary>
            右侧快捷切换周按钮回调此方法
            </summary>
            <param name="offset"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.CalendarCellValue">
            <summary>
            日历组件单元格值结构体
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CalendarCellValue.CellValue">
            <summary>
            获得/设置 当前单元格值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CalendarCellValue.CalendarValue">
            <summary>
            获得/设置 日历框组件值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CalendarCellValue.DefaultCss">
            <summary>
            获得/设置 单元格默认样式
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Camera">
            <summary>
            Camera 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.DeviceId">
            <summary>
            获得/设置 当前设备 Id 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.AutoStart">
            <summary>
            获得/设置 是否自动开启摄像头 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.VideoWidth">
            <summary>
            获得/设置 摄像头视频宽度 默认 320
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.VideoHeight">
            <summary>
            获得/设置 摄像头视频高度 默认 240
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.CaptureJpeg">
            <summary>
            获得/设置 拍照格式为 Jpeg 默认为 false 使用 png 格式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.Quality">
            <summary>
            获得/设置 图像质量 默认为 0.9
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.OnInit">
            <summary>
            获得/设置 初始化摄像头回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.OnError">
            <summary>
            获得/设置 拍照出错回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.OnOpen">
            <summary>
            获得/设置 打开摄像头回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Camera.OnClose">
            <summary>
            获得/设置 关闭摄像头回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.Open">
            <summary>
            打开摄像头
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.Close">
            <summary>
            关闭摄像头
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.Capture">
            <summary>
            拍照方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.SaveAndDownload(System.String)">
            <summary>
            保存并下载图片
            </summary>
            <param name="fileName">文件名</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.Resize(System.Int32,System.Int32)">
            <summary>
            重置宽高方法
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.TriggerInit(System.Collections.Generic.List{BootstrapBlazor.Components.DeviceItem})">
            <summary>
            初始化设备方法
            </summary>
            <param name="devices"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.TriggerError(System.String)">
            <summary>
            扫描发生错误回调方法
            </summary>
            <param name="err"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.TriggerOpen">
            <summary>
            开启摄像头回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Camera.TriggerClose">
            <summary>
            停止摄像头回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DeviceItem">
            <summary>
            摄像头信息类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DeviceItem.DeviceId">
            <summary>
            获得/设置 设备 ID
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DeviceItem.Label">
            <summary>
            获得/设置 设备标签
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Captcha">
            <summary>
            Captcha 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.StyleString">
            <summary>
            获得 组件宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.FailedStyle">
            <summary>
            获得 加载图片失败样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.HeaderText">
            <summary>
            获得/设置 Header 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.BarText">
            <summary>
            获得/设置 Bar 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.FailedText">
            <summary>
            获得/设置 Bar 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.LoadText">
            <summary>
            获得/设置 Bar 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.OnValidAsync">
            <summary>
            获得/设置 验证码结果回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.ImagesPath">
            <summary>
            获得/设置 图床路径 默认值为 images
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.ImagesName">
            <summary>
            获得/设置 图床路径 默认值为 Pic.jpg
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.GetImageName">
            <summary>
            获得/设置 获取背景图方法委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.Offset">
            <summary>
            获得/设置 容错偏差
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.Width">
            <summary>
            获得/设置 图片宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.SideLength">
            <summary>
            获得/设置 拼图边长
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.Diameter">
            <summary>
            获得/设置 拼图直径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.Height">
            <summary>
            获得/设置 图片高度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.RefreshIcon">
            <summary>
            获得/设置 刷新按钮图标 默认值 fa-solid fa-arrows-rotate
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.Max">
            <summary>
            获得/设置 随机图片最大张数 默认 1024
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Captcha.BarIcon">
            <summary>
            获得/设置 刷新按钮图标 默认值 fa-solid fa-arrow-right
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Captcha.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Captcha.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Captcha.OnClickRefresh">
            <summary>
            点击刷新按钮时回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Captcha.Verify(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            验证方差方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Captcha.Reset">
            <summary>
            重置组件方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CaptchaOption">
            <summary>
            Captcha 滑块验证码组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.Width">
            <summary>
            获得/设置 验证码图片宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.Height">
            <summary>
            获得/设置 验证码图片高度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.SideLength">
            <summary>
            获得/设置 拼图边长 默认 42
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.Diameter">
            <summary>
            获得/设置 拼图直径 默认 9
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.OffsetX">
            <summary>
            获得/设置 拼图 X 位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.OffsetY">
            <summary>
            获得/设置 拼图 Y 位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.BarWidth">
            <summary>
            获得/设置 拼图宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CaptchaOption.ImageUrl">
            <summary>
            获得/设置 拼图背景图片路径
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Card">
            <summary>
            Card 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.ClassString">
            <summary>
            Card 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.ArrowClassString">
            <summary>
            获得 收缩图标样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.BodyClassName">
            <summary>
             设置 Body Class 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.ExpandedString">
            <summary>
            节点是否展开 aria Label
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.FooterClassName">
            <summary>
            设置 Footer Class 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.HeaderPaddingY">
            <summary>
            获得/设置 Card Header 高度 padding Y轴值 默认 null
            <para>单位需自行给定 如 0.25rem</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.CollapseIcon">
            <summary>
            获得/设置 收缩展开箭头图标 默认 fa-solid fa-circle-chevron-right
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.HeaderText">
            <summary>
            获得/设置 HeaderTemplate 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.HeaderTemplate">
            <summary>
            获得/设置 CardHeard 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.BodyTemplate">
            <summary>
            获得/设置 BodyTemplate 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.FooterTemplate">
            <summary>
            获得/设置 FooterTemplate 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.Color">
            <summary>
            获得/设置 Card 颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.IsCenter">
            <summary>
            获得/设置 是否居中 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.IsCollapsible">
            <summary>
            获得/设置 是否可收缩 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.Collapsed">
            <summary>
            获得/设置 是否收缩 默认 false 展开
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.CollapsedChanged">
            <summary>
            获得/设置 是否收缩 默认 false 展开
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Card.IsShadow">
            <summary>
            获得/设置 是否显示阴影 默认 false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Card.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Card.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Card.ToggleCollapse(System.Boolean)">
            <summary>
            The callback click collapse button
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Carousel">
            <summary>
            Carousel 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.ClassName">
            <summary>
            获得 class 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.TargetId">
            <summary>
            获得 data-target 属性值
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.StyleName">
            <summary>
            获得 Style 样式
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Carousel.CheckActive(System.Int32,System.String)">
            <summary>
            检查是否 active
            </summary>
            <param name="index"></param>
            <param name="css"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.Images">
            <summary>
            获得 Images 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.Width">
            <summary>
            获得/设置 内部图片的宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.IsFade">
            <summary>
            获得/设置 是否采用淡入淡出效果 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.OnClick">
            <summary>
            获得/设置 点击 Image 回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.OnSlideChanged">
            <summary>
            获得/设置 幻灯片切换后回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.ChildContent">
            <summary>
            获得/设置 子组件 要求使用 <see cref="T:BootstrapBlazor.Components.CarouselItem"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.ShowControls">
            <summary>
            获得/设置 是否显示控制按钮 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.ShowIndicators">
            <summary>
            获得/设置 是否显示指示标志 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.DisableTouchSwiping">
            <summary>
            获得/设置 是否禁用移动端手势滑动 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.PreviousIcon">
            <summary>
            获得/设置 上一页图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.NextIcon">
            <summary>
            获得/设置 下一页图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.HoverPause">
            <summary>
            获得/设置 鼠标悬停时是否暂停播放 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Carousel.PlayMode">
            <summary>
            获得/设置 自动播放方式 默认 <see cref="F:BootstrapBlazor.Components.CarouselPlayMode.AutoPlayOnload"/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Carousel.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Carousel.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Carousel.OnClickImage(System.String)">
            <summary>
            点击 Image 是触发此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Carousel.AddItem(BootstrapBlazor.Components.CarouselItem)">
            <summary>
            添加子项
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Carousel.RemoveItem(BootstrapBlazor.Components.CarouselItem)">
            <summary>
            移除子项
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Carousel.TriggerSlideChanged(System.Int32)">
            <summary>
            幻灯片切换事件回调 由 JavaScript 调用
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.CarouselImage">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselImage.ImageUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselImage.OnClick">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CarouselItem">
            <summary>
            CarouselItem 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselItem.ChildContent">
            <summary>
            获得/设置 子组件 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselItem.Caption">
            <summary>
            获得/设置 Caption 文字 默认 null 可设置 <see cref="P:BootstrapBlazor.Components.CarouselItem.CaptionTemplate"/> 自定义
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselItem.CaptionClass">
            <summary>
            获得/设置 Caption 样式 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselItem.CaptionTemplate">
            <summary>
            获得/设置 Caption 模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselItem.Interval">
            <summary>
            获得/设置 Slider 切换时间间隔 默认 5000
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselItem.IntervalString">
            <summary>
            获得 Interval 字符串
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CarouselItem.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselItem.GetCaptionClassString">
            <summary>
            获得 当前 Item Caption 样式字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CarouselItem.ShowCaption">
            <summary>
            获得 是否显示 Caption
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CarouselItem.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CarouselItem.Dispose">
            <summary>
            Dispose 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Cascader`1">
            <summary>
            Cascader 组件实现类
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.SelectedItems">
            <summary>
            当前选中节点集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.InputId">
            <summary>
            获得/设置 Cascader 内部 Input 组件 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.DisplayTextString">
            <summary>
            获得/设置 组件显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.Color">
            <summary>
            获得/设置 按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.PlaceHolder">
            <summary>
            获得/设置 组件 PlaceHolder 文字 默认为 请选择 ...
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.Items">
            <summary>
            获得/设置 绑定数据集
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.OnSelectedItemChanged">
            <summary>
            获得/设置 ValueChanged 方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.ParentSelectable">
            <summary>
            获得/设置 父节点是否可选择 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.ShowFullLevels">
            <summary>
            获得/设置 是否显示全路径 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.Icon">
            <summary>
            获得/设置 菜单指示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.SubMenuIcon">
            <summary>
            获得/设置 子菜单指示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.IsClearable">
            <summary>
            获得/设置 是否可清除 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.ClearIcon">
            <summary>
            获得/设置 右侧清除图标 默认 fa-solid fa-angle-up
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.OnClearAsync">
            <summary>
            获得/设置 清除文本内容 OnClear 回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.OnBlurAsync">
            <summary>
            获得/设置 失去焦点回调方法 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Cascader`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Cascader`1.OnBlur">
            <summary>
            失去焦点时回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Cascader`1.SetDefaultValue(System.String)">
            <summary>
            设置默认选中
            </summary>
            <param name="defaultValue"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Cascader`1.GetNodeByValue(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.CascaderItem},System.String)">
            <summary>
            根据指定值获取节点
            </summary>
            <param name="items"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.InputClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Cascader`1.AppendClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Cascader`1.ActiveItem(System.String,BootstrapBlazor.Components.CascaderItem)">
            <summary>
            选择项是否 Active 方法
            </summary>
            <param name="className"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Cascader`1.OnItemClick(BootstrapBlazor.Components.CascaderItem)">
            <summary>
            下拉框选项点击时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Cascader`1.SetSelectedNodeWithParent(BootstrapBlazor.Components.CascaderItem,System.Collections.Generic.List{BootstrapBlazor.Components.CascaderItem})">
            <summary>
            设置选中所有父节点
            </summary>
            <param name="item"></param>
            <param name="list"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.CascaderItem">
            <summary>
            级联选项类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CascaderItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CascaderItem.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CascaderItem.Parent">
            <summary>
            获得 父级节点
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CascaderItem.Items">
            <summary>
            获得/设置 子节点数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CascaderItem.Text">
            <summary>
            获得/设置 显示名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CascaderItem.Value">
            <summary>
            获得/设置 选项值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CascaderItem.HasChildren">
            <summary>
            获得 是否存在子节点
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CascaderItem.AddItem(BootstrapBlazor.Components.CascaderItem)">
            <summary>
            添加 CascaderItem 方法 由 CascaderItem 方法加载时调用
            </summary>
            <param name="item">CascaderItem 实例</param>
        </member>
        <member name="T:BootstrapBlazor.Components.SubCascader">
            <summary>
            SubCascader 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SubCascader.Items">
            <summary>
            获得/设置 组件数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SubCascader.OnClick">
            <summary>
            获得/设置 选择项点击回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SubCascader.SubMenuIcon">
            <summary>
            获得/设置 子菜单指示图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SubCascader.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Checkbox`1">
            <summary>
            Checkbox 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Checkbox`1.ClassString">
            <summary>
            获得 class 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Checkbox`1.InputClassString">
            <summary>
            Input 元素样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Checkbox`1.CheckedString">
            <summary>
            Check 状态字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Checkbox`1.IsBoolean">
            <summary>
            判断双向绑定类型是否为 boolean 类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Checkbox`1.Color">
            <summary>
            获得/设置 按钮颜色 默认为 None 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Checkbox`1.Size">
            <summary>
            获得/设置 Size 大小 默认为 None
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Checkbox`1.ShowAfterLabel">
            <summary>
            获得/设置 是否显示 Checkbox 后置 label 文字 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Checkbox`1.State">
            <summary>
            获得/设置 选择框状态
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Checkbox`1.StateChanged">
            <summary>
            获得/设置 State 状态改变回调方法
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Checkbox`1.OnBeforeStateChanged">
            <summary>
            获得/设置 选中状态改变前回调此方法 返回 false 可以阻止状态改变
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Checkbox`1.OnStateChanged">
            <summary>
            获得/设置 选择框状态改变时回调此方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Checkbox`1.StopPropagation">
            <summary>
            获得/设置 是否事件冒泡 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Checkbox`1.ChildContent">
            <summary>
            获得/设置 子组件 RenderFragment 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Checkbox`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Checkbox`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Checkbox`1.OnAfterRender(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Checkbox`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Checkbox`1.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Checkbox`1.OnToggleClick">
            <summary>
            点击组件触发方法 内部调用 <see cref="P:BootstrapBlazor.Components.Checkbox`1.OnBeforeStateChanged"/> 回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Checkbox`1.OnStateChangedAsync(BootstrapBlazor.Components.CheckboxState)">
            <summary>
            触发 Click 方法 由 JavaScript 调用
            </summary>
            <returns></returns>
        </member>
        <member name="F:BootstrapBlazor.Components.Checkbox`1._paddingStateChanged">
            <summary>
            此变量为了提高性能，避免循环更新
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Checkbox`1.SetState(BootstrapBlazor.Components.CheckboxState)">
            <summary>
            设置 复选框状态方法
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.CheckboxList`1">
            <summary>
            CheckboxList 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxList`1.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxList`1.CheckboxItemClassString">
            <summary>
            获得 组件内部 Checkbox 项目样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxList`1.Items">
            <summary>
            获得/设置 数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxList`1.IsButton">
            <summary>
            获得/设置 是否为按钮样式 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxList`1.CheckboxItemClass">
            <summary>
            获得/设置 Checkbox 组件布局样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxList`1.ShowBorder">
            <summary>
            获得/设置 是否显示边框 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxList`1.IsVertical">
            <summary>
            获得/设置 是否为竖向排列 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxList`1.Color">
            <summary>
            获得/设置 按钮颜色 默认为 None 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxList`1.OnSelectedChanged">
            <summary>
            获得/设置 SelectedItemChanged 方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxList`1.MaxSelectedCount">
            <summary>
            获得/设置 最多选中数量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxList`1.OnMaxSelectedCountExceed">
            <summary>
            获得/设置 超过最大选中数量时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxList`1.ItemTemplate">
            <summary>
            获得/设置 项模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxList`1.GetDisabledState(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            获得 当前选项是否被禁用
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxList`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxList`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxList`1.FormatValueAsString(`0)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxList`1.ProcessGenericItems(System.Type,System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="typeValue"></param>
            <param name="list"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxList`1.OnStateChanged(BootstrapBlazor.Components.SelectedItem,System.Boolean)">
            <summary>
            Checkbox 组件选项状态改变时触发此方法
            </summary>
            <param name="item"></param>
            <param name="v"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxList`1.OnClick(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            点击选择框方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxList`1.EnsureParameterValid">
            <summary>
            泛型参数约束检查
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CheckboxListGeneric`1">
            <summary>
            CheckboxList 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.CheckboxItemClassString">
            <summary>
            获得 组件内部 Checkbox 项目样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.CustomKeyAttribute">
            <summary>
            获得/设置 数据主键标识标签 默认为 <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute"/><code><br /></code>用于判断数据主键标签，如果模型未设置主键时可使用 <see cref="P:BootstrapBlazor.Components.CheckboxListGeneric`1.ModelEqualityComparer"/> 参数自定义判断 <code><br /></code>数据模型支持联合主键
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.ModelEqualityComparer">
            <summary>
            获得/设置 比较数据是否相同回调方法 默认为 null
            <para>提供此回调方法时忽略 <see cref="P:BootstrapBlazor.Components.CheckboxListGeneric`1.CustomKeyAttribute"/> 属性</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.Items">
            <summary>
            获得/设置 数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.IsButton">
            <summary>
            获得/设置 是否为按钮样式 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.CheckboxItemClass">
            <summary>
            获得/设置 Checkbox 组件布局样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.ShowBorder">
            <summary>
            获得/设置 是否显示边框 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.IsVertical">
            <summary>
            获得/设置 是否为竖向排列 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.Color">
            <summary>
            获得/设置 按钮颜色 默认为 None 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.OnSelectedChanged">
            <summary>
            获得/设置 SelectedItemChanged 方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.MaxSelectedCount">
            <summary>
            获得/设置 最多选中数量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.OnMaxSelectedCountExceed">
            <summary>
            获得/设置 超过最大选中数量时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CheckboxListGeneric`1.ItemTemplate">
            <summary>
            获得/设置 项模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxListGeneric`1.GetDisabledState(BootstrapBlazor.Components.SelectedItem{`0})">
            <summary>
            获得 当前选项是否被禁用
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxListGeneric`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxListGeneric`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxListGeneric`1.OnStateChanged(BootstrapBlazor.Components.SelectedItem{`0},System.Boolean)">
            <summary>
            Checkbox 组件选项状态改变时触发此方法
            </summary>
            <param name="item"></param>
            <param name="v"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxListGeneric`1.OnClick(BootstrapBlazor.Components.SelectedItem{`0})">
            <summary>
            点击选择框方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CheckboxListGeneric`1.Equals(`0,`0)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Circle">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Circle.Value">
            <summary>
            获得/设置 当前值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Circle.ValueString">
            <summary>
            获得/设置 当前进度值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Circle.ValueTitleString">
            <summary>
            获得/设置 Title 字符串
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CircleBase">
            <summary>
            Circle 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.ClassString">
            <summary>
            获得 组件样式字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.PrevStyleString">
            <summary>
            获得 预览框 Style 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.ProgressClassString">
            <summary>
            获得 进度条样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.DashString">
            <summary>
            获得/设置 Dash 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.CircleDiameter">
            <summary>
            获得/设置 圆形进度半径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.CircleR">
            <summary>
            获得/设置 半径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.CircleLength">
            <summary>
            获得 圆形周长
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.Width">
            <summary>
            获得/设置 文件预览框宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.StrokeWidth">
            <summary>
            获得/设置 进度条宽度 默认为 2
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.Color">
            <summary>
            获得/设置 组件进度条颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.ShowProgress">
            <summary>
            获得/设置 是否显示进度百分比 默认显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CircleBase.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CircleBase.OnParametersSet">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ClipboardItem">
            <summary>
            Represents an item on the clipboard with associated data and metadata.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClipboardItem.MimeType">
            <summary>
            Gets or sets the Internet Media Type (MIME type) of the content stored in the clipboard item.
            </summary>
            <remarks>
            The MIME type is used to specify the nature and format of the data stored in the clipboard.
            It can be used to determine how the data should be handled or presented.
            </remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.ClipboardItem.Data">
            <summary>
            Gets or sets the raw data of the clipboard item.
            </summary>
            <remarks>
            The data is stored as a byte array, allowing for any binary or text content
            to be represented. The interpretation of the data depends on the MIME type.
            </remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.ClipboardItem.Text">
            <summary>
            Retrieves a text representation of the clipboard item if the MIME type indicates text content.
            </summary>
            <value>
            A string containing the text representation of the data if the MIME type starts with "text/",
            otherwise an empty string.
            </value>
            <remarks>
            This property checks the MIME type of the clipboard item and, if it's a text type,
            converts the byte array to a UTF-8 encoded string. If the data is not text or the MIME type
            is not specified, it returns an empty string.
            </remarks>
        </member>
        <member name="T:BootstrapBlazor.Components.ClockPicker">
            <summary>
            ClockPicker 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClockPicker.ClassString">
            <summary>
            获得/设置 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClockPicker.ShowClockScale">
            <summary>
            获得/设置 是否显示表盘刻度 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClockPicker.ShowSecond">
            <summary>
            获得/设置 是否显示秒 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClockPicker.ShowMinute">
            <summary>
            获得/设置 是否显示分钟 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClockPicker.IsAutoSwitch">
            <summary>
            获得/设置 是否自动切换 小时、分钟、秒 自动切换 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClockPicker.Mode">
            <summary>
            is hour or min or sec mode
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ClockPicker.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ClockPicker.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ClockPicker.Reset">
            <summary>
            复位方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ClockPicker.SetTime(System.Int32,System.Int32,System.Int32)">
            <summary>
            JSInvoke 调用此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Collapse">
            <summary>
            Collapse 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Collapse.Items">
            <summary>
            获得/设置 CollapseItem 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Collapse.IsAccordion">
            <summary>
            获得/设置 是否为手风琴效果 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Collapse.CollapseItems">
            <summary>
            获得/设置 CollapseItems 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Collapse.OnCollapseChanged">
            <summary>
            获得/设置 CollapseItem 展开收缩时回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Collapse.AddItem(BootstrapBlazor.Components.CollapseItem)">
            <summary>
            添加 CollapseItem 方法 由 CollapseItem 方法加载时调用
            </summary>
            <param name="item">TabItemBase 实例</param>
        </member>
        <member name="M:BootstrapBlazor.Components.Collapse.RemoveItem(BootstrapBlazor.Components.CollapseItem)">
            <summary>
            移除 CollapseItem 方法 由 CollapseItem 方法 Dispose 时调用
            </summary>
            <param name="item">TabItemBase 实例</param>
        </member>
        <member name="T:BootstrapBlazor.Components.CollapseItem">
            <summary>
            CollapseItem 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.Text">
            <summary>
            获得/设置 文本文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.IsCollapsed">
            <summary>
            获得/设置 当前状态是否收缩 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.Icon">
            <summary>
            获得/设置 图标字符串 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.TitleColor">
            <summary>
            获得/设置 标题颜色 默认无颜色 Color.None
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.Class">
            <summary>
            获得/设置 CSS 样式名称 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.ChildContent">
            <summary>
            获得/设置 组件内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.HeaderClass">
            <summary>
            获得/设置 Header CSS 样式名称 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.HeaderTemplate">
            <summary>
            获得/设置 组件 Header 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CollapseItem.Collapse">
            <summary>
            获得/设置 所属 Collapse 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CollapseItem.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CollapseItem.SetCollapsed(System.Boolean)">
            <summary>
            设置是否被选中方法
            </summary>
            <param name="collapsed"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CollapseItem.Dispose(System.Boolean)">
            <summary>
            资源销毁
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CollapseItem.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ColorPicker">
            <summary>
            ColorPicker 颜色拾取器组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ColorPicker.ClassName">
            <summary>
            获得 class 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ColorPicker.Template">
            <summary>
            获得/设置 显示模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ColorPicker.Formatter">
            <summary>
            获得/设置 显示颜色值格式化回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ColorPicker.IsSupportOpacity">
            <summary>
            获得/设置 是否支持透明度 默认 false 不支持
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ColorPicker.Swatches">
            <summary>
            获得/设置 预设候选颜色 <see cref="P:BootstrapBlazor.Components.ColorPicker.IsSupportOpacity"/> 开启时生效 默认 null
            </summary>
            <remarks>字符串集合格式为 ["rgba(244, 67, 54, 1)", "rgba(233, 30, 99, 0.95)"]</remarks>
        </member>
        <member name="M:BootstrapBlazor.Components.ColorPicker.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ColorPicker.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ColorPicker.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ColorPicker.OnColorChanged(System.String)">
            <summary>
            选中颜色值变化时回调此方法 由 JavaScript 调用
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ConnectionHub">
            <summary>
            客户端链接组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ConnectionHub.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ConnectionHub.Callback(BootstrapBlazor.Components.ClientInfo)">
            <summary>
            JSInvoke 回调方法
            </summary>
            <param name="client"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ConnectionItem">
            <summary>
            连接对象实体类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConnectionItem.Id">
            <summary>
            获得/设置 连接 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConnectionItem.ClientInfo">
            <summary>
            获得/设置 连接 Ip 地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConnectionItem.ConnectionTime">
            <summary>
            获得/设置 开始连接时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConnectionItem.LastBeatTime">
            <summary>
            获得/设置 上次心跳时间
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Console">
            <summary>
            控制台消息组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.BodyStyleString">
            <summary>
            获得 Console Body Style 字符串
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Console.GetClassString(BootstrapBlazor.Components.ConsoleMessageItem)">
            <summary>
            获取消息样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.AutoScrollString">
            <summary>
            获得 客户端是否自动滚屏标识
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.Items">
            <summary>
            获得/设置 组件绑定数据源
            </summary>
            <remarks><see cref="T:BootstrapBlazor.Components.ConsoleMessageCollection"/> 集合内置了最大消息数量功能</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.HeaderText">
            <summary>
            获得/设置 Header 显示文字 默认值为 系统监控
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.LightTitle">
            <summary>
            获得/设置 指示灯 Title 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.IsFlashLight">
            <summary>
            获得/设置 指示灯 是否闪烁 默认 true 闪烁
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.LightColor">
            <summary>
            获得/设置 指示灯颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.ShowLight">
            <summary>
            获得/设置 是否显示指示灯 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.AutoScrollText">
            <summary>
            获得/设置 自动滚屏显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.ShowAutoScroll">
            <summary>
            获得/设置 是否显示自动滚屏选项 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.IsAutoScroll">
            <summary>
            获得/设置 是否自动滚屏 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.ClearButtonText">
            <summary>
            获得/设置 按钮 显示文字 默认值为 清屏
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.ClearButtonIcon">
            <summary>
            获得/设置 按钮 显示图标 默认值为 fa-solid fa-xmark
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.ClearButtonColor">
            <summary>
            获得/设置 清除按钮颜色 默认值为 Color.Secondary
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.OnClear">
            <summary>
            获得/设置 清空委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.Height">
            <summary>
            获得/设置 组件高度 默认为 126px;
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.FooterTemplate">
            <summary>
            获得/设置 Footer 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.HeaderTemplate">
            <summary>
            获得/设置 Header 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.ItemTemplate">
            <summary>
            获得/设置 Item 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Console.ShowFooter">
            <summary>
            获得 是否显示 Footer
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Console.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Console.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Console.OnClearConsole">
            <summary>
            清空控制台消息方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ConsoleLogger">
            <summary>
            Logger 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleLogger.Max">
            <summary>
            获得/设置 最大行数 默认 3 行
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleLogger.IsHtml">
            <summary>
            获得/设置 是否为 Html 代码 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleLogger.ClassName">
            <summary>
            获得 按钮样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ConsoleLogger.Log(System.String)">
            <summary>
            输入日志方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ConsoleMessageCollection">
            <summary>
            Console 组件消息辅助类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ConsoleMessageCollection.#ctor(System.Int32)">
            <summary>
            Console 组件消息辅助类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleMessageCollection.MaxCount">
            <summary>
            获得/设置 最大记录数 默认 2000
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ConsoleMessageCollection.Add(BootstrapBlazor.Components.ConsoleMessageItem)">
            <summary>
            添加方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ConsoleMessageCollection.Clear">
            <summary>
            清空集合方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ConsoleMessageCollection.GetEnumerator">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ConsoleMessageCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:BootstrapBlazor.Components.ConsoleMessageCollection.Dispose">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ConsoleMessageItem">
            <summary>
            控制台消息实体类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleMessageItem.Message">
            <summary>
            获得/设置 控制台输出消息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleMessageItem.Color">
            <summary>
            获得/设置 控制台消息颜色 默认为 White 白色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleMessageItem.CssClass">
            <summary>
            获得/设置 自定义样式名称 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConsoleMessageItem.IsHtml">
            <summary>
            获得/设置 是否为 Html 原生字符串 默认 false
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ContextMenu">
            <summary>
            ContextMenu 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenu.ShowShadow">
            <summary>
            获得/设置 是否显示阴影 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenu.OnBeforeShowCallback">
            <summary>
            获得/设置 弹出前回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenu.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenu.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenu.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenu.Show(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Object)">
            <summary>
            弹出 ContextMenu
            </summary>
            <param name="args"></param>
            <param name="contextItem"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenu.AddItem(BootstrapBlazor.Components.IContextMenuItem)">
            <summary>
            增加 ContextMenuItem 方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenu.RemoveItem(BootstrapBlazor.Components.IContextMenuItem)">
            <summary>
            移除 ContextMenuItem 方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ContextMenuDivider">
            <summary>
            ContextMenuDivider 组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenuDivider.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenuDivider.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenuDivider.Dispose(System.Boolean)">
            <summary>
            释放资源方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenuDivider.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ContextMenuItem">
            <summary>
            ContextMenuItem 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenuItem.Text">
            <summary>
            获得/设置 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenuItem.Icon">
            <summary>
            获得/设置 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenuItem.Disabled">
            <summary>
            获得/设置 是否被禁用 默认 false 优先级低于 <see cref="P:BootstrapBlazor.Components.ContextMenuItem.OnDisabledCallback"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenuItem.OnDisabledCallback">
            <summary>
            获得/设置 是否被禁用回调方法 默认 null 优先级高于 <see cref="P:BootstrapBlazor.Components.ContextMenuItem.Disabled"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenuItem.OnClick">
            <summary>
            获得/设置 点击回调方法 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenuItem.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenuItem.Dispose(System.Boolean)">
            <summary>
            释放资源方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenuItem.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ContextMenuTrigger">
            <summary>
            ContextMenuTrigger 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenuTrigger.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenuTrigger.WrapperTag">
            <summary>
            获得/设置 包裹组件 TagName 默认为 div
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenuTrigger.ContextItem">
            <summary>
            获得/设置 上下文数据
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenuTrigger.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenuTrigger.OnContextMenu(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            点击 ContextMenu 菜单项时触发
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenuTrigger.TouchStart">
            <summary>
            是否触摸
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenuTrigger.IsBusy">
            <summary>
            触摸定时器工作指示
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ContextMenuZone">
            <summary>
            ContextMenuZone 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenuZone.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenuZone.OnContextMenu(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Object)">
            <summary>
            Trigger 调用
            </summary>
            <param name="args"></param>
            <param name="contextItem"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ContextMenuZone.RegisterContextMenu(BootstrapBlazor.Components.ContextMenu)">
            <summary>
            ContextMenu 组件调用
            </summary>
            <param name="contextMenu"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.IContextMenuItem">
            <summary>
            IContextMenuItem 接口
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CountUp`1">
            <summary>
            CountUp 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUp`1.Value">
            <summary>
            获得/设置 Value 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUp`1.Option">
            <summary>
            获得/设置 计数配置项 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUp`1.OnCompleted">
            <summary>
            获得/设置 计数结束回调方法 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CountUp`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CountUp`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CountUp`1.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CountUp`1.OnCompleteCallback">
            <summary>
            OnCompleted 回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.CountUpOption">
            <summary>
            CountUp 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.StartValue">
            <summary>
            开始计数值 默认 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.DecimalPlaces">
            <summary>
            小数位数 默认 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.Duration">
            <summary>
            动画时长 默认 2.0 单位秒
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.UseIndianSeparators">
            <summary>
            是否使用分隔符 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.UseEasing">
            <summary>
            是否使用过渡动画 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.UseGrouping">
            <summary>
            是否分组 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.Separator">
            <summary>
            分隔符 默认 逗号 ,
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.Decimal">
            <summary>
            小数点符号 默认 点 .
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.Prefix">
            <summary>
            前缀文本 默认 string.Empty 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.Suffix">
            <summary>
            后缀文本 默认 string.Empty 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.SmartEasingThreshold">
            <summary>
            动画阈值 默认 999
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.SmartEasingAmount">
            <summary>
            动画总量 默认 333
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.EnableScrollSpy">
            <summary>
            是否启用滚动监听 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.ScrollSpyDelay">
            <summary>
            滚动延时 默认 200 毫秒
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.ScrollSpyOnce">
            <summary>
            滚动监听一次 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CountUpOption.Numerals">
            <summary>
            numeral glyph substitution default null
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DatePickerBody">
            <summary>
            日期选择组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.StartDate">
            <summary>
            获得/设置 日历框开始时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.EndDate">
            <summary>
            获得/设置 日历框结束时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.CurrentDate">
            <summary>
            获得/设置 当前日历框月份
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.CurrentTime">
            <summary>
            获得/设置 当前日历框时刻值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.SelectValue">
            <summary>
            获得/设置 当前选中时间 未点击确认时 与 Value 可能不一致
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowTimePicker">
            <summary>
            获得/设置 是否显示时刻选择框
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetDayClass(System.DateTime,System.Boolean)">
            <summary>
            获得/设置 日期样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.PrevMonthClassName">
            <summary>
            获得 上一月按钮样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.NextMonthClassName">
            <summary>
            获得 下一月按钮样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.DateViewClassName">
            <summary>
            获得 年月日显示表格样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.YearViewClassName">
            <summary>
            获得 年月日显示表格样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.MonthViewClassName">
            <summary>
            获得 年月日显示表格样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.CurrentMonthViewClassName">
            <summary>
            获得 年月日显示表格样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.YearString">
            <summary>
            获得 年显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.CurrentViewMode">
            <summary>
            获得/设置 组件显示模式 默认为显示年月日模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ViewMode">
            <summary>
            获得/设置 组件显示模式 默认为显示年月日模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.DateTimeFormat">
            <summary>
            获得/设置 日期时间格式字符串 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.DateFormat">
            <summary>
            获得/设置 日期格式字符串 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.TimeFormat">
            <summary>
            获得/设置 时间格式字符串 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowSidebar">
            <summary>
            获得/设置 是否显示快捷侧边栏 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.SidebarTemplate">
            <summary>
            获得/设置 侧边栏模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowLeftButtons">
            <summary>
            获得/设置 是否显示左侧控制按钮 默认显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowRightButtons">
            <summary>
            获得/设置 是否显示右侧控制按钮 默认显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowFooter">
            <summary>
            获得/设置 是否显示 Footer 区域 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.TimePlaceHolder">
            <summary>
            获得/设置 时间 PlaceHolder 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.DatePlaceHolder">
            <summary>
            获得/设置 日期 PlaceHolder 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.AllowNull">
            <summary>
            获得/设置 是否允许为空 默认 false 不允许为空
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowClearButton">
            <summary>
            获得/设置 是否显示 Clear 按钮 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.AutoClose">
            <summary>
            获得/设置 点击日期时是否自动关闭弹窗 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.OnConfirm">
            <summary>
            获得/设置 确认按钮回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.OnClear">
            <summary>
            获得/设置 清空按钮回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ClearButtonText">
            <summary>
            获得/设置 清空按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.NowButtonText">
            <summary>
            获得/设置 此刻按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ConfirmButtonText">
            <summary>
            获得/设置 确定按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.Value">
            <summary>
            获得/设置 组件值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ValueChanged">
            <summary>
            获得/设置 组件值改变时回调委托供双向绑定使用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.MaxValue">
            <summary>
            获得/设置 当前日期最大值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.MinValue">
            <summary>
            获得/设置 当前日期最小值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.PreviousYearIcon">
            <summary>
            获得/设置 上一年图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.NextYearIcon">
            <summary>
            获得/设置 上一年图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.PreviousMonthIcon">
            <summary>
            获得/设置 上一年图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.NextMonthIcon">
            <summary>
            获得/设置 上一年图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ChildContent">
            <summary>
            获得/设置 子组件模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.OnDateChanged">
            <summary>
            获得/设置 年月改变时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.DayTemplate">
            <summary>
            获得/设置 日单元格模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.DayDisabledTemplate">
            <summary>
            获得/设置 禁用日单元格模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowLunar">
            <summary>
            获得/设置 是否显示中国阴历历法 默认 false
            </summary>
            <remarks>日期范围 1901 年 2 月 19 日 - 2101 年 1 月 28 日</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowSolarTerm">
            <summary>
            获得/设置 是否显示中国 24 节气 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowFestivals">
            <summary>
            获得/设置 是否显示节日 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.ShowHolidays">
            <summary>
            获得/设置 是否显示休假日 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.Ranger">
            <summary>
            获得/设置 是否为 Range 内使用 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.OnGetDisabledDaysCallback">
            <summary>
            获取/设置 获得月自定义禁用日期回调方法，默认 null 内部默认启用数据缓存 可通过 <see cref="P:BootstrapBlazor.Components.DatePickerBody.EnableDisabledDaysCache"/> 参数关闭
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.EnableDisabledDaysCache">
            <summary>
            获得/设置 是否启用获得自定义禁用日期缓存
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerBody.FirstDayOfWeek">
            <summary>
            获得/设置 星期第一天 默认 <see cref="F:System.DayOfWeek.Sunday"/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.ShouldRender">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.IsDisableDay(System.DateTime)">
            <summary>
            判定当前日期是否为禁用日期
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.ClearDisabledDays">
            <summary>
            清除内部缓存方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnClickPrevYear">
            <summary>
            点击上一年按钮时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnClickPrevMonth">
            <summary>
            点击上一月按钮时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnClickNextYear">
            <summary>
            点击下一年按钮时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnClickNextMonth">
            <summary>
            点击下一月按钮时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.OnClickDateTime(System.DateTime)">
            <summary>
            Day 选择时触发此方法
            </summary>
            <param name="d"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.SwitchView(BootstrapBlazor.Components.DatePickerViewMode)">
            <summary>
            设置组件显示视图方法
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.SwitchView(BootstrapBlazor.Components.DatePickerViewMode,System.DateTime)">
            <summary>
            设置组件显示视图方法
            </summary>
            <param name="view"></param>
            <param name="d"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetYearPeriod">
            <summary>
            通过当前时间计算年跨度区间
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetYear(System.Int32)">
            <summary>
            获取 年视图下的年份
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetYearText(System.Int32)">
            <summary>
            获取 年视图下月份单元格显示文字
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetYearClassName(System.Int32,System.Boolean)">
            <summary>
            获取 年视图下的年份单元格样式
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetMonth(System.Int32)">
            <summary>
            获取 年视图下的月份
            </summary>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetMonthClassName(System.Int32)">
            <summary>
            获取 月视图下的月份单元格样式
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetDayText(System.Int32)">
            <summary>
            获取 日视图下日单元格显示文字
            </summary>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetMonthText(System.Int32)">
            <summary>
            获取 月视图下月份单元格显示文字
            </summary>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.ClickNowButton">
            <summary>
            点击 此刻时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.ClickClearButton">
            <summary>
            点击 清除按钮调用此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetSafeYearDateTime(System.DateTime,System.Int32)">
            <summary>
            获得安全的年数据
            </summary>
            <param name="dt"></param>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.GetSafeDayDateTime(System.DateTime,System.Int32)">
            <summary>
            获得安全的日视图日期
            </summary>
            <param name="dt"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.IsDayOverflow(System.DateTime,System.Int32)">
            <summary>
            判断日视图是否溢出方法
            </summary>
            <param name="dt"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DatePickerBody.IsYearOverflow(System.DateTime,System.Int32)">
            <summary>
            判断年视图是否溢出方法
            </summary>
            <param name="dt"></param>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DatePickerCell">
            <summary>
            DateTimePickerCell 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerCell.Value">
            <summary>
            获得/设置 日期
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerCell.Text">
            <summary>
            获得/设置 日期
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerCell.OnClick">
            <summary>
            获得/设置 按钮点击回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerCell.Template">
            <summary>
            获得/设置 单元格模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerCell.ShowLunar">
            <summary>
            获得/设置 是否显示中国阴历历法 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerCell.ShowSolarTerm">
            <summary>
            获得/设置 是否显示中国 24 节气 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerCell.ShowFestivals">
            <summary>
            获得/设置 是否节日 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DatePickerCell.ShowHolidays">
            <summary>
            获得/设置 是否显示休假日 默认 false
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DateTimePicker`1">
            <summary>
            DateTimePicker 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.ClassString">
            <summary>
            获得 组件样式名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.InputClassName">
            <summary>
            获得 组件文本框样式名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.DateTimePickerIconClassString">
            <summary>
            获得 组件小图标样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.PlaceholderString">
            <summary>
            获得 Placeholder 显示字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.AllowNull">
            <summary>
            获得/设置 是否允许为空
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.Format">
            <summary>
            获得/设置 时间格式化字符串 默认值为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.DateTimeFormat">
            <summary>
            获得/设置 时间格式化字符串 默认值为 "yyyy-MM-dd HH:mm:ss"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.DateFormat">
            <summary>
            获得/设置 时间格式化字符串 默认值为 "yyyy-MM-dd"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.TimeFormat">
            <summary>
            获得/设置 时间格式化字符串 默认值为 "HH:mm:ss"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.FirstDayOfWeek">
            <summary>
            获得/设置 星期第一天 默认 <see cref="F:System.DayOfWeek.Sunday"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.Icon">
            <summary>
            获得/设置 组件图标 默认 fa-regular fa-calendar-days
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.ShowIcon">
            <summary>
            获得/设置 是否显示组件图标 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.Color">
            <summary>
            获得/设置  控件边框颜色样式 默认为 None 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.ViewMode">
            <summary>
            获得/设置 组件显示模式 默认为显示年月日模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.ShowSidebar">
            <summary>
            获得/设置 是否显示快捷侧边栏 默认不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.SidebarTemplate">
            <summary>
            获得/设置 侧边栏模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.MaxValue">
            <summary>
            获得/设置 当前日期最大值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.MinValue">
            <summary>
            获得/设置 当前日期最小值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.AutoClose">
            <summary>
            获得/设置 是否点击日期后自动关闭弹窗 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.IsEditable">
            <summary>
            获得/设置 是否可以编辑内容 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.AutoToday">
            <summary>
            获得/设置 是否自动设置值为当前时间 默认 true
            </summary>
            <remarks>当 Value 值为 <see cref="F:System.DateTime.MinValue"/> 时自动设置时间为 <see cref="P:System.DateTime.Today"/> 不为空类型时此参数生效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.DisplayMinValueAsEmpty">
            <summary>
            获得/设置 是否将 <see cref="F:System.DateTime.MinValue"/> 显示为空字符串 默认 true
            </summary>
            <remarks>可为空类型时此参数生效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.ChildContent">
            <summary>
            获得/设置 子组件模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.DatePlaceHolderText">
            <summary>
            获得/设置 日期占位符文本 默认 null 读取资源文件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.DateTimePlaceHolderText">
            <summary>
            获得/设置 日期时间占位符文本 默认 null 读取资源文件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.DayTemplate">
            <summary>
            获得/设置 日单元格模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.DayDisabledTemplate">
            <summary>
            获得/设置 禁用日单元格模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.ShowLunar">
            <summary>
            获得/设置 是否显示中国阴历历法 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.ShowSolarTerm">
            <summary>
            获得/设置 是否显示中国 24 节气 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.ShowFestivals">
            <summary>
            获得/设置 是否显示节日 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.ShowHolidays">
            <summary>
            获得/设置 是否显示休假日 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.OnGetDisabledDaysCallback">
            <summary>
            获取/设置 获得自定义禁用日期回调方法，默认 null 内部默认启用数据缓存 可通过 <see cref="P:BootstrapBlazor.Components.DateTimePicker`1.EnableDisabledDaysCache"/> 参数关闭
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.EnableDisabledDaysCache">
            <summary>
            获得/设置 是否启用获得年自定义禁用日期缓存
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.DisplayDisabledDayAsEmpty">
            <summary>
            获得/设置 是否将禁用日期显示为空字符串 默认 false 开启后组件会频繁调用 <see cref="P:BootstrapBlazor.Components.DateTimePicker`1.OnGetDisabledDaysCallback"/> 方法，建议外部使用缓存提高性能
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimePicker`1.OnBlurAsync">
            <summary>
            获得/设置 失去焦点回调方法 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.ShouldRender">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.FormatValueAsString(`0)">
            <summary>
            格式化数值方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.ClearDisabledDays">
            <summary>
            清除内部缓存方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.OnConfirm">
            <summary>
            确认按钮点击时回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="value"></param>
            <param name="result"></param>
            <param name="validationErrorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.OnBlur">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimePicker`1.TriggerHideCallback">
            <summary>
            客户端弹窗关闭后由 Javascript 调用此方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.PopoverDropdownBase`1">
            <summary>
            
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverDropdownBase`1.Placement">
            <summary>
            获得/设置 弹窗位置 默认为 Bottom
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverDropdownBase`1.CustomClass">
            <summary>
            获得/设置 自定义样式 参数 默认 null
            </summary>
            <remarks>由 data-bs-custom-class 实现</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverDropdownBase`1.ShowShadow">
            <summary>
            获得/设置 是否显示阴影 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverDropdownBase`1.PlacementString">
            <summary>
            弹窗位置字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverDropdownBase`1.CustomClassString">
            <summary>
            获得 CustomClass 字符串
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TimePickerOption">
            <summary>
            配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerOption.ShowClockScale">
            <summary>
            是否显示表盘刻度 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerOption.ShowSecond">
            <summary>
            是否显示秒 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerOption.ShowMinute">
            <summary>
            是否显示分钟 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerOption.IsAutoSwitch">
            <summary>
            是否自动切换 小时、分钟、秒 自动切换 默认 true
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TimePickerSetting">
            <summary>
            TimePicker 配置项
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerSetting.ShowClockScale">
            <summary>
            是否显示表盘刻度 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerSetting.ShowSecond">
            <summary>
            是否显示秒 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerSetting.ShowMinute">
            <summary>
            是否显示分钟 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerSetting.IsAutoSwitch">
            <summary>
            是否自动切换 小时、分钟、秒 自动切换 默认 true
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerSetting.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DateTimeRange">
            <summary>
            DateTimeRange 时间范围组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ClassString">
            <summary>
            获得 组件样式名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.DateTimePickerIconClassString">
            <summary>
            获得 组件小图标样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.SelectedValue">
            <summary>
            获得 用户选中的时间范围
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.IsEditable">
            <summary>
            获得/设置 是否可以编辑内容 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.AutoCloseClickSideBar">
            <summary>
            获得/设置 是否点击快捷侧边栏自动关闭弹窗 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.AutoClose">
            <summary>
            Gets or sets whether to automatically close the popup after a date range is selected. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ShowSelectedValue">
            <summary>
            Gets or sets whether show the selected value. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ClearButtonText">
            <summary>
            获得/设置 清空按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ClearIcon">
            <summary>
            获得/设置 清空图标 默认 fa-solid fa-circle-xmark
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ViewMode">
            <summary>
            获得/设置 组件显示模式 默认为显示年月日模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.RenderMode">
            <summary>
            获得/设置 组件显示模式 默认为显示年月日模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.TodayButtonText">
            <summary>
            获得/设置 今天按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ConfirmButtonText">
            <summary>
            获得/设置 确定按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.MaxValue">
            <summary>
            获得/设置 最大值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.MinValue">
            <summary>
            获得/设置 最小值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.AllowNull">
            <summary>
            获得/设置 是否允许为空 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ShowClearButton">
            <summary>
            获得/设置 是否显示清空按钮 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.Icon">
            <summary>
            获得/设置 组件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ShowToday">
            <summary>
            获得/设置 是否显示今天按钮 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ShowSidebar">
            <summary>
            获得/设置 是否显示快捷侧边栏 默认不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.SidebarItems">
            <summary>
            获得/设置 侧边栏快捷选项集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.OnConfirm">
            <summary>
            点击确认按钮回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.OnClearValue">
            <summary>
            点击清空按钮回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.TimeFormat">
            <summary>
            获得/设置 时间格式化字符串 默认值为 "HH:mm:ss"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.DateFormat">
            <summary>
            获得/设置 时间格式化字符串 默认值为 "yyyy-MM-dd"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.DateTimeFormat">
            <summary>
            获得/设置 时间格式化字符串 默认值为 "yyyy-MM-dd HH:mm:ss"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ShowLunar">
            <summary>
            获得/设置 是否显示中国阴历历法 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ShowSolarTerm">
            <summary>
            获得/设置 是否显示中国 24 节气 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ShowFestivals">
            <summary>
            获得/设置 是否显示节日 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.ShowHolidays">
            <summary>
            获得/设置 是否显示休假日 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRange.OnDateClick">
            <summary>
            Gets or sets the date value changed event callback.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.ClickClearButton">
            <summary>
            点击 清除按钮调用此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.ClickTodayButton">
            <summary>
            点击 确认时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.ClickConfirmButton">
            <summary>
            点击 确认时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.UpdateValue(System.DateTime)">
            <summary>
            更新值方法
            </summary>
            <param name="d"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.IsComplexValue(System.Object)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="propertyValue"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRange.TriggerHideCallback">
            <summary>
            客户端弹窗关闭后由 Javascript 调用此方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DateTimeRangeSidebarItem">
            <summary>
            DateTimeRange 组件侧边栏快捷项目类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRangeSidebarItem.Text">
            <summary>
            获得/设置 快捷项目文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRangeSidebarItem.StartDateTime">
            <summary>
            获得/设置 开始时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRangeSidebarItem.EndDateTime">
            <summary>
            获得/设置 开始时间
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DateTimeRangeValue">
            <summary>
            DateTimeRangeValue 对象
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRangeValue.Start">
            <summary>
            获得/设置 开始时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRangeValue.End">
            <summary>
            获得/设置 结束时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRangeValue.NullStart">
            <summary>
            获得/设置 可为空开始时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeRangeValue.NullEnd">
            <summary>
            获得/设置 可为空结束时间
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRangeValue.ToString">
            <summary>
            ToString 方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Dialog">
            <summary>
            Dialog component
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Dialog.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Dialog.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Dialog.Dispose(System.Boolean)">
            <summary>
            Dispose method
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Dialog.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DialogBase`1">
            <summary>
            Dialog 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogBase`1.Model">
            <summary>
            获得/设置 EditModel 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogBase`1.BodyTemplate">
            <summary>
            获得/设置 BodyTemplate 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogBase`1.Items">
            <summary>
            获得 数据项集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogBase`1.ShowLabel">
            <summary>
            获得/设置 是否显示标签
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogBase`1.ItemsPerRow">
            <summary>
            获得/设置 每行显示组件数量 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogBase`1.RowType">
            <summary>
            获得/设置 设置行格式 默认 Row 布局
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogBase`1.LabelAlign">
            <summary>
            获得/设置 设置 <see cref="P:BootstrapBlazor.Components.DialogBase`1.RowType" /> Inline 模式下标签对齐方式 默认 None 等效于 Left 左对齐
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogBase`1.ShowUnsetGroupItemsOnTop">
            <summary>
            获得/设置 未分组编辑项布局位置 默认 false 在尾部
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogBase`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DialogCloseButton">
            <summary>
            弹窗内关闭按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogCloseButton.Color">
            <summary>
            获得/设置 按钮颜色
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogCloseButton.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogCloseButton.HandlerClick">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DialogOption">
            <summary>
            Configuration class for the Dialog component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.Modal">
            <summary>
            Gets or sets the related modal instance
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.Title">
            <summary>
            Gets or sets the dialog title
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.Class">
            <summary>
            Gets or sets the custom style of the dialog
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.Size">
            <summary>
            Gets or sets the size of the dialog
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.FullScreenSize">
            <summary>
            Gets or sets the full screen size of the dialog, default is None
            </summary>
            <remarks>To ensure functionality, when this value is set, <see cref="P:BootstrapBlazor.Components.DialogOption.ShowMaximizeButton"/>, <seealso cref="P:BootstrapBlazor.Components.DialogOption.ShowResize"/>, and <seealso cref="P:BootstrapBlazor.Components.DialogOption.IsDraggable"/> are not available</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.ShowMaximizeButton">
            <summary>
            Gets or sets whether to show the maximize button, default is false
            </summary>
            <remarks>To ensure functionality, when this value is set to true, <seealso cref="P:BootstrapBlazor.Components.DialogOption.ShowResize"/> and <seealso cref="P:BootstrapBlazor.Components.DialogOption.IsDraggable"/> are not available</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.IsCentered">
            <summary>
            Gets or sets whether the dialog is vertically centered, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.IsScrolling">
            <summary>
            Gets or sets whether the dialog content scrolls when it is too long, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.ShowResize">
            <summary>
            Gets or sets whether to show the resize button, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.ShowCloseButton">
            <summary>
            Gets or sets whether to show the close button, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.ShowHeaderCloseButton">
            <summary>
            Gets or sets whether to show the header close button, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.IsFade">
            <summary>
            Gets or sets whether to enable fade animation, default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.IsKeyboard">
            <summary>
            Gets or sets whether to support closing the dialog with the ESC key, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.IsBackdrop">
            <summary>
            Gets or sets whether to support closing the dialog by clicking the backdrop, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.ShowFooter">
            <summary>
            Gets or sets whether to show the footer, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.ShowPrintButton">
            <summary>
            Gets or sets whether to show the print button, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.ShowSaveButton">
            <summary>
            Gets or sets whether to show the save button, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.ShowPrintButtonInHeader">
            <summary>
            Gets or sets whether to show the print button in the header, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.PrintButtonText">
            <summary>
            Gets or sets the text of the print button in the header, default is "Print" from the resource file
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.BodyContext">
            <summary>
            Gets or sets the related data, mostly used for passing values
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.BodyTemplate">
            <summary>
            Gets or sets the ModalBody component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.FooterTemplate">
            <summary>
            Gets or sets the ModalFooter component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.HeaderTemplate">
            <summary>
            Gets or sets the ModalHeader component template
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.HeaderToolbarTemplate">
            <summary>
            Gets or sets the custom buttons in the ModalHeader component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.Component">
            <summary>
            Gets or sets the custom component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.SaveButtonIcon">
            <summary>
            Gets or sets the icon of the save button, default is null and uses the current theme icon
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.SaveButtonText">
            <summary>
            Gets or sets the text of the save button
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.OnSaveAsync">
            <summary>
            Gets or sets the callback method for the save button
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.CloseButtonIcon">
            <summary>
            Gets or sets the icon of the close button, default is null and uses the current theme icon
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.CloseButtonText">
            <summary>
            Gets or sets the text of the close button
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.OnCloseAsync">
            <summary>
            Gets or sets the callback method for closing the dialog
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.IsAutoCloseAfterSave">
            <summary>
            Gets or sets whether to automatically close the dialog after saving successfully, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.IsDraggable">
            <summary>
            Gets or sets whether the dialog can be dragged, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.OnShownAsync">
            <summary>
            Gets or sets the callback method when the dialog is shown
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.ShowExportPdfButton">
            <summary>
            Gets or sets whether to show the export PDF button, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.ShowExportPdfButtonInHeader">
            <summary>
            Gets or sets whether to show the export PDF button in the header, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.ExportPdfButtonOptions">
            <summary>
            Gets or sets the configuration options for the export PDF button
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogOption.IsHidePreviousDialog">
            <summary>
            Gets or sets whether to hide the previous dialog when opening a new one, default is false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogOption.CloseDialogAsync">
            <summary>
            Method to close the dialog
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogOption.ToAttributes">
            <summary>
            Method to convert parameters to component attributes
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DialogResult">
            <summary>
            对话框返回类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DialogResult.Unset">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DialogResult.Yes">
            <summary>
            是
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DialogResult.No">
            <summary>
            否
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DialogResult.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DialogSaveButton">
            <summary>
            弹窗内保存按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DialogSaveButton.OnSaveAsync">
            <summary>
            获得/设置 保存回调方法 返回 true 时自动关闭弹窗
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogSaveButton.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogSaveButton.HandlerClick">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DialogService">
            <summary>
            Dialog 组件服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogService.Show(BootstrapBlazor.Components.DialogOption,BootstrapBlazor.Components.Dialog)">
            <summary>
            显示 Dialog 方法
            </summary>
            <param name="option">弹窗配置信息实体类</param>
            <param name="dialog">指定弹窗组件 默认为 null 使用 <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRoot"/> 组件内置弹窗组件</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.EditDialog`1">
            <summary>
            编辑弹窗组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialog`1.ShowLoading">
            <summary>
            获得/设置 查询时是否显示正在加载中动画 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialog`1.IsTracking">
            <summary>
            获得/设置 组件是否采用 Tracking 模式对编辑项进行直接更新 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialog`1.ItemChangedType">
            <summary>
            获得/设置 实体类编辑模式 Add 还是 Update
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialog`1.SaveButtonIcon">
            <summary>
            获得/设置 保存按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialog`1.SaveButtonText">
            <summary>
            获得/设置 保存按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialog`1.OnSaveAsync">
            <summary>
            获得/设置 保存回调委托 返回 false 时保持编辑弹窗 返回 true 时关闭编辑弹窗
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialog`1.CloseButtonIcon">
            <summary>
            获得/设置 关闭按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialog`1.CloseButtonText">
            <summary>
            获得/设置 获得/设置 重置按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialog`1.OnCloseAsync">
            <summary>
            获得/设置 关闭弹窗回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialog`1.DisableAutoSubmitFormByEnter">
            <summary>
            获得/设置 是否禁用表单内回车自动提交功能 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialog`1.FooterTemplate">
            <summary>
            获得/设置 DialogFooterTemplate 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditDialog`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditDialog`1.ToggleLoading(System.Boolean)">
            <summary>
            显示/隐藏 Loading 遮罩
            </summary>
            <param name="state">true 时显示，false 时隐藏</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.EditDialogOption`1">
            <summary>
            编辑弹窗配置类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditDialogOption`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.IsTracking">
            <summary>
            获得/设置 组件是否采用 Tracking 模式对编辑项进行直接更新 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.ShowLabel">
            <summary>
            获得/设置 是否显示标签 默认为 true 显示标签
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.ItemChangedType">
            <summary>
            获得/设置 实体类编辑模式 Add 还是 Update
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.ItemsPerRow">
            <summary>
            获得/设置 每行显示组件数量 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.RowType">
            <summary>
            获得/设置 设置行内组件布局格式 默认 Row 布局
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.LabelAlign">
            <summary>
            获得/设置 设置 <see cref="P:BootstrapBlazor.Components.EditDialogOption`1.RowType" /> Inline 模式下标签对齐方式 默认 None 等效于 Left 左对齐
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.ShowLoading">
            <summary>
            获得/设置 查询时是否显示正在加载中动画 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.ShowUnsetGroupItemsOnTop">
            <summary>
            获得/设置 未分组编辑项布局位置 默认 false 在尾部
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.Model">
            <summary>
            获得/设置 编辑框模型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.DisableAutoSubmitFormByEnter">
            <summary>
            获得/设置 是否禁用表单内回车自动提交功能 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.Items">
            <summary>
            获得 编辑项集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.DialogBodyTemplate">
            <summary>
            获得/设置 EditDialog Body 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.DialogFooterTemplate">
            <summary>
            获得/设置 EditDialog Footer 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditDialogOption`1.OnEditAsync">
            <summary>
            获得/设置 保存回调委托
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IconDialog">
            <summary>
            IconDialog Component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IconDialog.IconName">
            <summary>
            获得/设置 Icon 名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IconDialog.LabelText">
            <summary>
            获得/设置 Label 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IconDialog.LabelFullText">
            <summary>
            获得/设置 Label 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IconDialog.ButtonText">
            <summary>
            获得/设置 拷贝按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IconDialog.CopiedTooltipText">
            <summary>
            获得/设置 拷贝成功提示文字
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IconDialog.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IResultDialog">
            <summary>
            IResultDialog 接口定义
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IResultDialog.OnClosing(BootstrapBlazor.Components.DialogResult)">
            <summary>
            关闭之前回调方法 返回 true 时关闭弹窗 返回 false 时阻止关闭弹窗
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IResultDialog.OnClose(BootstrapBlazor.Components.DialogResult)">
            <summary>
            关闭后回调方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ResultDialogFooter">
            <summary>
            ResultDialog 对话框类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.ShowYesButton">
            <summary>
            显示确认按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.ButtonYesText">
            <summary>
            确认按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.ButtonYesIcon">
            <summary>
            确认按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.ButtonYesColor">
            <summary>
            确认按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.ShowNoButton">
            <summary>
            显示取消按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.ButtonNoText">
            <summary>
            取消按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.ButtonNoIcon">
            <summary>
            取消按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.ButtonNoColor">
            <summary>
            取消按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.ShowCloseButton">
            <summary>
            显示关闭按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.ButtonCloseText">
            <summary>
            关闭按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.ButtonCloseIcon">
            <summary>
            关闭按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.ButtonCloseColor">
            <summary>
            关闭按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.OnClickClose">
            <summary>
            获得/设置 点击关闭按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.OnClickYes">
            <summary>
            获得/设置 点击确认按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogFooter.OnClickNo">
            <summary>
            获得/设置 点击取消按钮回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ResultDialogFooter.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ResultDialogOption">
            <summary>
            结果对话框配置类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ResultDialogOption.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ShowYesButton">
            <summary>
            获得/设置 显示确认按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ButtonYesText">
            <summary>
            获得/设置 确认按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ButtonYesIcon">
            <summary>
            获得/设置 确认按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ButtonYesColor">
            <summary>
            获得/设置 确认按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ShowNoButton">
            <summary>
            获得/设置 显示取消按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ButtonNoText">
            <summary>
            获得/设置 取消按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ButtonNoIcon">
            <summary>
            获得/设置 取消按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ButtonNoColor">
            <summary>
            获得/设置 取消按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ButtonCloseText">
            <summary>
            获得/设置 关闭按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ButtonCloseIcon">
            <summary>
            获得/设置 关闭按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ButtonCloseColor">
            <summary>
            获得/设置 关闭按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ComponentParamters">
            <summary>
            获得/设置 组件参数集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ComponentParameters">
            <summary>
            获得/设置 组件参数集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.ResultTask">
            <summary>
            获得/设置 模态弹窗返回值任务实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ResultDialogOption.GetDialog">
            <summary>
            获得 模态框接口方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SearchDialog`1">
            <summary>
            查询弹窗组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialog`1.OnResetSearchClick">
            <summary>
            获得/设置 重置回调委托
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialog`1.OnSearchClick">
            <summary>
            获得/设置 搜索回调委托
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialog`1.ResetButtonText">
            <summary>
            获得/设置 重置按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialog`1.QueryButtonText">
            <summary>
            获得/设置 查询按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialog`1.ClearIcon">
            <summary>
            获得/设置 清空按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialog`1.SearchIcon">
            <summary>
            获得/设置 搜索按钮图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SearchDialog`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SearchDialogOption`1">
            <summary>
            查询弹窗配置类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SearchDialogOption`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialogOption`1.ShowLabel">
            <summary>
            获得/设置 是否显示标签 默认为 true 显示标签
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialogOption`1.ShowUnsetGroupItemsOnTop">
            <summary>
            获得/设置 未分组编辑项布局位置 默认 false 在尾部
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialogOption`1.ItemsPerRow">
            <summary>
            获得/设置 每行显示组件数量 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialogOption`1.RowType">
            <summary>
            获得/设置 设置行内组件布局格式 默认 Row 布局
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialogOption`1.LabelAlign">
            <summary>
            获得/设置 设置 <see cref="P:BootstrapBlazor.Components.SearchDialogOption`1.RowType" /> Inline 模式下标签对齐方式 默认 None 等效于 Left 左对齐
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialogOption`1.Model">
            <summary>
            获得/设置 编辑框模型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialogOption`1.Items">
            <summary>
            获得 搜索条件集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialogOption`1.DialogBodyTemplate">
            <summary>
            获得/设置 SearchDialog Body 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialogOption`1.ResetButtonText">
            <summary>
            获得/设置 重置按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialogOption`1.QueryButtonText">
            <summary>
            获得/设置 查询按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialogOption`1.OnResetSearchClick">
            <summary>
            获得/设置 重置回调委托
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchDialogOption`1.OnSearchClick">
            <summary>
            获得/设置 搜索回调委托
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Display`1">
            <summary>
            Display 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Display`1.FormatterAsync">
            <summary>
            获得/设置 异步格式化字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Display`1.FormatString">
            <summary>
            获得/设置 格式化字符串 如时间类型设置 yyyy-MM-dd
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Display`1.Lookup">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Display`1.LookupService">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Display`1.LookupServiceKey">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Display`1.LookupServiceData">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Display`1.LookupStringComparison">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Display`1.TypeResolver">
            <summary>
            获得/设置 类型解析回调方法 组件泛型为 Array 时内部调用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Display`1.ShowTooltip">
            <summary>
            获得/设置 是否显示 Tooltip 多用于标签文字过长导致裁减时使用 默认 false 不显示
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Display`1.OnParametersSetAsync">
            <summary>
            <inheritdoc/>>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Display`1.FormatDisplayText(`0)">
            <summary>
            数值格式化委托方法
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DisplayBase`1">
            <summary>
            显示组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.IsShowLabel">
            <summary>
            是否显示 标签
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.FieldIdentifier">
            <summary>
            Gets the <see cref="P:BootstrapBlazor.Components.DisplayBase`1.FieldIdentifier"/> for the bound value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.NullableUnderlyingType">
            <summary>
            获得/设置 泛型参数 TValue 可为空类型 Type 实例，为空时表示类型不可为空
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.ValueType">
            <summary>
            获得/设置 泛型参数 TValue 可为空类型 Type 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.Value">
            <summary>
            Gets or sets the value of the input. This should be used with two-way binding.
            </summary>
            <example>
            @bind-Value="model.PropertyName"
            </example>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.ValueChanged">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.ValueExpression">
            <summary>
            Gets or sets an expression that identifies the bound value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.ShowLabel">
            <summary>
            获得/设置 是否显示前置标签 默认值为 null 为空时默认不显示标签
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.ShowLabelTooltip">
            <summary>
            获得/设置 是否显示 Tooltip 多用于文字过长导致裁减时使用 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.DisplayText">
            <summary>
            获得/设置 显示名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.ValidateForm">
            <summary>
            获得 ValidateForm 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.EditorForm">
            <summary>
            获得 IShowLabel 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.InputGroup">
            <summary>
            获得 InputGroup 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DisplayBase`1.Filter">
            <summary>
            获得 IFilter 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DisplayBase`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            SetParametersAsync 方法
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DisplayBase`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DisplayBase`1.FormatValueAsString(`0)">
            <summary>
            将 Value 格式化为 String 方法
            </summary>
            <param name="value">The value to format.</param>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Divider">
            <summary>
            Divider 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Divider.ClassString">
            <summary>
            获得 class 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Divider.TextClassString">
            <summary>
            获得 class 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Divider.IsVertical">
            <summary>
            获得/设置 是否为垂直显示 默认为 false 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Divider.Alignment">
            <summary>
            获得/设置 组件对齐方式 默认为居中
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Divider.Text">
            <summary>
            获得/设置 文案显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Divider.Icon">
            <summary>
            获得/设置 文案显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Divider.ChildContent">
            <summary>
            获得/设置 子内容
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Download">
            <summary>
            下载组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Download.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Download.DownloadFromStream(BootstrapBlazor.Components.DownloadOption)">
            <summary>
            调用 download 方法
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Download.DownloadFromUrl(BootstrapBlazor.Components.DownloadOption)">
            <summary>
            调用 CreateUrl 方法
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Download.DisposeAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DownloadOption">
            <summary>
            文件下载配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DownloadOption.FileStream">
            <summary>
            获取/设置 要下载的文件数据字节数组
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DownloadOption.Url">
            <summary>
            获得/设置 下载地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DownloadOption.FileName">
            <summary>
            获取/设置 下载文件另存为文件名
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DownloadService">
            <summary>
            文件下载服务类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DownloadService.StreamCache">
            <summary>
            获得 回调委托缓存集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DownloadService.UrlCache">
            <summary>
            获得 获取地址的回调委托缓存集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DownloadService.RegisterStream(Microsoft.AspNetCore.Components.IComponent,System.Func{BootstrapBlazor.Components.DownloadOption,System.Threading.Tasks.Task})">
            <summary>
            注册服务
            </summary>
            <param name="key"></param>
            <param name="callback"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DownloadService.RegisterUrl(Microsoft.AspNetCore.Components.IComponent,System.Func{BootstrapBlazor.Components.DownloadOption,System.Threading.Tasks.Task})">
            <summary>
            注册获取Url服务
            </summary>
            <param name="key"></param>
            <param name="callback"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DownloadService.UnRegisterStream(Microsoft.AspNetCore.Components.IComponent)">
            <summary>
            注销事件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DownloadService.UnRegisterUrl(Microsoft.AspNetCore.Components.IComponent)">
            <summary>
            注销获取Url事件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DownloadService.DownloadFromStreamAsync(BootstrapBlazor.Components.DownloadOption)">
            <summary>
            下载文件方法
            </summary>
            <param name="option">文件下载选项</param>
        </member>
        <member name="M:BootstrapBlazor.Components.DownloadService.DownloadFromUrlAsync(BootstrapBlazor.Components.DownloadOption)">
            <summary>
            获取文件连接方法
            </summary>
            <param name="option">文件下载选项</param>
        </member>
        <member name="T:BootstrapBlazor.Components.DragDropService`1">
            <summary>
            拖拽服务
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.DragDropService`1.ActiveItem">
            <summary>
            活动的Item
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DragDropService`1.DragTargetItem">
            <summary>
            悬停的项目
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DragDropService`1.Items">
            <summary>
            被拖拽的Items
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DragDropService`1.ActiveSpacerId">
            <summary>
            活动的Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DragDropService`1.OldIndex">
            <summary>
            之前的位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DragDropService`1.StateHasChanged">
            <summary>
            通知刷新
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Dropzone`1">
            <summary>
            拖拽容器
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropzone`1.Items">
            <summary>
            获取/设置 拖拽列表
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropzone`1.MaxItems">
            <summary>
            获取/设置 最大数量 默认 null 不限制
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropzone`1.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropzone`1.ItemWrapperClass">
            <summary>
            获得/设置 每个 Item 的特殊 class
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropzone`1.CopyItem">
            <summary>
            获得/设置 复制内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropzone`1.Accepts">
            <summary>
            获得/设置 是否允许拖拽释放
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropzone`1.OnItemDropRejectedByMaxItemLimit">
            <summary>
            获得/设置 当拖拽因为数量超限被禁止时调用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropzone`1.OnItemDropRejected">
            <summary>
            获得/设置 当拖拽被禁止时调用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropzone`1.OnReplacedItemDrop">
            <summary>
            获得/设置 返回被替换的 Item
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropzone`1.OnItemDrop">
            <summary>
            获得/设置 返回放下的 Item
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropzone`1.AllowsDrag">
            <summary>
            获得/设置 当前节点是否允许被拖拽
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Dropzone`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Dropzone`1.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Dropzone`1.Dispose">
            <summary>
            Dispose 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Drawer">
            <summary>
            Drawer component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.DrawerStyleString">
            <summary>
            获得 抽屉 Style 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.DrawerClassString">
            <summary>
            获得 抽屉样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.Width">
            <summary>
            获得/设置 抽屉宽度 左右布局时生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.Height">
            <summary>
            获得/设置 抽屉高度 上下布局时生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.IsOpen">
            <summary>
            获得/设置 抽屉是否打开 默认 false 未打开
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.IsOpenChanged">
            <summary>
            获得/设置 IsOpen 属性改变时回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.OnClickBackdrop">
            <summary>
            获得/设置 点击背景遮罩时回调委托方法 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.IsBackdrop">
            <summary>
            获得/设置 点击遮罩是否关闭抽屉 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.ShowBackdrop">
            <summary>
            获得/设置 是否显示遮罩 默认为 true 显示遮罩
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.Placement">
            <summary>
            获得/设置 组件出现位置 默认显示在 Left 位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.Position">
            <summary>
            获得/设置 组件定位位置 默认 null 未设置 使用样式内置定位 fixed 可更改为 absolute
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.AllowResize">
            <summary>
            获得/设置 是否允许调整大小 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.ZIndex">
            <summary>
            获得/设置 z-index 参数值 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.OnCloseAsync">
            <summary>
            获得/设置 关闭抽屉回调委托 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.BodyContext">
            <summary>
            获得/设置 抽屉内容相关数据 多用于传值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.IsKeyboard">
            <summary>
            获得/设置 是否支持键盘 ESC 关闭当前弹窗 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Drawer.BodyScroll">
            <summary>
            获得/设置 抽屉显示时是否允许滚动 body 默认为 false 不滚动
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Drawer.ShouldRender">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Drawer.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Drawer.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Drawer.OnContainerClick">
            <summary>
            点击背景遮罩方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Drawer.Close">
            <summary>
            关闭抽屉方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DrawerContainer">
            <summary>
            Drawer 抽屉容器组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DrawerContainer.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DrawerContainer.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DrawerContainer.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DrawerContainer.Dispose">
            <summary>
            Dispose 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DrawerOption">
            <summary>
            Drawer 弹出窗参数配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.Class">
            <summary>
            获得/设置 Drawer 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.Width">
            <summary>
            获得/设置 抽屉宽度 左右布局时生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.Height">
            <summary>
            获得/设置 抽屉高度 上下布局时生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.IsKeyboard">
            <summary>
            获得/设置 是否支持键盘 ESC 关闭当前弹窗 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.IsBackdrop">
            <summary>
            获得/设置 点击遮罩是否关闭抽屉 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.ShowBackdrop">
            <summary>
            获得/设置 是否显示遮罩 默认为 true 显示遮罩
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.BodyScroll">
            <summary>
            获得/设置 抽屉显示时是否允许滚动 body 默认为 false 不滚动
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.Placement">
            <summary>
            获得/设置 组件出现位置 默认显示在 Left 位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.Component">
            <summary>
            获得/设置 自定义组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.AllowResize">
            <summary>
            获得/设置 是否允许调整大小 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.OnClickBackdrop">
            <summary>
            获得/设置 点击背景遮罩时回调委托方法 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.OnCloseAsync">
            <summary>
            获得/设置 关闭当前 Drawer 回调委托 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.BodyContext">
            <summary>
            获得/设置 相关连数据，多用于传值使用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DrawerOption.ZIndex">
            <summary>
            获得/设置 z-index 参数值 默认 null 未设置
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DrawerService">
            <summary>
            Toast 弹出窗服务类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DrawerService.Show(BootstrapBlazor.Components.DrawerOption)">
            <summary>
            Show 方法
            </summary>
            <param name="option">DrawerOption 实例</param>
        </member>
        <member name="T:BootstrapBlazor.Components.Dropdown`1">
            <summary>
            Dropdown 下拉框组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.DirectionClassName">
            <summary>
            获得 按钮弹出方向集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.ButtonClassName">
            <summary>
            获得 按钮样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.ClassName">
            <summary>
            获得 按钮样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.DropdownToggle">
            <summary>
            获得 是否分裂式按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.MenuAlignmentClass">
            <summary>
            菜单对齐方式样式
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Dropdown`1.ActiveItem(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            获得/设置 设置当前项是否 Active 方法
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.Color">
            <summary>
            获得/设置 颜色 默认 Color.None 无设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.Items">
            <summary>
            获得/设置 绑定数据集
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.ItemTemplate">
            <summary>
            获得/设置 选项模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.ButtonTemplate">
            <summary>
            获得/设置 按钮内容模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.ShowSplit">
            <summary>
            获得/设置 是否开启分裂式 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.OnClick">
            <summary>
            获得/设置 OnClick 事件
            <para><see cref="P:BootstrapBlazor.Components.Dropdown`1.ShowSplit"/> 为 true 时生效</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.OnClickWithoutRender">
            <summary>
            获得/设置 OnClick 事件不刷新父组件
            <para><see cref="P:BootstrapBlazor.Components.Dropdown`1.ShowSplit"/> 为 true 时生效</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.IsAsync">
            <summary>
            获得/设置 是否为异步按钮，默认为 false 如果为 true 表示是异步按钮，点击按钮后禁用自身并且等待异步完成，过程中显示 loading 动画
            <para><see cref="P:BootstrapBlazor.Components.Dropdown`1.ShowSplit"/> 为 true 时生效</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.IsKeepDisabled">
            <summary>
            获得/设置 是否异步结束后是否保持禁用状态，默认为 false
            </summary>
            <remarks><see cref="P:BootstrapBlazor.Components.Dropdown`1.IsAsync"/> 开启时有效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.Icon">
            <summary>
            获得/设置 显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.LoadingIcon">
            <summary>
            获得/设置 正在加载动画图标 默认为 fa-solid fa-spin fa-spinner
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.MenuAlignment">
            <summary>
            获得/设置 获取菜单对齐方式 默认 none 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.Direction">
            <summary>
            获得/设置 下拉选项方向 默认 Dropdown 向下
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.Size">
            <summary>
            获得/设置 组件尺寸 默认 none 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.IsFixedButtonText">
            <summary>
            获得/设置 是否固定按钮文字 更改下拉框选项时按钮文字保持不变 默认 false 不固定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.ShowFixedButtonTextInDropdown">
            <summary>
            获得/设置 下拉菜单中是否显示固定文字 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.FixedButtonText">
            <summary>
            获得/设置 固定按钮显示文字 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.ItemsTemplate">
            <summary>
             获得/设置 Items 模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.OnSelectedItemChanged">
            <summary>
            SelectedItemChanged 回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.IconTheme">
            <summary>
            获得 IconTheme 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Dropdown`1.SelectedItem">
            <summary>
            当前选择项实例
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Dropdown`1._isAsyncLoading">
            <summary>
            获得/设置 是否当前正在异步执行操作
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Dropdown`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Dropdown`1.OnItemClick(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            下拉框选项点击时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Dropdown`1.HandlerClick">
            <summary>
            处理点击方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DropdownWidget">
            <summary>
            DropdownWidget 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidget.ChildContent">
            <summary>
            获得/设置 选项模板支持静态数据
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidget.Items">
            <summary>
            获得/设置 挂件数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidget.OnItemCloseAsync">
            <summary>
            获得/设置 下拉项关闭回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidget.OnItemShownAsync">
            <summary>
            获得/设置 下拉项关闭回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DropdownWidget.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DropdownWidget.Add(BootstrapBlazor.Components.DropdownWidgetItem)">
            <summary>
            添加 DropdownWidgetItem 方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DropdownWidget.TriggerStateChanged(System.Int32,System.Boolean)">
            <summary>
            Widget 下拉项关闭回调方法 由 JavaScript 调用
            </summary>
            <param name="index"></param>
            <param name="shown"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DropdownWidgetItem">
            <summary>
            DropdownWidgetItem 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidgetItem.Icon">
            <summary>
            获得/设置 挂件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidgetItem.Title">
            <summary>
            获得/设置 DropdownWidgetItem 组件项目的悬浮提示信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidgetItem.BadgeColor">
            <summary>
            获得/设置 徽章颜色 默认为 Color.Success
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidgetItem.HeaderColor">
            <summary>
            获得/设置 Header 颜色 默认为 Color.Primary
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidgetItem.BadgeNumber">
            <summary>
            获得/设置 徽章显示数量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidgetItem.ShowArrow">
            <summary>
            获得/设置 是否显示小箭头 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidgetItem.HeaderTemplate">
            <summary>
            获得/设置 Header 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidgetItem.BodyTemplate">
            <summary>
            获得/设置 Body 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidgetItem.FooterTemplate">
            <summary>
            获得/设置 Footer 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropdownWidgetItem.Container">
            <summary>
            获得/设置 父组件通过级联参数获得
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DropdownWidgetItem.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.EditorForm`1">
            <summary>
            编辑表单基类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorForm`1.GetCssString(BootstrapBlazor.Components.IEditorItem)">
            <summary>
            支持每行多少个控件功能
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.ItemsPerRow">
            <summary>
            获得/设置 每行显示组件数量 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.ItemChangedType">
            <summary>
            获得/设置 实体类编辑模式 Add 还是 Update
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.RowType">
            <summary>
            获得/设置 设置行格式 默认 Row 布局
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.LabelAlign">
            <summary>
            获得/设置 设置 <see cref="P:BootstrapBlazor.Components.EditorForm`1.RowType" /> Inline 模式下标签对齐方式 默认 None 等效于 Left 左对齐
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.LabelWidth">
            <summary>
            获得/设置 标签宽度 默认 null 未设置使用全局设置 <code>--bb-row-label-width</code> 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.FieldItems">
            <summary>
            获得/设置 列模板 设置 <see cref="P:BootstrapBlazor.Components.EditorForm`1.Items"/> 时本参数不生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.Buttons">
            <summary>
            获得/设置 按钮模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.Model">
            <summary>
            获得/设置 绑定模型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.ShowLabel">
            <summary>
            获得/设置 是否显示前置标签 默认为 null 未设置时默认显示标签
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.ShowLabelTooltip">
            <summary>
            获得/设置 是否显示标签 Tooltip 多用于标签文字过长导致裁减时使用 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.IsDisplay">
            <summary>
            获得/设置 是否显示为 Display 组件 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.IsSearch">
            <summary>
            获得/设置 是否使用 SearchTemplate 默认 false 使用 EditTemplate 模板
            </summary>
            <remarks>多用于表格组件传递 <see cref="T:BootstrapBlazor.Components.ITableColumn"/> 集合给参数 <see cref="P:BootstrapBlazor.Components.EditorForm`1.Items"/> 时</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.AutoGenerateAllItem">
            <summary>
            获得/设置 是否自动生成模型的所有属性 默认为 true 生成所有属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.Items">
            <summary>
            获得/设置 级联上下文绑定字段信息集合 设置此参数后 <see cref="P:BootstrapBlazor.Components.EditorForm`1.FieldItems"/> 模板不生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.ColumnOrderCallback">
            <summary>
            获得/设置 自定义列排序规则 默认 null 未设置 使用内部排序机制 1 2 3 0 -3 -2 -1 顺序
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.ShowUnsetGroupItemsOnTop">
            <summary>
            获得/设置 未设置 GroupName 编辑项是否放置在顶部 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.PlaceHolderText">
            <summary>
            获得/设置 默认占位符文本 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.CascadedEditContext">
            <summary>
            获得/设置 级联上下文 EditContext 实例 内置于 EditForm 或者 ValidateForm 时有值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorForm`1.ValidateForm">
            <summary>
            获得 ValidateForm 实例
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.EditorForm`1._editorItems">
            <summary>
            获得/设置 配置编辑项目集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorForm`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorForm`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.EditorItem`2">
            <summary>
            EditorItem component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.Field">
            <summary>
            获得/设置 绑定字段值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.FieldChanged">
            <summary>
            获得/设置 绑定字段值变化回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.PropertyType">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.FieldExpression">
            <summary>
            获得/设置 ValueExpression 表达式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.Editable">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.Ignore">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.Readonly">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.Required">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.RequiredErrorMessage">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.SkipValidate">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.ShowLabelTooltip">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.Text">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.Step">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.Rows">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.Cols">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.EditTemplate">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.ComponentType">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.ComponentParameters">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.PlaceHolder">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.Order">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.Items">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.Lookup">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.ShowSearchWhenSelect">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.IsFixedSearchWhenSelect">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.IsPopover">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.LookupStringComparison">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.LookupServiceKey">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.LookupServiceData">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.LookupService">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.ValidateRules">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.GroupName">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EditorItem`2.GroupOrder">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorItem`2.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorItem`2.GetDisplayName">
            <summary>
            Gets the display name for the field.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EditorItem`2.GetFieldName">
            <summary>
            Gets the field name for the field.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IEditorItem">
            <summary>
            IEditorItem interface
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.PropertyType">
            <summary>
            Gets or sets the type of the bound column.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.Editable">
            <summary>
            Gets or sets whether the current edit item is editable. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.Readonly">
            <summary>
            Gets or sets whether the current edit item is read-only. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.Ignore">
            <summary>
            Gets or sets whether the current edit item is ignored. Default is false. When set to true, the UI will not generate this column.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.SkipValidate">
            <summary>
            Gets or sets whether to skip validation. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.Text">
            <summary>
            Gets or sets the header display text.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.ShowLabelTooltip">
            <summary>
            Gets or sets whether to show label tooltip. Mostly used when the label text is too long and gets truncated. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.PlaceHolder">
            <summary>
            Gets or sets the placeholder text. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.Items">
            <summary>
            Gets or sets the additional data source, generally used for components like Select or CheckboxList that require additional configuration.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.Step">
            <summary>
            Gets or sets the step. Default is null. When set to "any", validation is ignored.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.Rows">
            <summary>
            Gets or sets the number of rows for a Textarea. Default is 0.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.Cols">
            <summary>
            Gets or sets the field expand columns. Default is 0.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.EditTemplate">
            <summary>
            Gets or sets the edit template.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.ComponentType">
            <summary>
            Gets or sets the component type. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.ComponentParameters">
            <summary>
            Gets or sets the custom component parameters. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.ShowSearchWhenSelect">
            <summary>
            Gets or sets whether to show the search bar in the dropdown list. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.IsFixedSearchWhenSelect">
            <summary>
            Gets or sets whether to allow fixed search box within dropdown. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.IsPopover">
            <summary>
            Gets or sets whether to use Popover to render the dropdown list. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.ValidateRules">
            <summary>
            Gets or sets the custom validation rules.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IEditorItem.GetDisplayName">
            <summary>
            Gets the display name of the bound field.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IEditorItem.GetFieldName">
            <summary>
            Gets the field information of the bound field.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.Order">
            <summary>
            Gets or sets the order number.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.GroupName">
            <summary>
            Gets or sets the group name of the current property.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.GroupOrder">
            <summary>
            Gets or sets the group order of the current property. Default is 0.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.Required">
            <summary>
            Gets or sets whether the field is required. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IEditorItem.RequiredErrorMessage">
            <summary>
            Gets or sets the error message when the required field is missing. Default is null.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IShowLabel">
            <summary>
            ShowLabel 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IShowLabel.ShowLabel">
            <summary>
            获得/设置 是否显示标签 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IShowLabel.ShowLabelTooltip">
            <summary>
            获得/设置 是否显示标签 Tooltip 多用于标签文字过长导致裁减时使用 默认 null
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Empty.Image">
            <summary>
             获得/设置 图片路径 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Empty.Text">
            <summary>
            获得/设置 空状态描述 默认为 无数据
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Empty.Template">
            <summary>
            获得/设置 自定义模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Empty.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Empty.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorErrorBoundary">
            <summary>
            内部使用 自定义异常组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorErrorBoundary.OnErrorHandleAsync">
            <summary>
            获得/设置 自定义错误处理回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorErrorBoundary.ShowToast">
            <summary>
            获得/设置 是否显示弹窗 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorErrorBoundary.EnableILogger">
            <summary>
            获得/设置 是否启用日志记录功能 默认 true 启用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorErrorBoundary.ToastTitle">
            <summary>
            获得/设置 Toast 弹窗标题
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorErrorBoundary.OnErrorAsync(System.Exception)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorErrorBoundary.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorErrorBoundary.RenderException(System.Exception,BootstrapBlazor.Components.IHandlerException)">
            <summary>
            BootstrapBlazor 组件导致异常渲染方法
            </summary>
            <param name="exception"></param>
            <param name="handler"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ErrorLogger">
            <summary>
            ErrorLogger 全局异常组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ErrorLogger.EnableErrorLogger">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ErrorLogger.ShowToast">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ErrorLogger.EnableILogger">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ErrorLogger.ToastTitle">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ErrorLogger.OnErrorHandleAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ErrorLogger.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ErrorLogger.ErrorContent">
            <summary>
            获得/设置 异常显示模板 默认 null
            </summary>
            <remarks>用于自定义异常显示 UI</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.ErrorLogger.OnInitializedCallback">
            <summary>
            Gets or sets the callback function to be invoked during initialization.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ErrorLogger.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ErrorLogger.OnInitializedAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ErrorLogger.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ErrorLogger.HandlerExceptionAsync(System.Exception)">
            <summary>
            由实现 <see cref="T:BootstrapBlazor.Components.BootstrapComponentBase"/> 组件实现类调用
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ErrorLogger.Register(BootstrapBlazor.Components.IHandlerException)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ErrorLogger.UnRegister(BootstrapBlazor.Components.IHandlerException)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="component"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.IErrorLogger">
            <summary>
            IErrorLogger 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IErrorLogger.EnableErrorLogger">
            <summary>
            获得/设置 是否开启全局异常捕获 默认 true
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IErrorLogger.HandlerExceptionAsync(System.Exception)">
            <summary>
            获得/设置 自定义 Error 处理方法 默认 null
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.IErrorLogger.ShowToast">
            <summary>
            获得 是否显示 Error 提示弹窗 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IErrorLogger.EnableILogger">
            <summary>
            获得/设置 是否启用日志记录功能 默认 true 启用
            <para>设置 false 后关闭记录日志功能</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IErrorLogger.ToastTitle">
            <summary>
            获得 Error Toast 弹窗标题 默认读取资源文件内容
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IErrorLogger.Register(BootstrapBlazor.Components.IHandlerException)">
            <summary>
            注册方法
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.IErrorLogger.UnRegister(BootstrapBlazor.Components.IHandlerException)">
            <summary>
            注销方法
            </summary>
            <param name="component"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.IHandlerException">
            <summary>
            IHandlerException
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IHandlerException.HandlerException(System.Exception,Microsoft.AspNetCore.Components.RenderFragment{System.Exception})">
            <summary>
            
            </summary>
            <param name="ex"></param>
            <param name="errorContent"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.FileIcon">
            <summary>
            Icon 图标组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FileIcon.Extension">
            <summary>
            获得/设置 文件类型扩展名 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FileIcon.BackgroundTemplate">
            <summary>
            获得/设置 背景图模板 默认 null 使用内部内置的空文件 svg 图
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FileIcon.IconColor">
            <summary>
            获得/设置 图标类型背景色 默认 Color.Primary
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FileIcon.Size">
            <summary>
            获得/设置 图标大小 默认 Color.None
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BoolFilter">
            <summary>
            BoolFilter component is used for boolean value filtering in table column.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BoolFilter.Items">
            <summary>
            Gets or sets the filter candidate items. It is recommended to use static data to avoid performance loss.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BoolFilter.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BoolFilter.Reset">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BoolFilter.GetFilterConditions">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BoolFilter.SetFilterConditionsAsync(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DateTimeFilter">
            <summary>
            DataTime filter component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DateTimeFilter.Items">
            <summary>
            Gets or sets the filter candidate items. It is recommended to use static data to avoid performance loss.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeFilter.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeFilter.Reset">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeFilter.GetFilterConditions">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeFilter.SetFilterConditionsAsync(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.EnumFilter">
            <summary>
            Enum filter component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EnumFilter.EnumType">
            <summary>
            内部使用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EnumFilter.Type">
            <summary>
            获得/设置 相关枚举类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.EnumFilter.Items">
            <summary>
            Gets or sets the filter candidate items. It is recommended to use static data to avoid performance loss.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumFilter.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumFilter.Reset">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumFilter.GetFilterConditions">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumFilter.SetFilterConditionsAsync(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FilterBase">
            <summary>
            过滤器基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterBase.Localizer">
            <summary>
            获得/设置 <see cref="T:Microsoft.Extensions.Localization.IStringLocalizer`1"/> 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterBase.FieldKey">
            <summary>
            获得/设置 相关 Field 字段名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterBase.IsHeaderRow">
            <summary>
            获得/设置 是否为 HeaderRow 模式 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterBase.Count">
            <summary>
            获得/设置 条件数量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterBase.TableColumnFilter">
            <summary>
            获得/设置 所属 TableFilter 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterBase.FilterContext">
            <summary>
            Gets or sets the <see cref="P:BootstrapBlazor.Components.FilterBase.FilterContext"/> instance from cascading parameter.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterBase.Logic">
            <summary>
            获得/设置 多个条件逻辑关系符号
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterBase.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterBase.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterBase.OnClearFilter">
            <summary>
            重置按钮回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterBase.OnFilterAsync">
            <summary>
            过滤按钮回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterBase.Reset">
            <summary>
            重置过滤条件方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterBase.GetFilterConditions">
            <summary>
            获得过滤窗口的所有条件方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterBase.SetFilterConditionsAsync(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            设置过滤集合方法
            </summary>
            <param name="filter"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.FilterButton`1">
            <summary>
            FilterButton 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterButton`1.OnClearFilter">
            <summary>
            获得/设置 清除过滤条件时的回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterButton`1.FilterIcon">
            <summary>
            获得/设置 过滤按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterButton`1.ClearIcon">
            <summary>
            获得/设置 重置按钮图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterButton`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FilterContext">
            <summary>
            FilterContext class
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterContext.IsHeaderRow">
            <summary>
            Gets or sets whether the filter is header row. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterContext.FieldKey">
            <summary>
            Gets or sets the column field key. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterContext.Count">
            <summary>
            Gets or sets the filter counter. Default is 0.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FilterKeyValueAction">
            <summary>
            Filter 过滤条件项目 属性 <see cref="P:BootstrapBlazor.Components.FilterKeyValueAction.Filters"/> 为条件表达式，其之间关系由 <see cref="P:BootstrapBlazor.Components.FilterKeyValueAction.FilterLogic"/> 来决定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterKeyValueAction.FieldKey">
            <summary>
            获得/设置 Filter 项字段名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterKeyValueAction.FieldValue">
            <summary>
            获得/设置 Filter 项字段值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterKeyValueAction.FilterLogic">
            <summary>
            获得/设置 Filter 项与其他 Filter 逻辑关系
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterKeyValueAction.FilterAction">
            <summary>
            获得/设置 Filter 条件行为
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterKeyValueAction.Filters">
            <summary>
            获得/设置 子过滤条件集合
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FilterLogicItem">
            <summary>
            FilterLogicItem 组件用于选择过滤条件的逻辑运算符
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterLogicItem.Logic">
            <summary>
            获得/设置 逻辑运算符
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterLogicItem.LogicChanged">
            <summary>
            获得/设置 逻辑运算符改变回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterLogicItem.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FilterProvider">
            <summary>
            FilterProvider component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterProvider.ClearButtonText">
            <summary>
            获得/设置 重置按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterProvider.FilterButtonText">
            <summary>
            获得/设置 过滤按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterProvider.PlusIcon">
            <summary>
            获得/设置 增加过滤条件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterProvider.MinusIcon">
            <summary>
            获得/设置 减少过滤条件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterProvider.ShowMoreButton">
            <summary>
            Gets or sets whether show the more button. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterProvider.Title">
            <summary>
            Gets or sets the filter title. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterProvider.ChildContent">
            <summary>
            Gets or sets the child content. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterProvider.TableColumnFilter">
            <summary>
            Gets or sets the <see cref="P:BootstrapBlazor.Components.FilterProvider.TableColumnFilter"/> instance from cascading parameter.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterProvider.Count">
            <summary>
            Gets or sets the filter counter. Default is 0.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterProvider.FieldKey">
            <summary>
            Gets or sets the column field key. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FilterProvider.IsHeaderRow">
            <summary>
            Gets or sets whether the filter is header row. Default is false.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterProvider.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterProvider.OnClickReset">
            <summary>
            点击重置按钮时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterProvider.OnClickConfirm">
            <summary>
            点击确认时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterProvider.OnClickPlus">
            <summary>
            点击增加按钮时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.FilterProvider.OnClickMinus">
            <summary>
            点击减少按钮时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IFilter">
            <summary>
            过滤器接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IFilter.FilterAction">
            <summary>
            获得/设置 本过滤器相关 IFilterAction 实例
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IFilterAction">
            <summary>
            IFilterAction 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IFilterAction.Reset">
            <summary>
            重置过滤条件方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IFilterAction.GetFilterConditions">
            <summary>
            获得 IFilter 实例中的过滤条件集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IFilterAction.SetFilterConditionsAsync(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            Override existing filter conditions
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.LookupFilter">
            <summary>
            Lookup 过滤器
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.LookupFilter.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.LookupFilter.Reset">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.LookupFilter.GetFilterConditions">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.LookupFilter.SetFilterConditionsAsync(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.MultiFilter">
            <summary>
            多选过滤器组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiFilter.SearchPlaceHolderText">
            <summary>
            获得/设置 搜索栏占位符 默认 nul 使用资源文件中值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiFilter.SelectAllText">
            <summary>
            获得/设置 全选按钮文本 默认 nul 使用资源文件中值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiFilter.ShowSearch">
            <summary>
            获得/设置 是否显示搜索栏 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiFilter.OnGetItemsAsync">
            <summary>
            获得 过滤项集合回调方法 适合动态给定数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiFilter.AlwaysTriggerGetItems">
            <summary>
            获得 是否每次弹窗时均调用 <see cref="P:BootstrapBlazor.Components.MultiFilter.OnGetItemsAsync"/> 回调方法，多用于动态填装过滤条件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiFilter.LoadingTemplate">
            <summary>
            获得/设置 Loading 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiFilter.StringComparison">
            <summary>
            Gets or sets the string comparison option used for filtering operations. Default is <see cref="F:System.StringComparison.OrdinalIgnoreCase"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiFilter.Items">
            <summary>
            Gets or sets the filter candidate items. It is recommended to use static data to avoid performance loss.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiFilter.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiFilter.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiFilter.TriggerGetItemsCallback">
            <summary>
            JavaScript 回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiFilter.OnSearchValueChanged(System.String)">
            <summary>
            过滤内容搜索
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiFilter.Reset">
            <summary>
            重置过滤条件方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiFilter.GetFilterConditions">
            <summary>
            生成过滤条件方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiFilter.SetFilterConditionsAsync(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.MultipleFilterBase">
            <summary>
            Multiple filter base class
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.MultiSelectFilter`1">
            <summary>
            多项选择下拉框过滤组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectFilter`1.Items">
            <summary>
            Gets or sets the filter items.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectFilter`1.Reset">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectFilter`1.GetFilterConditions">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectFilter`1.SetFilterConditionsAsync(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.NotSupportFilter">
            <summary>
            NotSupportFilter component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NotSupportFilter.NotSupportedColumnFilterMessage">
            <summary>
            获得/设置 不支持过滤类型提示信息 默认 null 读取资源文件内容
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NotSupportFilter.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NotSupportFilter.GetFilterConditions">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.NotSupportFilter.Reset">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.NumberFilter`1">
            <summary>
            NumberFilter component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NumberFilter`1.Items">
            <summary>
            Gets or sets the filter candidate items. It is recommended to use static data to avoid performance loss.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NumberFilter`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NumberFilter`1.Reset">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NumberFilter`1.GetFilterConditions">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.NumberFilter`1.SetFilterConditionsAsync(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SearchFilterAction">
            <summary>
            IFilterAction 类默认实现类
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="action"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.SearchFilterAction.#ctor(System.String,System.Object,BootstrapBlazor.Components.FilterAction)">
            <summary>
            IFilterAction 类默认实现类
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="action"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchFilterAction.Name">
            <summary>
            获得/设置 过滤条件名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchFilterAction.Value">
            <summary>
            获得/设置 过滤条件值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchFilterAction.Action">
            <summary>
            获得/设置 过滤条件关系运算符
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SearchFilterAction.Reset">
            <summary>
            重置过滤条件方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SearchFilterAction.SetFilterConditionsAsync(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            设置过滤条件方法
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SearchFilterAction.GetFilterConditions">
            <summary>
            获取所有过滤条件集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.StringFilter">
            <summary>
            StringFilter component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StringFilter.Items">
            <summary>
            Gets or sets the filter candidate items. It is recommended to use static data to avoid performance loss.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StringFilter.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StringFilter.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StringFilter.Reset">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StringFilter.GetFilterConditions">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.StringFilter.SetFilterConditionsAsync(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableColumnFilter">
            <summary>
            TableFilter component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnFilter.IsActive">
            <summary>
            获得/设置 是否 active
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnFilter.Icon">
            <summary>
            获得/设置 过滤图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnFilter.NotSupportedMessage">
            <summary>
            获得/设置 不支持过滤类型提示信息 默认 null 读取资源文件内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnFilter.NotSupportedColumnFilterMessage">
            <summary>
            获得/设置 不支持过滤类型提示信息 默认 null 读取资源文件内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnFilter.Column">
            <summary>
            获得 相关联 ITableColumn 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnFilter.IsHeaderRow">
            <summary>
            获得/设置 是否为 HeaderRow 模式 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnFilter.Table">
            <summary>
            获得/设置 ITable 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnFilter.FilterClassString">
            <summary>
            获得 过滤小图标样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnFilter.ClassString">
            <summary>
            获得 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnFilter.FilterAction">
            <summary>
            获得/设置 过滤条件 IFilterAction 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumnFilter.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumnFilter.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumnFilter.Reset">
            <summary>
            Reset filter method
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumnFilter.OnFilterAsync">
            <summary>
            Filter method
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.FlipClock">
            <summary>
            FlipClock 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.ShowYear">
            <summary>
            获得/设置 是否显示 Year 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.ShowMonth">
            <summary>
            获得/设置 是否显示 Month 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.ShowDay">
            <summary>
            获得/设置 是否显示 Day 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.ShowHour">
            <summary>
            获得/设置 是否显示 Hour 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.ShowMinute">
            <summary>
            获得/设置 是否显示 Minute 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.ShowSecond">
            <summary>
            获得/设置 是否显示 Second 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.OnCompletedAsync">
            <summary>
            获得/设置 计时结束回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.ViewMode">
            <summary>
            获得/设置 显示模式 默认 <see cref="F:BootstrapBlazor.Components.FlipClockViewMode.DateTime"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.Height">
            <summary>
            获得/设置 组件高度 默认 null 未设置使用样式默认值 200px;
            </summary>
            <remarks>支持多种单位 200px 200em 200pt 100% 等</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.BackgroundColor">
            <summary>
            获得/设置 组件背景色 默认 null 未设置使用样式默认值 radial-gradient(ellipse at center, rgba(150, 150, 150, 1) 0%, rgba(89, 89, 89, 1) 100%);
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.FontSize">
            <summary>
            获得/设置 组件字体大小 默认 null 未设置使用样式默认值 80px;
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.CardWidth">
            <summary>
            获得/设置 组件卡片宽度 默认 null 未设置使用样式默认值 60px;
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.CardHeight">
            <summary>
            获得/设置 组件卡片高度 默认 null 未设置使用样式默认值 90px;
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.CardColor">
            <summary>
            获得/设置 组件卡片字体颜色 默认 null 未设置使用样式默认值 #ccc;
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.CardBackgroundColor">
            <summary>
            获得/设置 组件卡片背景颜色 默认 null 未设置使用样式默认值 #333;
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.CardDividerHeight">
            <summary>
            获得/设置 组件卡片分割线高度 默认 null 未设置使用样式默认值 1px;
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.CardDividerColor">
            <summary>
            获得/设置 组件卡片分割线颜色 默认 null 未设置使用样式默认值 rgba(0, 0, 0, .4);
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.CardMargin">
            <summary>
            获得/设置 组件卡片间隔 默认 null 未设置使用样式默认值 5;
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.CardGroupMargin">
            <summary>
            获得/设置 组件卡片组间隔 默认 null 未设置使用样式默认值 20;
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FlipClock.StartValue">
            <summary>
            获得/设置 倒计时或者计时的开始时间 <see cref="F:BootstrapBlazor.Components.FlipClockViewMode.Count"/> 默认 <see cref="F:BootstrapBlazor.Components.FlipClockViewMode.CountDown" /> 模式下生效
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FlipClock.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.FlipClock.OnCompleted">
            <summary>
            倒计时结束回调方法由 JSInvoke 调用
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Footer">
            <summary>
            Footer 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Footer.ClassName">
            <summary>
            获得 按钮样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Footer.Text">
            <summary>
            获得/设置 Footer 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Footer.Target">
            <summary>
            获得/设置 Footer 组件中返回顶端按钮控制的滚动条所在组件 设置 <see cref="P:BootstrapBlazor.Components.Footer.ShowGoto"/> 为 true 时生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Footer.ChildContent">
            <summary>
            获得/设置 内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Footer.ShowGoto">
            <summary>
            获得/设置 是否显示 Goto 小组件 默认 true 显示
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FullScreenButton">
            <summary>
            FullScreenButton 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FullScreenButton.FullScreenIcon">
            <summary>
            获得/设置 全屏图标 默认 fa-solid fa-maximize
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FullScreenButton.FullScreenExitIcon">
            <summary>
            获得/设置 退出全屏图标 默认 fa-solid fa-compress
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FullScreenButton.TargetId">
            <summary>
            获得/设置 全屏元素 Id 默认为 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FullScreenButton.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FullScreenOption">
            <summary>
            FullScreen 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FullScreenOption.Element">
            <summary>
            获得/设置 要全屏的 HTML Element 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FullScreenOption.Id">
            <summary>
            获得/设置 要全屏的 HTML Element Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FullScreenOption.Selector">
            <summary>
            获得/设置 要全屏的 HTML css selector
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.GeolocationPosition">
            <summary>
            定位数据类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GeolocationPosition.Latitude">
            <summary>
            获得/设置 纬度
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.GeolocationPosition.Longitude">
            <summary>
            获得/设置 经度
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.GeolocationPosition.Accuracy">
            <summary>
            获得/设置 位置精度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GeolocationPosition.Altitude">
            <summary>
            获得/设置 海拔高度单位米
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GeolocationPosition.AltitudeAccuracy">
            <summary>
            获得/设置 海拔精度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GeolocationPosition.Heading">
            <summary>
            获得/设置 方向 从正北开始以度计
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GeolocationPosition.Speed">
            <summary>
            获得/设置 速度 以米/每秒计
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GeolocationPosition.Timestamp">
            <summary>
            获得/设置 时间戳
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GeolocationPosition.LastUpdateTime">
            <summary>
            获得/设置 时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GeolocationPosition.CurrentDistance">
            <summary>
            获得/设置 移动距离
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GeolocationPosition.TotalDistance">
            <summary>
            获得/设置 总移动距离
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GeolocationPosition.LastLat">
            <summary>
            获得/设置 最后一次获取到的纬度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GeolocationPosition.LastLong">
            <summary>
            获得/设置 最后一次获取到的经度
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.GoTop">
            <summary>
            GoTop 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GoTop.Icon">
            <summary>
            获得/设置 返回顶端 Icon 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GoTop.Target">
            <summary>
            获得/设置 滚动条所在组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GoTop.ScrollBehavior">
            <summary>
            获得/设置 滚动行为 默认 ScrollIntoViewBehavior.Smooth
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GoTop.TooltipText">
            <summary>
            获得/设置 鼠标悬停提示文字信息
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.GoTop.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.GroupBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GroupBox.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GroupBox.Title">
            <summary>
            获得/设置 Title 属性 默认为 null
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Handwritten">
            <summary>
            Handwritten 手写签名
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Handwritten.ClearButtonText">
            <summary>
            清除按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Handwritten.SaveButtonText">
            <summary>
            保存按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Handwritten.HandwrittenBase64">
            <summary>
            手写结果回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Handwritten.Result">
            <summary>
            手写签名imgBase64字符串
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Handwritten.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Handwritten.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Handwritten.OnValueChanged(System.String)">
            <summary>
            保存结果
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Link">
            <summary>
            Link 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Link.Href">
            <summary>
            获得/设置 href 属性值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Link.Rel">
            <summary>
            获得/设置 Rel 属性值, 默认 stylesheet
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Link.Version">
            <summary>
            获得/设置 版本号 默认 null 自动生成
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Script">
            <summary>
            Script 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Script.Src">
            <summary>
            获得/设置 src 属性值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Script.Version">
            <summary>
            获得/设置 版本号 默认 null 自动生成
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorIcon">
            <summary>
            Icon 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorIcon.Name">
            <summary>
            获得/设置 图标名称
            </summary>
            <remarks>如果是字库图标应该是样式名称如 fa-solid fa-home 如果是 svg sprites 应该为 Id</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorIcon.IsSvgSprites">
            <summary>
            获得/设置 是否为 svg sprites 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorIcon.Url">
            <summary>
            获得/设置 Svg Sprites 路径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorIcon.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SvgIcon">
            <summary>
            SvgIcon 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SvgIcon.Name">
            <summary>
            获得/设置 图标名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SvgIcon.Href">
            <summary>
            获得 图标地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SvgIcon.ClassString">
            <summary>
            获得 样式字符串
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SvgIcon.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IFrame">
            <summary>
            Frame component encapsulates the Html iframe element
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IFrame.Src">
            <summary>
            Gets or sets the URL of the webpage to be loaded in the Frame
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IFrame.Data">
            <summary>
            Gets or sets the data to be passed
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IFrame.OnPostDataAsync">
            <summary>
            Gets or sets Frame loads the data passed by the page
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IFrame.OnReadyAsync">
            <summary>
            Gets or sets Callback method after the page is loaded.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IFrame.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IFrame.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.IFrame.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IFrame.PushData(System.Object)">
            <summary>
            Method to push data
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IFrame.TriggerPostData(System.Object)">
            <summary>
            Called by JavaScript
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IFrame.TriggerLoaded">
            <summary>
            Called by JavaScript
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ImagePreviewer">
            <summary>
            图片预览组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImagePreviewer.ZIndex">
            <summary>
            获得/设置 原生 z-index 属性 默认 2050
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImagePreviewer.PreviewList">
            <summary>
            获得/设置 预览大图链接集合 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImagePreviewer.PreviousIcon">
            <summary>
            获得/设置 上一张图片 Icon 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImagePreviewer.NextIcon">
            <summary>
            获得/设置 下一张图片 Icon 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImagePreviewer.MinusIcon">
            <summary>
            获得/设置 缩小 Icon 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImagePreviewer.PlusIcon">
            <summary>
            获得/设置 方法 Icon 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImagePreviewer.RotateLeftIcon">
            <summary>
            获得/设置 向左旋转 Icon 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImagePreviewer.RotateRightIcon">
            <summary>
            获得/设置 向右旋转 Icon 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImagePreviewer.ZoomSpeed">
            <summary>
            获得/设置 预览缩放速度 默认 null 未设置取 0.015 值
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ImagePreviewer.Show(System.Int32)">
            <summary>
            显示图片
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ImagePreviewer.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ImagePreviewer.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ImagePreviewer.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ImageViewer">
            <summary>
            Image 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.Url">
            <summary>
            获得/设置 图片 Url 默认 null 必填
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.IsAsync">
            <summary>
            获得/设置 图片是否异步加载
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.Alt">
            <summary>
            获得/设置 原生 alt 属性 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.ShowPlaceHolder">
            <summary>
            获得/设置 是否显示占位符 适用于大图片加载 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.HandleError">
            <summary>
            获得/设置 加载失败时是否显示错误占位符 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.PlaceHolderTemplate">
            <summary>
            获得/设置 占位模板 未设置 <see cref="P:BootstrapBlazor.Components.ImageViewer.Url"/> 或者 正在加载时显示 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.ErrorTemplate">
            <summary>
            获得/设置 错误模板 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.FitMode">
            <summary>
            获得/设置 原生 object-fit 属性 默认 fill 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.ZIndex">
            <summary>
            获得/设置 原生 z-index 属性 默认 2050
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.PreviewList">
            <summary>
            获得/设置 预览大图链接集合 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.PreviewIndex">
            <summary>
            获得/设置 预览大图当前链接集合点开的索引 默认为 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.OnErrorAsync">
            <summary>
            获得/设置 图片加载失败时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.OnLoadAsync">
            <summary>
            获得/设置 图片加载成功时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.FileIcon">
            <summary>
            获得/设置 图片文件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.IsIntersectionObserver">
            <summary>
            获得/设置 是否交叉监听 默认 false
            </summary>
            <remarks>不可见时不加载图片，当图片即将可见时才开始加载图片</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.ImageViewer.ZoomSpeed">
            <summary>
            获得/设置 预览缩放速度 默认 null 未设置取 0.015 值
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ImageViewer.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ImageViewer.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ImageViewer.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapInput`1">
            <summary>
            BootstrapInput 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInput`1.Readonly">
            <summary>
            获得/设置 是否为只读 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInput`1.AutoSetDefaultWhenNull">
            <summary>
            获得/设置 用户删除后是否自动更改为默认值 0 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInput`1.Clearable">
            <summary>
            获得/设置 是否显示清空小按钮 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInput`1.IsClearable">
            <summary>
            获得/设置 是否显示清空小按钮 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInput`1.OnClear">
            <summary>
            获得/设置 清空文本框时回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInput`1.ClearableIcon">
            <summary>
            获得/设置 清空小按钮图标 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInput`1.ClearIcon">
            <summary>
            获得/设置 清空小按钮图标 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInput`1.IconTheme">
            <summary>
            图标主题服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInput`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInput`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="value"></param>
            <param name="result"></param>
            <param name="validationErrorMessage"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapInputBase`1">
            <summary>
            Base class for BootstrapInput components
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.ClassName">
            <summary>
            Gets the class attribute value
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.FocusElement">
            <summary>
            Gets or sets Element reference instance
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.PlaceHolder">
            <summary>
            Gets or sets the placeholder attribute value
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.OnEnterAsync">
            <summary>
            Gets or sets the callback method for Enter key press, default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.OnEscAsync">
            <summary>
            Gets or sets the callback method for Esc key press, default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.Color">
            <summary>
            Gets or sets the button color
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.Formatter">
            <summary>
            Gets or sets the formatter function
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.FormatString">
            <summary>
            Gets or sets the format string, e.g., "yyyy-MM-dd" for date types
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.IsAutoFocus">
            <summary>
            Gets or sets whether to automatically focus, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.IsSelectAllTextOnFocus">
            <summary>
            Gets or sets whether to automatically select all text on focus, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.IsSelectAllTextOnEnter">
            <summary>
            Gets or sets whether to automatically select all text on Enter key press, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.IsTrim">
            <summary>
            Gets or sets whether to automatically trim whitespace, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.OnBlurAsync">
            <summary>
            Gets or sets the callback method for blur event, default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.Type">
            <summary>
            Gets the input type, default is "text"
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputBase`1.FocusAsync">
            <summary>
            Method to focus the element
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputBase`1.SelectAllTextAsync">
            <summary>
            Method to select all text
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputBase`1.SkipRegisterEnterEscJSInvoke">
            <summary>
            Gets or sets whether to skip JS script registration for Enter/Esc key handling, default is false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputBase`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputBase`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputBase`1.GetInputId">
            <summary>
            Gets the input element Id
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputBase`1.FormatValueAsString(`0)">
            <summary>
            Value formatting delegate method
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputBase`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <summary>
            TryParseValueFromString
            </summary>
            <param name="value"></param>
            <param name="result"></param>
            <param name="validationErrorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputBase`1.OnBlur">
            <summary>
            OnBlur method
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputBase`1.EnterCallback">
            <summary>
            Client-side EnterCallback method
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputBase`1.EscCallback">
            <summary>
            Client-side EscCallback method
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputBase`1.DisposeAsync(System.Boolean)">
            <summary>
            <inheritdoc />
            </summary>
            <param name="disposing"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapInputEventBase`1">
            <summary>
            输入框基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputEventBase`1.UseInputEvent">
            <summary>
            获得/设置 是否在文本框输入值时触发 bind-value:event="oninput" 默认 false
            </summary>
            <remarks>设置 <see cref="P:BootstrapBlazor.Components.BootstrapInputEventBase`1.UseInputEvent"/> 参数后，Formatter 与 FormatString 均失效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputEventBase`1.EventString">
            <summary>
            event 字符串
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapInputGroup">
            <summary>
            BootstrapInputGroup 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputGroup.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapInputGroupIcon">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputGroupIcon.Icon">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapInputGroupLabel">
            <summary>
            BootstrapInputGroupLabel 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputGroupLabel.Width">
            <summary>
            获得/设置 标签宽度 默认 null 未设置自动适应
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputGroupLabel.Alignment">
            <summary>
            获得/设置 标签对其方式 默认 null 未设置 star 对齐
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputGroupLabel.ShowRequiredMark">
            <summary>
            获得/设置 是否显示必填项标识 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputGroupLabel.ChildContent">
            <summary>
            Gets or sets the child content. Default is null.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputGroupLabel.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapPassword">
            <summary>
            BootstrapPassword 组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapPassword.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FloatingLabel`1">
            <summary>
            FloatingLabel 组件
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.FloatingLabel`1.IsGroupBox">
            <summary>
            获得/设置 是否为 GroupBox 样式 默认 false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FloatingLabel`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.OtpInput">
            <summary>
            OTP input component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.OtpInput.Digits">
            <summary>
            Gets or sets the length of the OTP input. Default is 6.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.OtpInput.IsReadonly">
            <summary>
            Gets or sets whether the OTP input is readonly. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.OtpInput.Type">
            <summary>
            Gets or sets the value type of the OTP input. Default is <see cref="F:BootstrapBlazor.Components.OtpInputType.Number"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.OtpInput.PlaceHolder">
            <summary>
            Gets or sets the placeholder of the OTP input. Default is null.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.OtpInput.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.OtpInput.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.OtpInput.TriggerSetValue(System.String)">
            <summary>
            Trigger value changed event callback. Trigger by JavaScript.
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapInputNumber`1">
            <summary>
            An input component for editing numeric values.
            Supported numeric types are <see cref="T:System.Int32"/>, <see cref="T:System.Int64"/>, <see cref="T:System.Int16"/>, <see cref="T:System.Single"/>, <see cref="T:System.Double"/>, <see cref="T:System.Decimal"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumber`1.ButtonClassString">
            <summary>
            获得 按钮样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumber`1.InputClassString">
            <summary>
            获得 文本框样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumber`1.OnIncrement">
            <summary>
            获得/设置 数值增加时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumber`1.OnDecrement">
            <summary>
            获得/设置 数值减少时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumber`1.Min">
            <summary>
            获得/设置 最小值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumber`1.Max">
            <summary>
            获得/设置 最大值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumber`1.Step">
            <summary>
            获得/设置 步长 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumber`1.ShowButton">
            <summary>
            获得/设置 是否显示加减按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumber`1.MinusIcon">
            <summary>
            获得/设置 减小数值图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapInputNumber`1.PlusIcon">
            <summary>
            获得/设置 增加数值图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumber`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumber`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumber`1.OnAfterRender(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumber`1.FormatParsingErrorMessage">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumber`1.FormatValueAsString(`0)">
            <summary>
            Formats the value as a string. Derived classes can override this to determine the formatting used for <see cref="P:BootstrapBlazor.Components.ValidateBase`1.CurrentValueAsString"/>.
            </summary>
            <param name="value">The value to format.</param>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumber`1.InternalFormat(`0)">
            <summary>
            InternalFormat 方法
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumber`1.OnClickDec">
            <summary>
            点击减少按钮式时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumber`1.OnClickInc">
            <summary>
            点击增加按钮式时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumber`1.OnBlur">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumber`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="value"></param>
            <param name="result"></param>
            <param name="validationErrorMessage"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapInputNumberBase`1">
            <summary>
            BootstrapInputNumber 基类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapInputNumberBase`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            SetParametersAsync 方法
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IntersectionObserver">
            <summary>
            可见检测组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IntersectionObserver.UseElementViewport">
            <summary>
            The element that is used as the viewport for checking visibility of the target. Must be the ancestor of the target. Defaults to the browser viewport if not specified or if null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IntersectionObserver.RootMargin">
            <summary>
            Margin around the root. Can have values similar to the CSS margin property, e.g. "10px 20px 30px 40px" (top, right, bottom, left). The values can be percentages. This set of values serves to grow or shrink each side of the root element's bounding box before computing intersections. Defaults to all zeros.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IntersectionObserver.Threshold">
            <summary>
            Either a single number or an array of numbers which indicate at what percentage of the target's visibility the observer's callback should be executed. If you only want to detect when visibility passes the 50% mark, you can use a value of 0.5. If you want the callback to run every time visibility passes another 25%, you would specify the array [0, 0.25, 0.5, 0.75, 1]. The default is 0 (meaning as soon as even one pixel is visible, the callback will be run). A value of 1.0 means that the threshold isn't considered passed until every pixel is visible.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IntersectionObserver.AutoUnobserveWhenIntersection">
            <summary>
            获得/设置 可见后是否自动取消观察 默认 true 可见后自动取消观察提高性能
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IntersectionObserver.AutoUnobserveWhenNotIntersection">
            <summary>
            获得/设置 不可见后是否自动取消观察 默认 false 不可见后自动取消观察提高性能
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IntersectionObserver.OnIntersecting">
            <summary>
            获得/设置 已经交叉回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IntersectionObserver.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IntersectionObserver.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IntersectionObserver.TriggerIntersecting(BootstrapBlazor.Components.IntersectionObserverEntry)">
            <summary>
            交叉检测回调方法 由 JavaScript 调用
            </summary>
            <param name="entry"><see cref="T:BootstrapBlazor.Components.IntersectionObserverEntry"/> 实例</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IntersectionObserverEntry">
            <summary>
            交叉检测项实例类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IntersectionObserverEntry.IntersectionRatio">
            <summary>
            获得/设置 检测项与根元素交叉比率 0 - 1 之间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IntersectionObserverEntry.IsIntersecting">
            <summary>
            获得/设置 是否正在交叉
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IntersectionObserverEntry.Index">
            <summary>
            获得/设置 当前项索引
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IntersectionObserverEntry.Time">
            <summary>
            获得/设置 与文档创建时间差
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IntersectionObserverItem">
            <summary>
            检测交叉组件子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IntersectionObserverItem.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IpAddress">
            <summary>
            BootstrapInputTextBase 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IpAddress.ClassName">
            <summary>
            获得 class 样式集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IpAddress.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BaiDuIPLocator">
            <summary>
            百度搜索引擎 IP 定位器
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BaiDuIPLocator.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiDuIPLocator.Data">
            <summary>
            获得/设置 详细地址信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiDuIPLocator.Status">
            <summary>
            获得/设置 结果状态返回码 为 0 时通讯正常
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BaiDuIPLocator.Locate(BootstrapBlazor.Components.IPLocatorOption)">
            <summary>
            定位方法
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BaiDuIPLocator.ToString">
            <summary>
            ToString 方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.LocationInfo">
            <summary>
            LocationInfo 结构体
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LocationInfo.Location">
            <summary>
            获得/设置 定位信息
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultIPLocator">
            <summary>
            默认定位实现类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultIPLocator.Locate(BootstrapBlazor.Components.IPLocatorOption)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultIPLocator.Url">
            <summary>
            获得/设置 IP定位器请求地址
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultIPLocator.Locate``1(BootstrapBlazor.Components.IPLocatorOption)">
            <summary>
            泛型定位方法
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultIPLocatorProvider">
            <summary>
            默认 IP 地理位置定位器
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultIPLocatorProvider.#ctor(System.IServiceProvider,System.Net.Http.IHttpClientFactory,Microsoft.Extensions.Logging.ILogger{BootstrapBlazor.Components.DefaultIPLocatorProvider},Microsoft.Extensions.Options.IOptionsMonitor{BootstrapBlazor.Components.IPLocatorOption})">
            <summary>
            构造函数
            </summary>
            <param name="provider"></param>
            <param name="factory"></param>
            <param name="logger"></param>
            <param name="option"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultIPLocatorProvider.Locate(System.String)">
            <summary>
            定位方法
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IIPLocator">
            <summary>
            IP 地址定位接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IIPLocator.Locate(BootstrapBlazor.Components.IPLocatorOption)">
            <summary>
            定位方法
            </summary>
            <param name="option">定位器配置信息</param>
            <returns>定位器定位结果</returns>
        </member>
        <member name="P:BootstrapBlazor.Components.IIPLocator.Url">
            <summary>
            获得/设置 接口地址
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IIPLocatorProvider">
            <summary>
            IP 地址定位服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IIPLocatorProvider.Locate(System.String)">
             <summary>
            
             </summary>
             <param name="ip"></param>
             <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IPLocatorOption">
            <summary>
            IP定位器配置项
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IPLocatorOption.LocatorFactory">
            <summary>
            获得/设置 定位器创建方法未设置使用内部定位器
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IPLocatorOption.RequestTimeout">
            <summary>
            获得/设置 IP地址请求超时时间 默认为 3000 毫秒
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IPLocatorOption.Localhosts">
            <summary>
            获得 本机地址列表
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IPLocatorOption.IP">
            <summary>
            获得/设置 IP地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IPLocatorOption.HttpClient">
            <summary>
            获得/设置 HttpClient 实体类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IPLocatorOption.Logger">
            <summary>
            获得/设置 ILogger 实体类
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapLabel">
            <summary>
            BootstrapLabel 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapLabel.Value">
            <summary>
            获得/设置 组件值 显示文本 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapLabel.ShowLabelTooltip">
            <summary>
            获得/设置 是否显示 Tooltip 多用于标签文字过长导致裁减时使用 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapLabel.LabelWidth">
            <summary>
            获得/设置 标签宽度 默认 null 未设置使用全局设置 <code>--bb-row-label-width</code> 值
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapLabel.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapLabelSetting">
            <summary>
            BootstrapLabelSetting 组件类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapLabelSetting.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapLabelSetting.LabelWidth">
            <summary>
            获得/设置 标签宽度 默认 null 未设置使用全局设置 <code>--bb-row-label-width</code> 值
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Layout">
            <summary>
            Layout 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.TabStyle">
            <summary>
            Gets or sets the tab style. Default is <see cref="F:BootstrapBlazor.Components.TabStyle.Default"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ShowToolbar">
            <summary>
            Gets or sets whether show the toolbar. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ToolbarTemplate">
            <summary>
            Gets or sets the template of the toolbar button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ShowFullscreenToolbarButton">
            <summary>
            Gets or sets whether show the full screen button. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.FullscreenToolbarButtonIcon">
            <summary>
            Gets or sets the full screen toolbar button icon string. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.FullscreenToolbarTooltipText">
            <summary>
            Gets or sets the full screen toolbar button tooltip string. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ShowRefreshToolbarButton">
            <summary>
            Gets or sets whether show the full screen button. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.RefreshToolbarButtonIcon">
            <summary>
            Gets or sets the refresh toolbar button icon string. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.RefreshToolbarTooltipText">
            <summary>
            Gets or sets the refresh toolbar button tooltip string. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.OnToolbarRefreshCallback">
            <summary>
            Gets or sets the refresh toolbar button click event callback. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.IsCollapsed">
            <summary>
            获得/设置 侧边栏状态
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.IsCollapsedChanged">
            <summary>
            获得/设置 侧边栏状态
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.IsAccordion">
            <summary>
            获得/设置 菜单手风琴效果
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.CollapseBarTemplate">
            <summary>
            获得/设置 收起展开按钮模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.Header">
            <summary>
            获得/设置 Header 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.Footer">
            <summary>
            获得/设置 Footer 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.MenuBarIcon">
            <summary>
            获得/设置 MenuBar 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.Side">
            <summary>
            获得/设置 Side 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ShowSplitBar">
            <summary>
            获得/设置 是否显示分割栏 默认 false 不显示
            仅在 左右布局时有效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ShowSplitebar">
            <summary>
            获得/设置 是否显示分割栏 默认 false 不显示
            仅在 左右布局时有效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.SidebarMinWidth">
            <summary>
            获得/设置 侧边栏最小宽度 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.SidebarMaxWidth">
            <summary>
            获得/设置 侧边栏最大宽度 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.NotAuthorized">
            <summary>
            获得/设置 NotAuthorized 模板 默认 null NET6.0/7.0 有效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.NotFound">
            <summary>
            获得/设置 NotFound 模板 默认 null NET6.0/7.0 有效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.NotFoundTabText">
            <summary>
            获得/设置 NotFound 标签文本 默认 null NET6.0/7.0 有效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.SideWidth">
            <summary>
            获得/设置 侧边栏宽度，支持百分比，设置 0 时关闭宽度功能 默认值 300
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.Main">
            <summary>
            获得/设置 Main 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.IsFullSide">
            <summary>
            获得/设置 侧边栏是否占满整个左侧 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.IsPage">
            <summary>
            获得/设置 是否为整页面布局 默认为 false
            </summary>
            <remarks>为真时增加 is-page 样式</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.Menus">
            <summary>
            获得/设置 侧边栏菜单集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.UseTabSet">
            <summary>
            获得/设置 是否右侧使用 Tab 组件 默认为 false 不使用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.IsFixedTabHeader">
            <summary>
            获得/设置 是否固定多标签 Header 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.IsOnlyRenderActiveTab">
            <summary>
            获得/设置 是否仅渲染 Active 标签
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.AllowDragTab">
            <summary>
            获得/设置 是否允许拖动标签页 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.IsFixedFooter">
            <summary>
            获得/设置 是否固定 Footer 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.IsFixedHeader">
            <summary>
            获得/设置 是否固定 Header 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ShowCollapseBar">
            <summary>
            获得/设置 是否显示收缩展开 Bar 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ShowFooter">
            <summary>
            获得/设置 是否显示 Footer 模板 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ShowGotoTop">
            <summary>
            获得/设置 是否显示返回顶端按钮 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.OnClickMenu">
            <summary>
            获得/设置 点击菜单时回调委托方法 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.OnCollapsed">
            <summary>
            获得/设置 收缩展开回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.TabDefaultUrl">
            <summary>
            获得/设置 默认标签页 关闭所有标签页时自动打开此地址 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ShowTabItemClose">
            <summary>
            获得/设置 标签是否显示关闭按钮 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ShowTabExtendButtons">
            <summary>
            获得/设置 标签是否显示扩展按钮 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ClickTabToNavigation">
            <summary>
            获得/设置 点击标签页是否切换地址栏 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.OnAuthorizing">
            <summary>
            获得/设置 授权回调方法多用于权限控制
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.NotAuthorizeUrl">
            <summary>
            获得/设置 未授权导航地址 默认为 "/Account/Login" Cookie 模式登录页
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ShowTabContextMenu">
            <summary>
            Gets or sets whether enable tab context menu. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.BeforeTabContextMenuTemplate">
            <summary>
            Gets or sets the template of before tab context menu. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.TabContextMenuTemplate">
            <summary>
            Gets or sets the template of tab context menu. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.TabContextMenuRefreshIcon">
            <summary>
            Gets or sets the icon of tab item context menu refresh button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.TabContextMenuCloseIcon">
            <summary>
            Gets or sets the icon of tab item context menu close button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.TabContextMenuCloseOtherIcon">
            <summary>
            Gets or sets the icon of tab item context menu close other button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.TabContextMenuCloseAllIcon">
            <summary>
            Gets or sets the icon of tab item context menu close all button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.OnBeforeShowContextMenu">
            <summary>
            Gets or sets before popup context menu callback. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ShowTabInHeader">
            <summary>
            Gets or sets whether show the tab in header. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.IsAuthenticated">
            <summary>
            获得/设置 是否已授权
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.FooterClassString">
            <summary>
            获得 页脚样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.HeaderClassString">
            <summary>
            获得 页头样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.SideClassString">
            <summary>
            获得 侧边栏样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.SideStyleString">
            <summary>
            获得 侧边栏 Style 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ExcludeUrls">
            <summary>
            获得/设置 排除地址支持通配符
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.AdditionalAssemblies">
            <summary>
            获得/设置 Gets or sets a collection of additional assemblies that should be searched for components that can match URIs.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.TooltipText">
            <summary>
            获得/设置 鼠标悬停提示文字信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.OnUpdateAsync">
            <summary>
            获得/设置 更新回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.Resource">
            <summary>
            获得/设置 AuthorizeRouteView 参数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.EnableErrorLogger">
            <summary>
            获得/设置 是否开启全局异常捕获 默认 null 读取配置文件 EnableErrorLogger 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ShowErrorLoggerToast">
            <summary>
            获得/设置 是否显示 Error 提示弹窗 默认 null 使用 <see cref="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ShowErrorLoggerToast"/> 设置值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.EnableErrorLoggerILogger">
            <summary>
            获得/设置 是否启用日志记录功能 默认 null 启用 使用 <see cref="P:BootstrapBlazor.Components.BootstrapBlazorOptions.EnableErrorLoggerILogger"/> 设置值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.ErrorLoggerToastTitle">
            <summary>
            获得/设置 错误日志 <see cref="T:BootstrapBlazor.Components.Toast"/> 弹窗标题 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.OnErrorHandleAsync">
            <summary>
            获得/设置 自定义错误处理回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Layout.AuthenticationStateTask">
            <summary>
            获得 登录授权信息
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Layout.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Layout.OnInitializedAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Layout.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Layout.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Layout.HandlerMain">
            <summary>
            HandlerMain 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Layout.SetCollapsed(System.Int32)">
            <summary>
            设置侧边栏收缩方法 客户端监控 window.onResize 事件回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Layout.UpdateAsync(System.String)">
            <summary>
            调用 Update 回调方法
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Layout.ClickMenu(BootstrapBlazor.Components.MenuItem)">
            <summary>
            点击菜单时回调此方法
            </summary>
            <returns></returns>
        </member>
        <member name="F:BootstrapBlazor.Components.Layout._errorContent">
            <summary>
            上次渲染错误内容
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Layout.HandlerException(System.Exception,Microsoft.AspNetCore.Components.RenderFragment{System.Exception})">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="ex"></param>
            <param name="errorContent"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Layout.Render(Microsoft.AspNetCore.Components.RenderFragment)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="renderFragment"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:BootstrapBlazor.Components.Layout.GetId">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Layout.DisposeAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="disposing"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.LayoutHeader.Microsoft#AspNetCore#Components#IComponent#SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.LayoutHeader.Render(Microsoft.AspNetCore.Components.RenderFragment)">
            <summary>
            render tab header method.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.LayoutSplitBar">
            <summary>
            LayoutSidebar 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutSplitBar.ContainerSelector">
            <summary>
            获得/设置 容器选择器 默认 null 未设置
            组件拖动后设置容器 style="--bb-layout-sidebar-width: 200px;" 用于宽度调整
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutSplitBar.Min">
            <summary>
            获得/设置 最小宽度 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LayoutSplitBar.Max">
            <summary>
            获得/设置 最大宽度 默认 null 未设置
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.LazyLoad">
            <summary>
            懒加载组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LazyLoad.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LazyLoad.OnLoadConditionCheckAsync">
            <summary>
            获得/设置 组件加载条件回调方法 默认 null 未设置 一旦返回 true 后此回调将不再调用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LazyLoad.OnFirstLoadCallbackAsync">
            <summary>
            获得/设置 首次显示时回调方法 可用于组件初始化数据 仅触发一次
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.LazyLoad.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.LazyLoad.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Light">
            <summary>
            指示灯组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Light.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Light.IsFlash">
            <summary>
            获得/设置 组件是否闪烁 默认为 false 不闪烁
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Light.IsFlat">
            <summary>
            获得/设置 是否为平面图形 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Light.Color">
            <summary>
            获得/设置 指示灯颜色 默认为 Success 绿色
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ListGroup`1">
            <summary>
            ListGroup 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListGroup`1.Items">
            <summary>
            获得/设置 数据源集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListGroup`1.HeaderTemplate">
            <summary>
            获得/设置 Header 模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListGroup`1.HeaderText">
            <summary>
            获得/设置 Header 文字 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListGroup`1.ItemTemplate">
            <summary>
            获得/设置 Header 模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListGroup`1.OnClickItem">
            <summary>
            获得/设置 点击 List 项目回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListGroup`1.GetItemDisplayText">
            <summary>
            获得/设置 获得条目显示文本内容回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ListGroup`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ListView`1">
            <summary>
            ListView 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.HeaderTemplate">
            <summary>
            获得/设置 CardHeard
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.GroupHeaderTextCallback">
            <summary>
            获得/设置 获得 <see cref="P:BootstrapBlazor.Components.CollapseItem.Text"/> 值 默认 null 使用分组 Key.ToString() 方法获取
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.GroupOrderCallback">
            <summary>
            获得/设置 组排序回调方法 默认 null 使用内置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.GroupItemOrderCallback">
            <summary>
            获得/设置 组内项目排序回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.BodyTemplate">
            <summary>
            获得/设置 BodyTemplate
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.FooterTemplate">
            <summary>
            获得/设置 FooterTemplate 默认 null 未设置 设置值后 <see cref="P:BootstrapBlazor.Components.ListView`1.IsPagination"/> 参数不起作用，请自行实现分页功能
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.Items">
            <summary>
            获得/设置 数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.Pageable">
            <summary>
            获得/设置 是否分页 默认为 false 不分页 设置 <see cref="P:BootstrapBlazor.Components.ListView`1.FooterTemplate"/> 时分页功能自动被禁用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.IsPagination">
            <summary>
            获得/设置 是否分页 默认为 false 不分页 设置 <see cref="P:BootstrapBlazor.Components.ListView`1.FooterTemplate"/> 时分页功能自动被禁用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.GroupName">
            <summary>
            获得/设置 分组 Lambda 表达式 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.Collapsible">
            <summary>
            获得/设置 是否可折叠 默认 false 需要开启分组设置 <see cref="P:BootstrapBlazor.Components.ListView`1.GroupName"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.IsAccordion">
            <summary>
            获得/设置 是否手风琴效果 默认 false 需要开启可收缩设置 <see cref="P:BootstrapBlazor.Components.ListView`1.Collapsible"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.OnCollapseChanged">
            <summary>
            获得/设置 CollapseItem 展开收缩时回调方法 默认 false 需要开启可收缩设置 <see cref="P:BootstrapBlazor.Components.ListView`1.Collapsible"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.CollapsedGroupCallback">
            <summary>
            获得/设置 首次渲染是否收缩回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.OnQueryAsync">
            <summary>
            异步查询回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.OnListViewItemClick">
            <summary>
            获得/设置 ListView组件元素点击时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.IsVertical">
            <summary>
            获得/设置 是否为竖向排列 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.PageItems">
            <summary>
            获得/设置 每页数据数量 默认 20
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.Height">
            <summary>
            获得/设置 组件高度 默认 null 未设置高度 如：50% 100px 10rem 10vh 等
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.EmptyTemplate">
            <summary>
            获得/设置 无数据时模板 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.EmptyText">
            <summary>
            获得/设置 无数据时显示文字 默认 null 未设置使用资源文件设置文字
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ListView`1._pageIndex">
            <summary>
            获得/设置 当前页码
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ListView`1._totalCount">
            <summary>
            获得/设置 数据总条目
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ListView`1.Rows">
            <summary>
            数据集合内部使用
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ListView`1.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ListView`1.OnPageLinkClick(System.Int32)">
            <summary>
            点击页码调用此方法
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ListView`1.QueryAsync(System.Int32,System.Boolean)">
            <summary>
            查询按钮调用此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ListView`1.QueryData(System.Boolean)">
            <summary>
            调用 OnQuery 回调方法获得数据源
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ListView`1.OnClick(`0)">
            <summary>
            点击元素事件
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Logout">
            <summary>
            ListView 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Logout.ImageUrl">
            <summary>
            获得/设置 组件当前用户头像
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Logout.DisplayName">
            <summary>
            获得/设置 组件当前用户显示名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Logout.PrefixDisplayNameText">
            <summary>
            获得/设置 组件当前用户显示名称前置文本 默认 欢迎
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Logout.UserName">
            <summary>
            获得/设置 组件当前用户登录账号
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Logout.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Logout.ShowUserName">
            <summary>
            获得/设置 是否显示用户名 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Logout.PrefixUserNameText">
            <summary>
            获得/设置 组件当前用户登录账号前置文本 默认 当前账号
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Logout.HeaderTemplate">
            <summary>
            获得/设置 组件 HeaderTemplate
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Logout.LinkTemplate">
            <summary>
            获得/设置 组件 LinkTemplate
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Logout.AvatarRadius">
            <summary>
            Gets or sets the avatar border radius. Default is null.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Logout.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.LogoutLink">
             <summary>
            
             </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LogoutLink.Icon">
            <summary>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LogoutLink.Text">
            <summary>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LogoutLink.Url">
            <summary>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.LogoutLink.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Marquee">
            <summary>
            Marquee 字幕滚动组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Marquee.Text">
            <summary>
            获得/设置 组件值 显示文本 默认 Empty
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Marquee.Color">
            <summary>
            获得/设置 组件值 文本颜色 默认 #000
            <para>支持16进制和颜色名称</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Marquee.BackgroundColor">
            <summary>
            获得/设置 组件值 背景颜色 默认 #fff
            <para>支持16进制和颜色名称</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Marquee.FontSize">
            <summary>
            获得/设置 组件值 文本大小 默认 72px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Marquee.Duration">
            <summary>
            获得/设置 组件值 动画时间 默认 14s
            <para>值越小滚动越快</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Marquee.Direction">
            <summary>
            获得/设置 组件值 滚动方向 默认 LeftToRight
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Mask">
            <summary>
            Mask 组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Mask.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Mask.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.MaskOption">
            <summary>
            MaskOption 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MaskOption.ZIndex">
            <summary>
            获得/设置 z-index 值 默认 未设置 使用 样式 1050
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MaskOption.Opacity">
            <summary>
            获得/设置 opacity 值 默认 未设置 使用 样式 0.5
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MaskOption.BackgroundColor">
            <summary>
            获得/设置 background-color 值 默认 未设置 使用 样式 #000
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MaskOption.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MaskOption.ContainerId">
            <summary>
            获得/设置 遮罩父容器 id 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MaskOption.Selector">
            <summary>
            获得/设置 遮罩父容器选择器 Selector 默认 null 未设置
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.MaskService">
            <summary>
            MaskService 遮罩服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MaskService.Show(BootstrapBlazor.Components.MaskOption,BootstrapBlazor.Components.Mask)">
            <summary>
            显示 Mask 方法
            </summary>
            <param name="option">遮罩配置信息实体类</param>
            <param name="mask"><see cref="T:BootstrapBlazor.Components.Mask"/> 组件实例</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MaskService.Close(BootstrapBlazor.Components.Mask,System.Boolean)">
            <summary>
            关闭 Mask 方法
            </summary>
            <param name="mask"><see cref="T:BootstrapBlazor.Components.Mask"/> 组件实例</param>
            <param name="all">是否关闭所有遮罩 默认 false 仅关闭当前或者指定遮罩</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Menu">
            <summary>
            Menu 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.ActiveMenu">
            <summary>
            用于提高性能存储当前 active 状态的菜单
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.Items">
            <summary>
            获得/设置 菜单数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.IsAccordion">
            <summary>
            获得/设置 是否为手风琴效果 默认为 false
            </summary>
            <remarks>启用此功能时 <see cref="P:BootstrapBlazor.Components.Menu.IsExpandAll" /> 参数不生效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.IsExpandAll">
            <summary>
            获得/设置 是否全部展开 默认为 false
            </summary>
            <remarks>手风琴效果 <see cref="P:BootstrapBlazor.Components.Menu.IsAccordion" /> 时此参数不生效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.IsCollapsed">
            <summary>
            获得/设置 侧栏是否收起 默认 false 未收起
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.IsVertical">
            <summary>
            获得/设置 侧栏垂直模式 默认 false
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.IsScrollIntoView">
            <summary>
            获得/设置 自动滚动到可视区域 默认 true <see cref="P:BootstrapBlazor.Components.Menu.IsVertical"/> 开启时生效
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.IsBottom">
            <summary>
            获得/设置 侧边栏垂直模式在底部 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.IndentSize">
            <summary>
            获得/设置 缩进大小 默认为 16 单位 px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.DisableNavigation">
            <summary>
            获得/设置 是否禁止导航 默认为 false 允许导航
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.OnClick">
            <summary>
            获得/设置 菜单项点击回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Menu.Navigator">
            <summary>
            获得/设置 NavigationManager 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Menu.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Menu.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Menu.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Menu.InvokeUpdateAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.MenuItem">
            <summary>
            MenuItem 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.Parent">
            <summary>
            获得 父级菜单
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.Items">
            <summary>
            获得/设置 组件数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.Url">
            <summary>
            获得/设置 导航菜单链接地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.Target">
            <summary>
            获得/设置 A 标签 target 参数 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.Match">
            <summary>
            获得/设置 匹配方式 默认 NavLinkMatch.Prefix
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuItem.Indent">
            <summary>
            获得 当前菜单所在层次 从 0 开始
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MenuItem.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MenuItem.#ctor(System.String,System.String,System.String)">
            <summary>
            带参数构造函数
            </summary>
            <param name="text">显示文本</param>
            <param name="url">菜单地址</param>
            <param name="icon">菜单图标</param>
        </member>
        <member name="M:BootstrapBlazor.Components.MenuItem.SetIndent">
            <summary>
            设置当前节点缩进方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MenuItem.SetCollapse(System.Boolean)">
            <summary>
            设置当前节点父节点展开
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MenuItem.GetAllSubItems">
            <summary>
            获得 所有子项集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.MenuLink">
            <summary>
            MenuLink 组件内部封装 NavLink 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuLink.Item">
            <summary>
            获得/设置 MenuItem 实例 不可为空
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MenuLink.ArrowIcon">
            <summary>
            获得/设置 ArrowIcon 图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MenuLink.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            SetParametersAsync 方法
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SideMenu">
            <summary>
            SideMenu 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SideMenu.Items">
            <summary>
            获得/设置 菜单数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SideMenu.DropdownIcon">
            <summary>
            获得/设置 组件数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SideMenu.ArrowIcon">
            <summary>
            获得/设置 菜单箭头图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SideMenu.OnClick">
            <summary>
            获得/设置 菜单项点击回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SideMenu.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:BootstrapBlazor.Components.SideMenu.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SubMenu">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SubMenu.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SubMenu.Item">
            <summary>
            获得/设置 组件数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SubMenu.DropdownIcon">
            <summary>
            获得/设置 组件数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SubMenu.ArrowIcon">
            <summary>
            获得/设置 菜单箭头图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SubMenu.OnClick">
            <summary>
            获得/设置 菜单项点击回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SubMenu.GetClassString(BootstrapBlazor.Components.MenuItem)">
            <summary>
            获得 样式字符串
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SubMenu.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            SetParametersAsync 方法
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TopMenu">
            <summary>
            顶栏菜单
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TopMenu.DropdownIcon">
            <summary>
            获得/设置 组件数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TopMenu.ArrowIcon">
            <summary>
            获得/设置 菜单箭头图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TopMenu.Items">
            <summary>
            获得/设置 菜单数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TopMenu.OnClick">
            <summary>
            获得/设置 菜单项点击回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TopMenu.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            SetParametersAsync 方法
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TopMenu.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Message">
            <summary>
            Message 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Message.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Message.StyleName">
            <summary>
            获得 Toast 组件样式设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Message.Placement">
            <summary>
            获得/设置 显示位置 默认为 Top
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Message.MessageService">
            <summary>
            ToastServices 服务实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Message.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Message.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Message.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Message.SetPlacement(BootstrapBlazor.Components.Placement)">
            <summary>
            设置 Toast 容器位置方法
            </summary>
            <param name="placement"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Message.Clear">
            <summary>
            清除 Message 方法 由 JSInvoke 触发
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Message.Dismiss(System.String)">
            <summary>
            OnDismiss 回调方法 由 JSInvoke 触发
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Message.DisposeAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.MessageOption">
            <summary>
            Message 组件配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.Color">
            <summary>
            获得/设置 颜色 默认 Primary
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.ShowDismiss">
            <summary>
            获得/设置 是否显示关闭按钮 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.Icon">
            <summary>
            获得/设置 显示图标 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.ShowBar">
            <summary>
            获得/设置 是否显示左侧 Bar 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.ShowBorder">
            <summary>
            获得/设置 是否显示边框 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.ShowShadow">
            <summary>
            获得/设置 是否显示阴影 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.OnDismiss">
            <summary>
            获得/设置 关闭当前 MessageItem 回调委托 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.ChildContent">
            <summary>
            获得/设置 内容模板 默认 null 设置此参数后 <see cref="P:BootstrapBlazor.Components.PopupOptionBase.Content"/> 将失效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MessageOption.ShowMode">
            <summary>
            获得/设置 消息显示模式，默认为 <see cref="F:BootstrapBlazor.Components.MessageShowMode.Multiple"/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.MessageService">
            <summary>
            MessageService 消息弹窗服务
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.MessageService.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{BootstrapBlazor.Components.BootstrapBlazorOptions})">
            <summary>
            MessageService 消息弹窗服务
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.MessageService.Show(BootstrapBlazor.Components.MessageOption,BootstrapBlazor.Components.Message)">
            <summary>
            Show 方法
            </summary>
            <param name="option"></param>
            <param name="message">指定弹窗组件 默认为 null 使用 <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRoot"/> 组件内置弹窗组件</param>
        </member>
        <member name="T:BootstrapBlazor.Components.Modal">
            <summary>
            Modal component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Modal.ClassString">
            <summary>
            Gets the style string
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Modal.Dialogs">
            <summary>
            Gets the collection of ModalDialog
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Modal.IsBackdrop">
            <summary>
            Gets or sets whether to close the popup in the background, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Modal.IsKeyboard">
            <summary>
            Gets or sets whether to enable keyboard support, default is true to respond to the ESC key
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Modal.IsFade">
            <summary>
            Gets or sets whether to enable fade in and out animation, default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Modal.ChildContent">
            <summary>
            Gets or sets the child component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Modal.FirstAfterRenderCallbackAsync">
            <summary>
            Gets or sets the callback method when the component has finished rendering
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Modal.OnShownAsync">
            <summary>
            Gets or sets the callback method when the popup is shown
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Modal.OnCloseAsync">
            <summary>
            Gets or sets the callback delegate when the popup is closed
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Modal.Backdrop">
            <summary>
            Gets the background close popup setting
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Modal.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Modal.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Modal.AddDialog(BootstrapBlazor.Components.ModalDialog)">
            <summary>
            Method to add a dialog
            </summary>
            <param name="dialog"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Modal.RemoveDialog(BootstrapBlazor.Components.ModalDialog)">
            <summary>
            Method to remove a dialog
            </summary>
            <param name="dialog"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Modal.ShownCallback">
            <summary>
            Callback method when the popup has been shown, called by JSInvoke
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Modal.CloseCallback">
            <summary>
            Callback method when the popup has been closed, called by JSInvoke
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Modal.Toggle">
            <summary>
            Method to toggle the popup state
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Modal.Show">
            <summary>
            Method to show the popup
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Modal.Close">
            <summary>
            Method to close the current popup
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Modal.SetHeaderText(System.String)">
            <summary>
            Method to set the header text
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Modal.RegisterShownCallback(Microsoft.AspNetCore.Components.IComponent,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Registers a callback method to be called after the popup is shown, equivalent to setting the OnShownAsync parameter
            </summary>
            <param name="component">Component</param>
            <param name="value">Callback method</param>
        </member>
        <member name="M:BootstrapBlazor.Components.Modal.UnRegisterShownCallback(Microsoft.AspNetCore.Components.IComponent)">
            <summary>
            Unregisters the callback method to be called after the popup is shown
            </summary>
            <param name="component">Component</param>
        </member>
        <member name="T:BootstrapBlazor.Components.ModalDialog">
            <summary>
            ModalDialog 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ClassName">
            <summary>
            获得 弹窗组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.IsShown">
            <summary>
            获得/设置 是否显示对话框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.Title">
            <summary>
            获得/设置 弹窗标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.Class">
            <summary>
            获得/设置 弹窗自定义样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ShowResize">
            <summary>
            获得/设置 是否可以 Resize 弹窗 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.Size">
            <summary>
            获得/设置 弹窗大小 默认为 <see cref="F:BootstrapBlazor.Components.Size.ExtraExtraLarge"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.FullScreenSize">
            <summary>
            获得/设置 弹窗大小 默认为 <see cref="F:BootstrapBlazor.Components.FullScreenSize.None"/>
            </summary>
            <remarks>为保证功能正常，设置值后 <see cref="P:BootstrapBlazor.Components.ModalDialog.ShowMaximizeButton"/> <seealso cref="P:BootstrapBlazor.Components.ModalDialog.ShowResize"/> <seealso cref="P:BootstrapBlazor.Components.ModalDialog.IsDraggable"/> 均不可用</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.IsCentered">
            <summary>
            获得/设置 是否垂直居中 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.IsScrolling">
            <summary>
            获得/设置 是否弹窗正文超长时滚动 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.IsHidePreviousDialog">
            <summary>
            Gets or sets whether to hide the previous dialog when opening a new one, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.IsDraggable">
            <summary>
            获得/设置 是否可以拖拽弹窗 默认 false 不可以拖动
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ShowMaximizeButton">
            <summary>
            获得/设置 是否显示最大化按钮 默认为 false
            </summary>
            <remarks>为保证功能正常，设置值为 true 后 <seealso cref="P:BootstrapBlazor.Components.ModalDialog.ShowResize"/> <seealso cref="P:BootstrapBlazor.Components.ModalDialog.IsDraggable"/> 均不可用</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ShowCloseButton">
            <summary>
            获得/设置 是否显示关闭按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ShowSaveButton">
            <summary>
            获得/设置 是否显示保存按钮 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ShowPrintButton">
            <summary>
            获得/设置 是否显示打印按钮 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ShowPrintButtonInHeader">
            <summary>
            获得/设置 Header 中是否显示打印按钮 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.PrintButtonText">
            <summary>
            获得/设置 Header 中打印按钮显示文字 默认为资源文件中 打印
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.PrintButtonIcon">
            <summary>
            获得/设置 打印按钮图标 未设置 取当前图标主题下打印图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.PrintButtonColor">
            <summary>
            获得/设置 打印按钮颜色 默认 Color.Primary
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ShowExportPdfButton">
            <summary>
            获得/设置 是否显示导出 Pdf 按钮 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ShowExportPdfButtonInHeader">
            <summary>
            获得/设置 Header 中是否显示导出 Pdf 按钮 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ExportPdfButtonOptions">
            <summary>
            获得/设置 导出 Pdf 按钮配置项
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ShowHeaderCloseButton">
            <summary>
            获得/设置 是否显示 Header 关闭按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ShowHeader">
            <summary>
            获得/设置 是否显示 Header 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ShowFooter">
            <summary>
            获得/设置 是否显示 Footer 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.BodyContext">
            <summary>
            获得/设置 弹窗内容相关数据 多用于传值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.HeaderToolbarTemplate">
            <summary>
            获得/设置 Header 中按钮模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.BodyTemplate">
            <summary>
            获得/设置 ModalBody 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.FooterTemplate">
            <summary>
            获得/设置 ModalFooter 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.FooterContentTemplate">
            <summary>
            Gets or sets the footer content template. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.HeaderTemplate">
            <summary>
            获得/设置 ModalHeader 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.OnSaveAsync">
            <summary>
            获得/设置 保存按钮回调委托 返回 true 并且设置 <see cref="P:BootstrapBlazor.Components.ModalDialog.IsAutoCloseAfterSave"/> true 时自动关闭弹窗
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.IsAutoCloseAfterSave">
            <summary>
            获得/设置 保存成功后是否自动关闭弹窗 默认 true 自动关闭
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.CloseButtonText">
            <summary>
            获得/设置 关闭按钮显示文字 资源文件设置为 关闭
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.CloseButtonIcon">
            <summary>
            获得/设置 关闭按钮显示图标 未设置时 使用 fa-solid fa-fw fa-xmark
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.SaveButtonText">
            <summary>
            获得/设置 保存按钮显示文字 资源文件设置为 保存
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.SaveButtonIcon">
            <summary>
            获得/设置 保存按钮显示图标 未设置时 使用主题图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.MaximizeWindowIcon">
            <summary>
            获得/设置 最大化按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.RestoreWindowIcon">
            <summary>
            获得/设置 恢复按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.SaveIcon">
            <summary>
            获得/设置 保存按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.ResultTask">
            <summary>
            获得/设置 模态弹窗任务 <see cref="T:System.Threading.Tasks.TaskCompletionSource`1"/> 实例 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.GetResultDialog">
            <summary>
            获得/设置 获得模态弹窗方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalDialog.Modal">
            <summary>
            获得/设置 弹窗容器实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalDialog.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalDialog.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalDialog.OnAfterRender(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalDialog.SetHeaderText(System.String)">
            <summary>
            设置 Header 文字方法
            </summary>
            <param name="text"></param>
        </member>
        <member name="F:BootstrapBlazor.Components.ModalDialog._errorContent">
            <summary>
            上次渲染错误内容
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalDialog.HandlerException(System.Exception,Microsoft.AspNetCore.Components.RenderFragment{System.Exception})">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="ex"></param>
            <param name="errorContent"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ModalDialog.DisposeAsync(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Nav">
            <summary>
            NavMenu 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Nav.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Nav.Items">
            <summary>
            获得/设置 组件数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Nav.Alignment">
            <summary>
            获得/设置 组件对齐方式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Nav.IsVertical">
            <summary>
            获得/设置 是否垂直分布
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Nav.IsPills">
            <summary>
            获得/设置 是否为胶囊
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Nav.IsFill">
            <summary>
            获得/设置 是否填充
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Nav.IsJustified">
            <summary>
            获得/设置 是否等宽
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Nav.ChildContent">
            <summary>
            获得/设置 组件内容
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Nav.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.NetworkMonitorIndicator">
            <summary>
            Represents a network monitor indicator with customizable tooltip settings.
            </summary>
            <remarks>This component allows you to configure the text, placement, and trigger behavior of a tooltip that
            appears when interacting with the network monitor indicator. The tooltip can be customized to provide additional
            information to users.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.NetworkMonitorIndicator.Title">
            <summary>
            获得/设置 Popover 弹窗标题 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NetworkMonitorIndicator.PopoverPlacement">
            <summary>
            获得/设置 Popover 显示位置 默认为 Top
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NetworkMonitorIndicator.Trigger">
            <summary>
            获得/设置 Popover 触发方式 默认为 hover focus
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NetworkMonitorIndicator.OnInitializedAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NetworkMonitorIndicator.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NetworkMonitorIndicator.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:BootstrapBlazor.Components.NetworkMonitorState">
            <summary>
            网络状态信息类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NetworkMonitorState.NetworkType">
            <summary>
            Gets or sets the current network type
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NetworkMonitorState.Downlink">
            <summary>
            Gets or sets the downlink speed in megabits per second (Mbps).
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NetworkMonitorState.RTT">
            <summary>
            Gets or sets the round-trip time (RTT) in milliseconds.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.NotificationItem">
            <summary>
            通知信息类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NotificationItem.Id">
            <summary>
            获得/设置 消息键值 未赋值时系统自动生成
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NotificationItem.Title">
            <summary>
            获得/设置 标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NotificationItem.Message">
            <summary>
            获得/设置 信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NotificationItem.Icon">
            <summary>
            获得/设置 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NotificationItem.Silent">
            <summary>
            获得/设置 静默
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NotificationItem.Sound">
            <summary>
            获得/设置 通知触发时要播放的音频文件的 URL
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NotificationItem.OnClick">
            <summary>
            获得/设置 通知点击后的回调
            </summary>
            <remarks>点击通知后自动关闭</remarks>
        </member>
        <member name="T:BootstrapBlazor.Components.GotoNavigator">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GotoNavigator.Index">
            <summary>
            获得/设置 跳转页码 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GotoNavigator.GotoText">
            <summary>
            获得/设置 跳转文本 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.GotoNavigator.OnNavigation">
            <summary>
            获得/设置 导航回调方法 默认 null
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Pagination">
            <summary>
            Pagination 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.InternalPageCount">
            <summary>
            获得/设置 页码总数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.ClassString">
            <summary>
            获得 组件 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.PaginationClassString">
            <summary>
            获得 组件 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.StartPageIndex">
            <summary>
            获得/设置 开始页码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.EndPageIndex">
            <summary>
            获得/设置 结束页码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.Alignment">
            <summary>
            获得/设置 对齐方式 默认 Alignment.Right
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.PrevPageIcon">
            <summary>
            获得/设置 上一页图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.PrevEllipsisPageIcon">
            <summary>
            获得/设置 上一页图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.NextPageIcon">
            <summary>
            获得/设置 下一页图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.NextEllipsisPageIcon">
            <summary>
            获得/设置 上一页图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.PageIndex">
            <summary>
            获得/设置 当前页码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.PageCount">
            <summary>
            获得/设置 页码总数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.MaxPageLinkCount">
            <summary>
            获得/设置 Page up/down 页码数量 默认 5
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.OnPageLinkClick">
            <summary>
            点击页码时回调方法 参数是当前页码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.PageInfoText">
            <summary>
            获得/设置 显示分页信息文字 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.GotoTemplate">
            <summary>
            获得/设置 Goto 导航模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.ShowGotoNavigator">
            <summary>
            获得/设置 是否显示 Goto 跳转导航器 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.GotoNavigatorLabelText">
            <summary>
            获得/设置 Goto 导航标签显示文字 默认 导航到/Goto
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.ShowPageInfo">
            <summary>
            获得/设置 是否显示 分页信息 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Pagination.PageInfoTemplate">
            <summary>
            获得/设置 分页信息模板 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Pagination.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Pagination.MovePrev(System.Int32)">
            <summary>
            上一页方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Pagination.MoveNext(System.Int32)">
            <summary>
            下一页方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Pagination.OnPageItemClick(System.Int32)">
            <summary>
            点击页码时回调方法
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.PaginationItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationItem.OnClick">
            <summary>
            点击页码时回调方法 参数是当前页码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationItem.Index">
            <summary>
            获得/设置 当前页码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationItem.IsActive">
            <summary>
            获得/设置 是否激活 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationItem.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PaginationItem.ChildContent">
            <summary>
            子组件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Popover">
            <summary>
            Popover 弹出窗组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Popover.Content">
            <summary>
            获得/设置 显示文字，复杂内容可通过 <see cref="P:BootstrapBlazor.Components.Popover.Template"/> 自定义
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Popover.ShowShadow">
            <summary>
            获得/设置 是否显示阴影 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Popover.Template">
            <summary>
            获得/设置 内容模板 默认 null 设置值后 <see cref="P:BootstrapBlazor.Components.Popover.Content"/> 参数失效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Popover.CustomClassString">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Popover.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Popover.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.PopupOptionBase">
            <summary>
            弹窗类配置项基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopupOptionBase.Content">
            <summary>
            获得/设置 Toast Body 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopupOptionBase.IsAutoHide">
            <summary>
            获得/设置 是否自动隐藏 默认 true 自动关闭 <see cref="T:BootstrapBlazor.Components.PopupOptionBase"/> 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopupOptionBase.Delay">
            <summary>
            获得/设置 自动隐藏时间间隔 单位毫秒 默认 4000 可通过全局配置进行统一更改
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopupOptionBase.ForceDelay">
            <summary>
            获得/设置 是否强制使用本实例的延时时间，防止值被全局配置覆盖 默认 false
            <para>组件使用 <see cref="P:BootstrapBlazor.Components.PopupOptionBase.Delay"/> 值进行自动关闭，可通过 <see cref="T:BootstrapBlazor.Components.BootstrapBlazorOptions"/> 类相关参数进行全局设置延时关闭时间，可通过本参数强制使用 <see cref="P:BootstrapBlazor.Components.PopupOptionBase.Delay"/> 值</para>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PrintButton">
            <summary>
            PrintButton 打印按钮
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PrintButton.PreviewUrl">
            <summary>
            获得/设置 预览模板地址 默认为空
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PrintButton.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PrintButton.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Progress">
            <summary>
            Progress 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Progress.Height">
            <summary>
            获得/设置 控件高度 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Progress.Color">
            <summary>
            获得/设置 颜色 默认为 Color.Primary
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Progress.IsShowValue">
            <summary>
            获得/设置 是否显示进度条值 默认 false
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Progress.IsStriped">
            <summary>
            获得/设置 是否显示为条纹 默认 false
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Progress.IsAnimated">
            <summary>
            获得/设置 是否动画 默认 false
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Progress.Value">
            <summary>
            获得/设置 组件进度值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Progress.Round">
            <summary>
            获得/设置 进度值修约小数位数, 默认 0 (即保留为整数)
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Progress.MidpointRounding">
            <summary>
            获得/设置 保留小数点模式 默认为 AwayFromZero
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Progress.Text">
            <summary>
            获得/设置 进度标签文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Progress.ClassName">
            <summary>
            获得 样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Progress.StyleName">
            <summary>
            获得 Style 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Progress.ProgressStyle">
            <summary>
            获得 ProgressStyle 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Progress.ValueLabelString">
            <summary>
            获得 当前值百分比标签文字
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Progress.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.QueryBuilder`1">
            <summary>
            QueryBuilder 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryBuilder`1.Value">
            <summary>
            获得/设置 过滤模型 <see cref="T:BootstrapBlazor.Components.FilterKeyValueAction"/> 实例值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryBuilder`1.ValueChanged">
            <summary>
            获得/设置 Filter 回调方法 支持双向绑定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryBuilder`1.Logic">
            <summary>
            获得/设置 逻辑运算符
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryBuilder`1.ChildContent">
            <summary>
            获得/设置 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryBuilder`1.ShowHeader">
            <summary>
            获得/设置 是否显示 Header 区域 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryBuilder`1.HeaderTemplate">
            <summary>
            获得/设置 Header 模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryBuilder`1.PlusIcon">
            <summary>
            获得/设置 增加过滤条件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryBuilder`1.RemoveIcon">
            <summary>
            获得/设置 移除过滤条件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryBuilder`1.MinusIcon">
            <summary>
            获得/设置 减少过滤条件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryBuilder`1.GroupText">
            <summary>
            获得/设置 组合过滤条件文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryBuilder`1.ItemText">
            <summary>
            获得/设置 过滤条件文本
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryBuilder`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryBuilder`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryBuilder`1.OnAfterRender(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.QueryColumn`1">
            <summary>
            QueryColumn 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryColumn`1.Field">
            <summary>
            获得/设置 条件字段名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryColumn`1.FieldExpression">
            <summary>
            获得/设置 FieldExpression 表达式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryColumn`1.Operator">
            <summary>
            获得/设置 条件操作符号
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryColumn`1.Value">
            <summary>
            获得/设置 条件值
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryColumn`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryColumn`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.QueryGroup">
            <summary>
            QueryGroup 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryGroup.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryGroup.Logic">
            <summary>
            获得/设置 逻辑运算符
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryGroup.Filters">
            <summary>
            过滤条件集合
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.QueryGroup._filter">
            <summary>
            过滤条件集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryGroup.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryGroup.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryGroup.Dispose(System.Boolean)">
            <summary>
            释放资源
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryGroup.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Radio`1">
            <summary>
            Radio 单选框组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Radio`1.OnClick">
            <summary>
            获得/设置 点击回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Radio`1.GroupName">
            <summary>
            获得/设置 Radio 组名称一般来讲需要设置 默认为 null 未设置
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.RadioList`1">
            <summary>
            单选框组合组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioList`1.IsAutoAddNullItem">
            <summary>
            获得/设置 值为可为空枚举类型时是否自动添加空值 默认 false 自定义空值显示文本请参考 <see cref="P:BootstrapBlazor.Components.RadioList`1.NullItemText"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioList`1.NullItemText">
            <summary>
            获得/设置 空值项显示文字 默认为 "" 是否自动添加空值请参考 <see cref="P:BootstrapBlazor.Components.RadioList`1.IsAutoAddNullItem"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioList`1.AutoSelectFirstWhenValueIsNull">
            <summary>
            获得/设置 未设置选中项时是否自动选择第一项 默认 true
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RadioList`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RadioList`1.FormatValueAsString(`0)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.RadioList`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="value"></param>
            <param name="result"></param>
            <param name="validationErrorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.RadioList`1.ProcessGenericItems(System.Type,System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="typeValue"></param>
            <param name="list"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.RadioList`1.EnsureParameterValid">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RadioList`1.OnClick(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            点击选择框方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.RadioListGeneric`1">
            <summary>
            单选框组合组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioListGeneric`1.IsAutoAddNullItem">
            <summary>
            获得/设置 值为可为空枚举类型时是否自动添加空值 默认 false 自定义空值显示文本请参考 <see cref="P:BootstrapBlazor.Components.RadioListGeneric`1.NullItemText"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioListGeneric`1.NullItemText">
            <summary>
            获得/设置 空值项显示文字 默认为 "" 是否自动添加空值请参考 <see cref="P:BootstrapBlazor.Components.RadioListGeneric`1.IsAutoAddNullItem"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioListGeneric`1.ItemTemplate">
            <summary>
            获得/设置 项模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioListGeneric`1.IsButton">
            <summary>
            获得/设置 是否为按钮样式 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioListGeneric`1.ShowBorder">
            <summary>
            获得/设置 是否显示边框 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioListGeneric`1.IsVertical">
            <summary>
            获得/设置 是否为竖向排列 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioListGeneric`1.Color">
            <summary>
            获得/设置 按钮颜色 默认为 None 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioListGeneric`1.Items">
            <summary>
            获得/设置 数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioListGeneric`1.OnSelectedChanged">
            <summary>
            获得/设置 SelectedItemChanged 方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioListGeneric`1.CustomKeyAttribute">
            <summary>
            获得/设置 数据主键标识标签 默认为 <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute"/><code><br /></code>用于判断数据主键标签，如果模型未设置主键时可使用 <see cref="P:BootstrapBlazor.Components.RadioListGeneric`1.ModelEqualityComparer"/> 参数自定义判断 <code><br /></code>数据模型支持联合主键
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RadioListGeneric`1.ModelEqualityComparer">
            <summary>
            获得/设置 比较数据是否相同回调方法 默认为 null
            <para>提供此回调方法时忽略 <see cref="P:BootstrapBlazor.Components.RadioListGeneric`1.CustomKeyAttribute"/> 属性</para>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RadioListGeneric`1.GetDisabledState(BootstrapBlazor.Components.SelectedItem{`0})">
            <summary>
            获得 当前选项是否被禁用
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.RadioListGeneric`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RadioListGeneric`1.OnClick(BootstrapBlazor.Components.SelectedItem{`0})">
            <summary>
            点击选择框方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RadioListGeneric`1.Equals(`0,`0)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Rate">
            <summary>
            Rate 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.ClassString">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Rate.IsPartialStar(System.Int32)">
            <summary>
            判断是否显示部分星级
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.StarIcon">
            <summary>
            获得/设置 选中图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.UnStarIcon">
            <summary>
            获得/设置 未选中图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.Value">
            <summary>
            获得/设置 组件值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.IsDisable">
            <summary>
            获得/设置 是否禁用 默认为 false
            </summary>
            <remarks>禁用模式下图标颜色为灰色，不可点击</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.IsReadonly">
            <summary>
            获得/设置 是否只读 默认为 false
            </summary>
            <remarks>只读情况下图标为彩色，仅不可点击</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.IsWrap">
            <summary>
            获得/设置 是否禁止换行 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.ShowValue">
            <summary>
            获得/设置 是否显示 Value 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.ItemTemplate">
            <summary>
            获得/设置 子项模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.ValueChanged">
            <summary>
            获得/设置 组件值变化时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.OnValueChanged">
            <summary>
            获得/设置 组件值变化时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Rate.Max">
            <summary>
            获得/设置 最大值 默认 5
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Rate.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IReconnector">
            <summary>
            IReconnector 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IReconnector.ReconnectingTemplate">
            <summary>
            获得/设置 正在尝试重试连接对话框的模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IReconnector.ReconnectFailedTemplate">
            <summary>
            获得/设置 连接失败对话框的模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IReconnector.ReconnectRejectedTemplate">
            <summary>
            获得/设置 连接被拒绝对话框的模板
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IReconnectorProvider">
            <summary>
            IContentSubscriber 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IReconnectorProvider.Register(System.Action{Microsoft.AspNetCore.Components.RenderFragment,Microsoft.AspNetCore.Components.RenderFragment,Microsoft.AspNetCore.Components.RenderFragment})">
            <summary>
            注册回调方法
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.IReconnectorProvider.NotifyContentChanged(BootstrapBlazor.Components.IReconnector)">
            <summary>
            内容变化通知方法
            </summary>
            <param name="content"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Reconnector">
            <summary>
            Reconnector 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Reconnector.ReconnectingTemplate">
            <summary>
            获得/设置 正在尝试重试连接对话框的模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Reconnector.ReconnectFailedTemplate">
            <summary>
            获得/设置 连接失败对话框的模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Reconnector.ReconnectRejectedTemplate">
            <summary>
            获得/设置 连接被拒绝对话框的模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Reconnector.OnAfterRender(System.Boolean)">
            <summary>
            OnAfterRender 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ReconnectorContent">
            <summary>
            ReconnectorContent 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ReconnectorContent.ReconnectingTemplate">
            <summary>
            获得/设置 ReconnectingTemplate 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ReconnectorContent.ReconnectFailedTemplate">
            <summary>
            获得/设置 ReconnectFailedTemplate 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ReconnectorContent.ReconnectRejectedTemplate">
            <summary>
            获得/设置 ReconnectRejectedTemplate 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ReconnectorContent.AutoReconnect">
            <summary>
            获得/设置 是否自动尝试重连 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ReconnectorContent.ReconnectInterval">
            <summary>
            获得/设置 自动重连间隔 默认 5000 毫秒 最小值为 1000 毫秒
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ReconnectorContent.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            SetParametersAsync 方法
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ReconnectorContent.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ReconnectorContent.ContentChanged(Microsoft.AspNetCore.Components.RenderFragment,Microsoft.AspNetCore.Components.RenderFragment,Microsoft.AspNetCore.Components.RenderFragment)">
            <summary>
            ContentChanged 方法
            </summary>
            <param name="reconnectingTemplate"></param>
            <param name="reconnectFailedTemplate"></param>
            <param name="reconnectRejectedTemplate"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Redirect">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Redirect.Url">
            <summary>
            获得/设置 登录地址 默认 Account/Login
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Redirect.ForceLoad">
            <summary>
            获得/设置 是否强制导航 默认 true
            </summary>
            <remarks>设置 false 时适用 SPA 程序不会强制页面重新加载</remarks>
        </member>
        <member name="M:BootstrapBlazor.Components.Redirect.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Repeater`1">
            <summary>
            Repeat 组件
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.Repeater`1.Items">
            <summary>
            获得/设置 数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Repeater`1.ShowLoading">
            <summary>
            获得/设置 是否显示正在加载信息 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Repeater`1.LoadingTemplate">
            <summary>
            获得/设置 正在加载模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Repeater`1.ShowEmpty">
            <summary>
            获得/设置 是否显示无数据信息 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Repeater`1.EmptyText">
            <summary>
            获得/设置 无数据时提示信息 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Repeater`1.EmptyTemplate">
            <summary>
            获得/设置 正在加载模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Repeater`1.ContainerTemplate">
            <summary>
            获得/设置 容器模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Repeater`1.ItemTemplate">
            <summary>
            获得/设置 模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Repeater`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Responsive">
            <summary>
            响应监听 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Responsive.OnBreakPointChanged">
            <summary>
            获得/设置 浏览器断点阈值改变时触发 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Responsive.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Responsive.OnResize(BootstrapBlazor.Components.BreakPoint)">
            <summary>
            JSInvoke 回调方法
            </summary>
            <param name="breakPoint"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.RibbonTab">
            <summary>
            RibbonTab 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.ShowFloatButton">
            <summary>
            获得/设置 是否显示悬浮小箭头 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.OnFloatChanged">
            <summary>
            获得/设置 组件是否悬浮状态改变时回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.RibbonArrowUpIcon">
            <summary>
            获得/设置 选项卡向上箭头图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.RibbonArrowDownIcon">
            <summary>
            获得/设置 选项卡向下箭头图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.RibbonArrowPinIcon">
            <summary>
            获得/设置 选项卡可固定图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.IsSupportAnchor">
            <summary>
            获得/设置 是否开启 Url 锚点
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.EncodeAnchorCallback">
            <summary>
            编码锚点回调方法 第一参数是当前地址 Url 第二个参数是当前选项 Text 属性 返回值为地址全路径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.DecodeAnchorCallback">
            <summary>
            解码锚点回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.Items">
            <summary>
            获得/设置 数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.OnItemClickAsync">
            <summary>
            获得/设置 点击命令按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.OnMenuClickAsync">
            <summary>
            获得/设置 点击标签 Menu 回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.RightButtonsTemplate">
            <summary>
            获得/设置 右侧按钮模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.ChildContent">
            <summary>
            获得/设置 内容模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTab.IsBorder">
            <summary>
            获得/设置 是否为带边框卡片样式 默认 true
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RibbonTab.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.RibbonTab.SetExpand">
            <summary>
            SetExpand 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RibbonTab.Render">
            <summary>
            重新渲染组件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.RibbonTabHeader">
            <summary>
            Header 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabHeader.Items">
            <summary>
            获得/设置 数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabHeader.ShowFloatButton">
            <summary>
            获得/设置 是否显示悬浮小箭头 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabHeader.IsSupportAnchor">
            <summary>
            获得/设置 是否开启 Url 锚点
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabHeader.OnItemClickAsync">
            <summary>
            获得/设置 点击命令按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabHeader.OnMenuClickAsync">
            <summary>
            获得/设置 点击标签 Menu 回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabHeader.EncodeAnchorCallback">
            <summary>
            编码锚点回调方法 第一参数是当前地址 Url 第二个参数是当前选项 Text 属性 返回值为地址全路径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabHeader.DecodeAnchorCallback">
            <summary>
            解码锚点回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabHeader.OnFloatChanged">
            <summary>
            获得/设置 组件是否悬浮状态改变时回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabHeader.RibbonArrowUpIcon">
            <summary>
            获得/设置 选项卡向上箭头图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabHeader.RibbonArrowDownIcon">
            <summary>
            获得/设置 选项卡向下箭头图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabHeader.RibbonArrowPinIcon">
            <summary>
            获得/设置 选项卡可固定图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabHeader.RightButtonsTemplate">
            <summary>
            获得/设置 右侧按钮模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RibbonTabHeader.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RibbonTabHeader.SetExpand">
            <summary>
            SetExpand 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RibbonTabHeader.Render">
            <summary>
            重新渲染组件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.RibbonTabItem">
            <summary>
            RibbonTabItem 实体类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.Id">
            <summary>
            获得/设置 当前节点 Id 默认为 null
            </summary>
            <remarks>一般配合数据库使用</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.ParentId">
            <summary>
            获得/设置 父级节点 Id 默认为 null
            </summary>
            <remarks>一般配合数据库使用</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.Parent">
            <summary>
            获得 父级菜单 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.Url">
            <summary>
            获得/设置 导航菜单链接地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.Target">
            <summary>
            获得/设置 A 标签 target 参数 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.ImageUrl">
            <summary>
            获得/设置 图片路径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.GroupName">
            <summary>
            获得/设置 分组名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.Command">
            <summary>
            获得/设置 按钮标识
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.Text">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.Icon">
            <summary>
            获得/设置 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.CssClass">
            <summary>
            获得/设置 自定义样式名
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.IsCollapsed">
            <summary>
            获得/设置 是否收缩 默认 true 收缩 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.IsDisabled">
            <summary>
            获得/设置 是否被禁用 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.IsDefault">
            <summary>
            获得/设置 是否为默认按钮 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.IsActive">
            <summary>
            获得/设置 是否选中当前节点 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.Items">
            <summary>
            获得/设置 组件数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.Template">
            <summary>
            获得/设置 子组件模板 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RibbonTabItem.Component">
            <summary>
            获得/设置 动态组件实例
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Row">
            <summary>
            Row 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Row.ItemsPerRow">
            <summary>
            获得/设置 设置一行显示多少个子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Row.RowType">
            <summary>
            获得/设置 设置行格式 默认 Row 布局
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Row.ColSpan">
            <summary>
            获得/设置 子 Row 跨父 Row 列数 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Row.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Scroll">
            <summary>
            Scroll 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Scroll.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Scroll.Height">
            <summary>
            获得/设置 组件高度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Scroll.Width">
            <summary>
            获得/设置 组件宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Scroll.ScrollWidth">
            <summary>
            获得/设置 滚动条宽度 默认 null 未设置使用 <see cref="T:BootstrapBlazor.Components.ScrollOptions"/> 配置类中的 <see cref="P:BootstrapBlazor.Components.ScrollOptions.ScrollWidth"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Scroll.ScrollHoverWidth">
            <summary>
            获得/设置 滚动条 hover 状态下宽度 默认 null 未设置使用 <see cref="T:BootstrapBlazor.Components.ScrollOptions"/> 配置类中的 <see cref="P:BootstrapBlazor.Components.ScrollOptions.ScrollHoverWidth"/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Scroll.ScrollToBottom">
            <summary>
            滚动到底部
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Search`1">
            <summary>
            Search component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.IconTemplate">
            <summary>
            Gets or sets the icon template. Default is null if not set.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.IsClearable">
            <summary>
            Gets or sets whether to show the clear button. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.ClearIcon">
            <summary>
            Gets or sets the clear icon. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.ShowClearButton">
            <summary>
            Gets or sets whether to show the clear button. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.ClearButtonIcon">
            <summary>
            Gets or sets the icon of clear button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.ClearButtonText">
            <summary>
            Gets or sets the text of clear button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.ClearButtonColor">
            <summary>
            Gets or sets the color of clear button. Default is <see cref="F:BootstrapBlazor.Components.Color.Primary"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.ShowSearchButton">
            <summary>
            Gets or sets whether to show the search button. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.SearchButtonColor">
            <summary>
            Gets or sets the search button color. Default is <see cref="F:BootstrapBlazor.Components.Color.Primary"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.SearchButtonIcon">
            <summary>
            Gets or sets the search button icon. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.SearchButtonLoadingIcon">
            <summary>
            Gets or sets the loading icon for the search button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.SearchButtonText">
            <summary>
            Gets or sets the search button text. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.ButtonTemplate">
            <summary>
            Gets or sets the button template. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.PrefixButtonTemplate">
            <summary>
            Gets or sets the prefix button template. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.ShowPrefixIcon">
            <summary>
            Gets or sets whether to show the prefix icon. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.PrefixIcon">
            <summary>
            Gets or sets the prefix icon. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.PrefixIconTemplate">
            <summary>
            Gets or sets the prefix icon template. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.IsAutoClearAfterSearch">
            <summary>
            Gets or sets whether to automatically clear the search box after searching. Deprecated.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.IsTriggerSearchByInput">
            <summary>
            Gets or sets whether the search is triggered by input. Default is true. If false, the search button must be clicked to trigger.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.OnSearch">
            <summary>
            Gets or sets the callback delegate when the search button is clicked.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.OnGetDisplayText">
            <summary>
            Gets or sets the callback method to get display text. Default is null, using ToString() method.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Search`1.OnClear">
            <summary>
            Gets or sets the event callback when the clear button is clicked. Default is null.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Search`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Search`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Search`1.TriggerFilter(System.String)">
            <summary>
            TriggerFilter method called by Javascript.
            </summary>
            <param name="val"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.SearchContext`1">
            <summary>
            搜索组件上下文类 
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SearchContext`1.#ctor(BootstrapBlazor.Components.Search{`0},System.Func{System.Threading.Tasks.Task},System.Func{System.Threading.Tasks.Task})">
            <summary>
            搜索组件上下文类 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchContext`1.Search">
            <summary>
            获得/设置 搜索组件实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchContext`1.OnClearAsync">
            <summary>
            获得/设置 清空按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SearchContext`1.OnSearchAsync">
            <summary>
            获得/设置 搜索按钮回调方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Segmented`1">
            <summary>
            Segmented 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Segmented`1.Items">
            <summary>
            获得/设置 选项集合 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Segmented`1.Value">
            <summary>
            获得/设置 选中值 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Segmented`1.ValueChanged">
            <summary>
             获得/设置 选中值回调委托 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Segmented`1.OnValueChanged">
            <summary>
            获得/设置 选中值改变后回调委托方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Segmented`1.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Segmented`1.IsBlock">
            <summary>
            获得/设置 是否充满父元素 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Segmented`1.ShowTooltip">
            <summary>
            获得/设置 是否自动显示 Tooltip 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Segmented`1.ChildContent">
            <summary>
            获得/设置 组件内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Segmented`1.Size">
            <summary>
            获得/设置 组件大小 默认值 <see cref="F:BootstrapBlazor.Components.Size.None"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Segmented`1.ItemTemplate">
            <summary>
            获得/设置 候选项模板 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Segmented`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Segmented`1.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Segmented`1.TriggerClick(System.Int32)">
            <summary>
            点击 SegmentItem 节点 JavaScript 回调触发
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SegmentedItem`1">
            <summary>
            SegmentedItem 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SegmentedItem`1.ChildContent">
            <summary>
            组件内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SegmentedItem`1.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SegmentedItem`1.IsActive">
            <summary>
            获得/设置 是否选中 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SegmentedItem`1.Icon">
            <summary>
            获得/设置 图标 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SegmentedItem`1.Text">
            <summary>
            获得/设置 文字 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SegmentedItem`1.Value">
            <summary>
            获得/设置 组件值 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SegmentedItem`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SegmentedItem`1.Dispose(System.Boolean)">
            <summary>
            资源销毁方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.SegmentedItem`1.Dispose">
            <summary>
            资源销毁方法
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:BootstrapBlazor.Components.SegmentedOption`1">
            <summary>
            SegmentedOption 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SegmentedOption`1.Text">
            <summary>
            获得/设置 显示名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SegmentedOption`1.Value">
            <summary>
            获得/设置 选项值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SegmentedOption`1.Active">
            <summary>
            获得/设置 是否选中
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SegmentedOption`1.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SegmentedOption`1.Icon">
            <summary>
            获得/设置 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SegmentedOption`1.ChildContent">
            <summary>
            组件内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalSelectObjectContext`1.Component">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.InternalSelectObjectContext`1.CloseAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:BootstrapBlazor.Components.InternalSelectObjectContext`1.SetValue(`0)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ISelect">
            <summary>
            ISelect 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ISelect.Add(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            增加 SelectedItem 项方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ISelectObjectContext`1">
            <summary>
            SelectObject 上下文
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ISelectObjectContext`1.Component">
            <summary>
            获得/设置 SelectObject 组件实例对象引用
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ISelectObjectContext`1.SetValue(`0)">
            <summary>
            设置组件当前值方法
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ISelectObjectContext`1.CloseAsync">
            <summary>
            关闭当前弹窗方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.MultiSelect`1">
            <summary>
            MultiSelect component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.DisplayTemplate">
            <summary>
            获得/设置 显示部分模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.ShowCloseButton">
            <summary>
            获得/设置 是否显示关闭按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.CloseButtonIcon">
            <summary>
            获得/设置 关闭按钮图标 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.ShowToolbar">
            <summary>
            获得/设置 是否显示功能按钮 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.ShowDefaultButtons">
            <summary>
            获得/设置 是否显示默认功能按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.IsFixedHeight">
            <summary>
            获得/设置 是否固定高度 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.IsSingleLine">
            <summary>
            获得/设置 是否为单行模式 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.OnEditCallback">
            <summary>
            获得/设置 编辑模式下输入选项更新后回调方法 默认 null
            <para>返回 <see cref="T:BootstrapBlazor.Components.SelectedItem"/> 实例时输入选项生效，返回 null 时选项不生效进行舍弃操作，建议在回调方法中自行提示</para>
            </summary>
            <remarks>Effective when <see cref="P:BootstrapBlazor.Components.SimpleSelectBase`1.IsEditable"/> is set.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.EditSubmitKey">
            <summary>
            获得/设置 编辑提交按键 默认 Enter
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.ButtonTemplate">
            <summary>
            获得/设置 扩展按钮模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.OnSelectedItemsChanged">
            <summary>
            获得/设置 选中项集合发生改变时回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.DefaultVirtualizeItemText">
            <summary>
            Gets or sets the default virtualize items text.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.SelectAllText">
            <summary>
            获得/设置 全选按钮显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.ReverseSelectText">
            <summary>
            获得/设置 全选按钮显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.ClearText">
            <summary>
            获得/设置 全选按钮显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.Max">
            <summary>
            获得/设置 选项最大数 默认为 0 不限制
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.MaxErrorMessage">
            <summary>
            获得/设置 设置最大值时错误消息文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.Min">
            <summary>
            获得/设置 选项最小数 默认为 0 不限制
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelect`1.MinErrorMessage">
            <summary>
            获得/设置 设置最小值时错误消息文字
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.OnAfterRender(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.OnClearValue">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.FormatValueAsString(`0)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.GetRowsByItems">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.ConfirmSelectedItem(System.Int32)">
            <summary>
            客户端回车回调方法
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.ToggleRow(System.String)">
            <summary>
            切换当前选项方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.TriggerEditTag(System.String)">
            <summary>
            客户端编辑提交数据回调方法
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.Clear">
            <summary>
            清除选择项方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.SelectAll">
            <summary>
            全选选择项方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.InvertSelect">
            <summary>
            翻转选择项方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelect`1.OnValidate(System.Nullable{System.Boolean})">
            <summary>
            客户端检查完成时调用此方法
            </summary>
            <param name="valid"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.PopoverSelectBase`1">
            <summary>
            PopoverSelectBase 基类
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverSelectBase`1.IsPopover">
            <summary>
            获得/设置 是否使用 Popover 渲染下拉框 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverSelectBase`1.Offset">
            <summary>
            获得/设置 弹窗偏移量 默认 [0, 10]
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverSelectBase`1.ToggleString">
            <summary>
            data-bs-toggle 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PopoverSelectBase`1.OffsetString">
            <summary>
            偏移量字符串
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PopoverSelectBase`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Select`1">
            <summary>
            Select component
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.IsUseActiveWhenValueIsNull">
            <summary>
            获得/设置 值为 null 时是否使用第一个选项或者标记为 active 的候选项作为默认值
            <para>Gets or sets a value indicating Whether to use the first option or the candidate marked as active as the default value when the value is null</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.IsUseDefaultItemWhenValueIsNull">
            <summary>
            获得/设置 值为 null 时是否使用第一个选项或者标记为 active 的候选项作为默认值
            <para>Gets or sets a value indicating Whether to use the first option or the candidate marked as active as the default value when the value is null</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.DisplayTemplate">
            <summary>
            Gets or sets the display template. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.OnInputChangedCallback">
            <summary>
            Gets or sets the callback method when the input value changes. Default is null.
            </summary>
            <remarks>Effective when <see cref="P:BootstrapBlazor.Components.SimpleSelectBase`1.IsEditable"/> is set.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.Options">
            <summary>
            Gets or sets the options template for static data.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.DisableItemChangedWhenFirstRender">
            <summary>
            Gets or sets whether to disable the OnSelectedItemChanged callback method on first render. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.OnBeforeSelectedItemChange">
            <summary>
            获取/设置 选中项改变前的回调方法。返回 true 则改变选中项的值；否则选中项的值不变。
            <para>Gets or sets the callback method before the selected item changes. Returns true to change the selected item value; otherwise, the selected item value does not change.</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.ShowSwal">
            <summary>
            Gets or sets whether to show the Swal confirmation popup. Default is false.
            获得/设置 是否显示 Swal 确认弹窗 默认值 为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.OnSelectedItemChanged">
            <summary>
            Gets or sets the callback method when the selected item changes.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.SwalCategory">
            <summary>
            Gets or sets the Swal category. Default is Question.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.SwalTitle">
            <summary>
            Gets or sets the Swal title. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.SwalContent">
            <summary>
            Gets or sets the Swal content. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.SwalFooter">
            <summary>
            Gets or sets the Swal footer. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.LookupService">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.LookupServiceKey">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.LookupServiceData">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.DefaultVirtualizeItemText">
            <summary>
            Gets or sets the default text for virtualized items. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.IsAutoClearSearchTextWhenCollapsed">
            <summary>
            Gets or sets whether auto clear the search text when dropdown closed.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Select`1.OnCollapsed">
            <summary>
            Gets or sets the dropdown collapsed callback method.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Select`1.RetrieveId">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Select`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Select`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Select`1.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Select`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="value"></param>
            <param name="result"></param>
            <param name="validationErrorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Select`1.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Select`1.TriggerCollapsed">
            <summary>
            Trigger <see cref="P:BootstrapBlazor.Components.Select`1.OnCollapsed"/> event callback method. called by JavaScript.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Select`1.GetRowsByItems">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Select`1.ConfirmSelectedItem(System.Int32)">
            <summary>
            Confirms the selected item.
            </summary>
            <param name="index">The index of the selected item.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Select`1.OnClickItem(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            Handles the click event for a dropdown item.
            </summary>
            <param name="item">The selected item.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Select`1.Add(BootstrapBlazor.Components.SelectedItem)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Select`1.OnClearValue">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SelectBase`1">
            <summary>
            SelectBase component base class
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.Color">
            <summary>
            Gets or sets the color. The default is <see cref="F:BootstrapBlazor.Components.Color.None"/> (no color).
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.ShowSearch">
            <summary>
            Gets or sets a value indicating whether to show the search box. The default is <c>false</c>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.SearchIcon">
            <summary>
            Gets or sets the search icon.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.SearchLoadingIcon">
            <summary>
            Gets or sets the search loading icon.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.SearchText">
            <summary>
            Gets or sets the search text.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.NoSearchDataText">
            <summary>
            Gets or sets the text to display when no search results are found.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.DropdownIcon">
            <summary>
            Gets or sets the dropdown icon. The default is "fa-solid fa-angle-up".
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.IsMarkupString">
            <summary>
            Gets or sets a value indicating whether the content is a <see cref="T:Microsoft.AspNetCore.Components.MarkupString"/>. The default is <c>false</c>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.StringComparison">
            <summary>
            Gets or sets the string comparison rule. The default is <see cref="F:System.StringComparison.OrdinalIgnoreCase"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.GroupItemTemplate">
            <summary>
            Gets or sets the group item template.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.ScrollIntoViewBehavior">
            <summary>
            Gets or sets the scroll behavior. The default is <see cref="F:BootstrapBlazor.Components.ScrollIntoViewBehavior.Smooth"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.IconTheme">
            <summary>
            Gets or sets the <see cref="T:BootstrapBlazor.Components.IIconTheme"/> service instance.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.PlaceHolder">
            <summary>
            Gets or sets the placeholder text.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.IsVirtualize">
            <summary>
            Gets or sets whether virtual scrolling is enabled. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.RowHeight">
            <summary>
            Gets or sets the row height for virtual scrolling. Default is 33.
            </summary>
            <remarks>Effective when <see cref="P:BootstrapBlazor.Components.SelectBase`1.IsVirtualize"/> is set to true.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.OverscanCount">
            <summary>
            Gets or sets the overscan count for virtual scrolling. Default is 4.
            </summary>
            <remarks>Effective when <see cref="P:BootstrapBlazor.Components.SelectBase`1.IsVirtualize"/> is set to true.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.OnClearAsync">
            <summary>
            Gets or sets the callback method when the clear button is clicked. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.ClearIcon">
            <summary>
            Gets or sets the right-side clear icon. Default is fa-solid fa-angle-up.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.IsClearable">
            <summary>
            Gets or sets whether the select component is clearable. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.SearchIconString">
            <summary>
            Gets the search icon string with default "icon search-icon" class.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.CustomClassString">
            <summary>
            Gets the custom class string.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.AppendClassString">
            <summary>
            Gets the append class string.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.ClearClassString">
            <summary>
            Gets the clear icon class string.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectBase`1.SearchLoadingIconString">
            <summary>
            Gets the SearchLoadingIcon icon class string.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.Show">
            <summary>
            Shows the dropdown.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.Hide">
            <summary>
            Hides the dropdown.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.GetClearable">
            <summary>
            Gets whether show the clear button.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.ClearSearchText">
            <summary>
            Clears the search text.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectBase`1.OnClearValue">
            <summary>
            Clears the selected value.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SelectObject`1">
            <summary>
            Select 组件实现类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.Color">
            <summary>
            获得/设置 颜色 默认 Color.None 无设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.ShowAppendArrow">
            <summary>
            获得/设置 是否显示组件右侧扩展箭头 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.DropdownMinWidth">
            <summary>
            获得/设置 弹窗最小宽度 默认为 null 未设置使用样式中的默认值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.GetTextCallback">
            <summary>
            获得 显示文字回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.DropdownIcon">
            <summary>
            获得/设置 右侧下拉箭头图标 默认 fa-solid fa-angle-up
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.IsClearable">
            <summary>
            获得/设置 是否可清除 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.ClearIcon">
            <summary>
            获得/设置 右侧清除图标 默认 fa-solid fa-angle-up
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.ChildContent">
            <summary>
            获得/设置 下拉列表内容模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.IconTheme">
            <summary>
            获得/设置 IIconTheme 服务实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.ClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.InputClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.AppendClassString">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.PlaceHolder">
            <summary>
            获得 PlaceHolder 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.Height">
            <summary>
            获得/设置 弹窗高度 默认 486px;
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.Template">
            <summary>
            获得/设置 Value 显示模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.OnClearAsync">
            <summary>
            获得/设置 清除文本内容 OnClear 回调方法 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectObject`1.RetrieveId">
            <summary>
            获得 input 组件 Id 方法
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectObject`1.InputId">
            <summary>
            获得/设置 内部 Input 组件 Id
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectObject`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectObject`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectObject`1.GetText">
            <summary>
            获得 Text 显示文字
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectObject`1.CloseAsync">
            <summary>
            关闭当前弹窗方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SelectOption">
            <summary>
            SelectOption component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOption.Text">
            <summary>
            Gets or sets the display name.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOption.Value">
            <summary>
            Gets or sets the option value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOption.Active">
            <summary>
            Gets or sets a value indicating whether the option is selected. Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOption.IsDisabled">
            <summary>
            Gets or sets a value indicating whether the option is disabled. Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOption.GroupName">
            <summary>
            Gets or sets the group name.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectOption.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectOption.ToSelectedItem">
            <summary>
            Converts the current instance to a <see cref="T:BootstrapBlazor.Components.SelectedItem"/>.
            </summary>
            <returns>A <see cref="T:BootstrapBlazor.Components.SelectedItem"/> instance.</returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SelectTable`1">
            <summary>
            下拉表格组件实现类
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.TableColumns">
            <summary>
            获得/设置 TableHeader 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.OnQueryAsync">
            <summary>
            异步查询回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.Color">
            <summary>
            获得/设置 颜色 默认 Color.None 无设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.ShowAppendArrow">
            <summary>
            获得/设置 是否显示组件右侧扩展箭头 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.TableMinWidth">
            <summary>
            获得/设置 弹窗表格最小宽度 默认为 null 未设置使用样式中的默认值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.GetTextCallback">
            <summary>
            获得 显示文字回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.DropdownIcon">
            <summary>
            获得/设置 右侧下拉箭头图标 默认 fa-solid fa-angle-up
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.IsClearable">
            <summary>
            获得/设置 是否可清除 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.ShowEmpty">
            <summary>
            获得/设置 是否显示无数据空记录 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.EmptyTemplate">
            <summary>
            获得/设置 无数据时显示模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.IconTheme">
            <summary>
            获得/设置 IIconTheme 服务实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.Columns">
            <summary>
            获得表格列集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.ClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.InputClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.AppendClassString">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.ClearIcon">
            <summary>
            获得/设置 右侧清除图标 默认 fa-solid fa-angle-up
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.PlaceHolder">
            <summary>
            获得 PlaceHolder 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.Height">
            <summary>
            获得/设置 表格高度 默认 486px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.Template">
            <summary>
            获得/设置 Value 显示模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.ShowSearch">
            <summary>
            获得/设置 是否显示搜索框 默认为 false 不显示搜索框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.SearchTemplate">
            <summary>
            获得/设置 SearchTemplate 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.CollapsedTopSearch">
            <summary>
            获得/设置 是否收缩顶部搜索框 默认为 false 不收缩搜索框 是否显示搜索框请设置 <see cref="T:BootstrapBlazor.Components.SearchMode"/> 值 Top
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.SearchModel">
            <summary>
            获得/设置 SearchModel 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.CustomerSearchModel">
            <summary>
            获得/设置 自定义搜索模型 <see cref="P:BootstrapBlazor.Components.SelectTable`1.CustomerSearchTemplate"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.CustomerSearchTemplate">
            <summary>
            获得/设置 自定义搜索模型模板 <see cref="P:BootstrapBlazor.Components.SelectTable`1.CustomerSearchModel"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.IsPagination">
            <summary>
            获得/设置 是否分页 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.PageItemsSource">
            <summary>
            获得/设置 每页显示数据数量的外部数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.AutoGenerateColumns">
            <summary>
            获得/设置 是否自动生成列信息 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.OnClearAsync">
            <summary>
            获得/设置 清除文本内容 OnClear 回调方法 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTable`1.RetrieveId">
            <summary>
            获得 input 组件 Id 方法
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTable`1.InputId">
            <summary>
            获得/设置 内部 Input 组件 Id
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTable`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTable`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTable`1.GetText">
            <summary>
            获得 Text 显示文字
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTable`1.QueryAsync">
            <summary>
            查询方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SelectTree`1">
            <summary>
            Select 组件实现类
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.ClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.InputClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.AppendClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.Color">
            <summary>
            获得/设置 颜色 默认 Color.None 无设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.PlaceHolder">
            <summary>
            获得 PlaceHolder 属性
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.CanExpandWhenDisabled">
            <summary>
            Gets or sets whether nodes can be expanded or collapsed when the component is disabled. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.StringComparison">
            <summary>
            获得/设置 字符串比较规则 默认 StringComparison.OrdinalIgnoreCase 大小写不敏感 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.Items">
            <summary>
            获得/设置 带层次数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.OnSelectedItemChanged">
            <summary>
            SelectedItemChanged 回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.OnExpandNodeAsync">
            <summary>
            获得/设置 点击节点获取子数据集合回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.CustomKeyAttribute">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.ModelEqualityComparer">
            <summary>
            获得/设置 比较数据是否相同回调方法 默认为 null
            </summary>
            <remarks>提供此回调方法时忽略 <see cref="P:BootstrapBlazor.Components.SelectTree`1.CustomKeyAttribute"/> 属性</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.ShowIcon">
            <summary>
            获得/设置 是否显示 Icon 图标 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.DropdownIcon">
            <summary>
            获得/设置 下拉箭头 Icon 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.IsEdit">
            <summary>
            获得/设置 是否可编辑 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.IsEditable">
            <summary>
            获得/设置 是否可编辑 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.ShowSearch">
            <summary>
            获得/设置 是否显示搜索栏 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.IsFixedSearch">
            <summary>
            获得/设置 是否固定搜索栏 默认 false 不固定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.ShowResetSearchButton">
            <summary>
            获得/设置 是否显示重置搜索栏按钮 默认 true 显示
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTree`1.RetrieveId">
            <summary>
            获得 input 组件 Id 方法
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.InputId">
            <summary>
            获得/设置 Select 内部 Input 组件 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectTree`1.SelectedItem">
            <summary>
            获得/设置 上次选项
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTree`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTree`1.OnInitializedAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTree`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTree`1.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTree`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="value"></param>
            <param name="result"></param>
            <param name="validationErrorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTree`1.OnItemClick(BootstrapBlazor.Components.TreeViewItem{`0})">
            <summary>
            下拉框选项点击时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTree`1.ItemChanged(BootstrapBlazor.Components.TreeViewItem{`0})">
            <summary>
            选中项更改处理方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectTree`1.Equals(`0,`0)">
            <summary>
            比较数据是否相同
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SimpleSelectBase`1">
            <summary>
            SimpleSelectBase component base class
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="F:BootstrapBlazor.Components.SimpleSelectBase`1._virtualizeElement">
            <summary>
            Gets virtualize component instrance
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SimpleSelectBase`1._lastSelectedValueString">
            <summary>
            Gets or sets the last selected value string.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SimpleSelectBase`1.Items">
            <summary>
            Gets or sets the items.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SimpleSelectBase`1.OnQueryAsync">
            <summary>
            Gets or sets the callback method for loading virtualized items.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SimpleSelectBase`1.OnSearchTextChanged">
            <summary>
            Gets or sets the callback method when the search text changes.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SimpleSelectBase`1.IsEditable">
            <summary>
            Gets or sets whether the select component is editable. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SimpleSelectBase`1.ItemTemplate">
            <summary>
            Gets or sets the item template.
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SimpleSelectBase`1._itemsCache">
            <summary>
            Gets or sets the selected items cache.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SimpleSelectBase`1.Rows">
            <summary>
            Gets the dropdown menu rows.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SimpleSelectBase`1.GetRowsByItems">
            <summary>
            Gets the rows by Items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SimpleSelectBase`1.FilterBySearchText(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.SelectedItem})">
            <summary>
            Filter the items by search text.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SimpleSelectBase`1.TriggerOnSearch(System.String)">
            <summary>
            Triggers the search callback method.
            </summary>
            <param name="searchText">The search text.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SimpleSelectBase`1.RefreshVirtualizeElement">
            <summary>
            Refreshes the virtualize component.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SimpleSelectBase`1.OnClearValue">
            <summary>
            Clears the selected value.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.VirtualizeQueryOption">
            <summary>
            Select 组件虚拟滚动参数类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.VirtualizeQueryOption.StartIndex">
            <summary>
            请求记录开始索引
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.VirtualizeQueryOption.Count">
            <summary>
            请求记录总数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.VirtualizeQueryOption.SearchText">
            <summary>
            Select 组件搜索文本
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ISelectGeneric`1">
            <summary>
            ISelect 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ISelectGeneric`1.Add(BootstrapBlazor.Components.SelectedItem{`0})">
            <summary>
            增加 SelectedItem 项方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.MultiSelectGeneric`1">
            <summary>
            MultiSelectGeneric component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.DisplayTemplate">
            <summary>
            获得/设置 显示部分模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.ShowCloseButton">
            <summary>
            获得/设置 是否显示关闭按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.CloseButtonIcon">
            <summary>
            获得/设置 关闭按钮图标 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.ShowToolbar">
            <summary>
            获得/设置 是否显示功能按钮 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.ShowDefaultButtons">
            <summary>
            获得/设置 是否显示默认功能按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.IsFixedHeight">
            <summary>
            获得/设置 是否固定高度 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.IsSingleLine">
            <summary>
            获得/设置 是否为单行模式 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.OnEditCallback">
            <summary>
            获得/设置 编辑模式下输入选项更新后回调方法 默认 null
            <para>返回 <see cref="T:BootstrapBlazor.Components.SelectedItem"/> 实例时输入选项生效，返回 null 时选项不生效进行舍弃操作，建议在回调方法中自行提示</para>
            </summary>
            <remarks>Effective when <see cref="P:BootstrapBlazor.Components.SimpleSelectBase`1.IsEditable"/> is set.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.EditSubmitKey">
            <summary>
            获得/设置 编辑提交按键 默认 Enter
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.ButtonTemplate">
            <summary>
            获得/设置 扩展按钮模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.OnSelectedItemsChanged">
            <summary>
            获得/设置 选中项集合发生改变时回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.DefaultVirtualizeItemText">
            <summary>
            Gets or sets the default virtualize items text.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.SelectAllText">
            <summary>
            获得/设置 全选按钮显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.ReverseSelectText">
            <summary>
            获得/设置 全选按钮显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.ClearText">
            <summary>
            获得/设置 全选按钮显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.Max">
            <summary>
            获得/设置 选项最大数 默认为 0 不限制
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.MaxErrorMessage">
            <summary>
            获得/设置 设置最大值时错误消息文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.Min">
            <summary>
            获得/设置 选项最小数 默认为 0 不限制
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.MinErrorMessage">
            <summary>
            获得/设置 设置最小值时错误消息文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.Items">
            <summary>
            Gets or sets the items.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.OnQueryAsync">
            <summary>
            Gets or sets the callback method for loading virtualized items.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.OnSearchTextChanged">
            <summary>
            Gets or sets the callback method when the search text changes.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.ItemTemplate">
            <summary>
            Gets or sets the item template.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectGeneric`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectGeneric`1.OnAfterRender(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectGeneric`1.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectGeneric`1.TriggerOnSearch(System.String)">
            <summary>
            Triggers the search callback method.
            </summary>
            <param name="searchText">The search text.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectGeneric`1.RefreshVirtualizeElement">
            <summary>
            Refreshes the virtualize component.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.MultiSelectGeneric`1.Rows">
            <summary>
            Gets the dropdown menu rows.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectGeneric`1.OnClearValue">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectGeneric`1.GetRowsByItems">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectGeneric`1.ConfirmSelectedItem(System.Int32)">
            <summary>
            客户端回车回调方法
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectGeneric`1.ToggleRow(BootstrapBlazor.Components.SelectedItem{`0})">
            <summary>
            切换当前选项方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectGeneric`1.Clear">
            <summary>
            清除选择项方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectGeneric`1.SelectAll">
            <summary>
            全选选择项方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectGeneric`1.InvertSelect">
            <summary>
            翻转选择项方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MultiSelectGeneric`1.OnValidate(System.Nullable{System.Boolean})">
            <summary>
            客户端检查完成时调用此方法
            </summary>
            <param name="valid"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.SelectGeneric`1">
            <summary>
            Select 泛型组件实现类
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.ClassString">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.InputClassString">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectGeneric`1.ActiveItem(BootstrapBlazor.Components.SelectedItem{`0})">
            <summary>
            设置当前项是否 Active 方法
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.OnSearchTextChanged">
            <summary>
            获得/设置 搜索文本发生变化时回调此方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.IsEditable">
            <summary>
            获得/设置 是否可编辑 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.OnInputChangedCallback">
            <summary>
            获得/设置 选项输入更新后回调方法 默认 null
            </summary>
            <remarks>设置 <see cref="P:BootstrapBlazor.Components.SelectGeneric`1.IsEditable"/> 后生效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.TextConvertToValueCallback">
            <summary>
            获得/设置 选项输入更新后转换为 Value 回调方法 默认 null
            <para>返回值为 null 时放弃操作</para>
            </summary>
            <remarks>设置 <see cref="P:BootstrapBlazor.Components.SelectGeneric`1.IsEditable"/> 后生效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.Options">
            <summary>
            获得/设置 选项模板支持静态数据
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.DisplayTemplate">
            <summary>
            获得/设置 显示部分模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.DisableItemChangedWhenFirstRender">
            <summary>
            获得/设置 禁止首次加载时触发 OnSelectedItemChanged 回调方法 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.ValueEqualityComparer">
            <summary>
            获得/设置 比较数据是否相同回调方法 默认为 null
            <para>提供此回调方法时忽略 <see cref="P:BootstrapBlazor.Components.SelectGeneric`1.CustomKeyAttribute"/> 属性</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.CustomKeyAttribute">
            <summary>
            获得/设置 数据主键标识标签 默认为 <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute"/>用于判断数据主键标签，如果模型未设置主键时可使用 <see cref="P:BootstrapBlazor.Components.SelectGeneric`1.ValueEqualityComparer"/> 参数自定义判断数据模型支持联合主键
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.Items">
            <summary>
            获得/设置 绑定数据集
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.ItemTemplate">
            <summary>
            获得/设置 选项模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.OnBeforeSelectedItemChange">
            <summary>
            获得/设置 下拉框项目改变前回调委托方法 返回 true 时选项值改变，否则选项值不变
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.OnSelectedItemChanged">
            <summary>
            SelectedItemChanged 回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.SwalCategory">
            <summary>
            获得/设置 Swal 图标 默认 Question
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.SwalTitle">
            <summary>
            获得/设置 Swal 标题 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.SwalContent">
            <summary>
            获得/设置 Swal 内容 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.SwalFooter">
            <summary>
            获得/设置 Footer 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectGeneric`1.RetrieveId">
            <summary>
            获得 input 组件 Id 方法
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.InputId">
            <summary>
            获得/设置 Select 内部 Input 组件 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.SelectedItem">
            <summary>
            当前选择项实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectGeneric`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectGeneric`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.TotalCount">
            <summary>
            获得/设置 数据总条目
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectGeneric`1.OnQueryAsync">
            <summary>
            虚拟滚动数据加载回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectGeneric`1.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectGeneric`1.ConfirmSelectedItem(System.Int32)">
            <summary>
            客户端回车回调方法
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectGeneric`1.TriggerOnSearch(System.String)">
            <summary>
            客户端搜索栏回调方法
            </summary>
            <param name="searchText"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectGeneric`1.OnClickItem(BootstrapBlazor.Components.SelectedItem{`0})">
            <summary>
            下拉框选项点击时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectGeneric`1.Add(BootstrapBlazor.Components.SelectedItem{`0})">
            <summary>
            添加静态下拉项方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectGeneric`1.OnClearValue">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectGeneric`1.Equals(`0,`0)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SelectOptionGeneric`1">
            <summary>
            SelectOptionPro 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOptionGeneric`1.Text">
            <summary>
            获得/设置 显示名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOptionGeneric`1.Value">
            <summary>
            获得/设置 选项值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOptionGeneric`1.Active">
            <summary>
            获得/设置 是否选中 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOptionGeneric`1.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOptionGeneric`1.GroupName">
            <summary>
            获得/设置 分组名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectOptionGeneric`1.Container">
            <summary>
            父组件通过级联参数获得
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectOptionGeneric`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SkeletonAvatar">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SkeletonAvatar.Circle">
            <summary>
            获得/设置 是否为圆形 默认为 false
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SkeletonBase">
            <summary>
            骨架屏组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SkeletonBase.Round">
            <summary>
            获得/设置 是否圆角 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SkeletonBase.Active">
            <summary>
            获得/设置 是否显示动画 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SkeletonBase.ClassString">
            <summary>
            获得 样式
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SkeletonTable">
            <summary>
            表格骨架屏组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SkeletonTable.Rows">
            <summary>
            获得/设置 行数 默认 7 行
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SkeletonTable.Columns">
            <summary>
            获得/设置 行数 默认 3 列
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SkeletonTable.ShowToolbar">
            <summary>
            获得/设置 是否显示工具栏
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SkeletonTree">
            <summary>
            树状组件骨架屏组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SkeletonTree.Icon">
            <summary>
            获得/设置 Loading 图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SkeletonTree.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Slider`1">
            <summary>
            Range 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Slider`1.ClassString">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Slider`1.Min">
            <summary>
            获得/设置 最小值 默认为 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Slider`1.Max">
            <summary>
            获得/设置 最大值 默认为 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Slider`1.Step">
            <summary>
            获得/设置 步长 默认为 null 未设置
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Slider`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IRecognizerProvider">
            <summary>
            ISpeechService 服务接口定义
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IRecognizerProvider.InvokeAsync(BootstrapBlazor.Components.RecognizerOption)">
            <summary>
            识别语音回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ISynthesizerProvider">
            <summary>
            ISynthesizerProvider 语音合成接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ISynthesizerProvider.InvokeAsync(BootstrapBlazor.Components.SynthesizerOption)">
            <summary>
            语音合成回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.RecognizerOption">
            <summary>
            语音识别配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RecognizerOption.MethodName">
            <summary>
            获得/设置 语音识别指令名称 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RecognizerOption.Callback">
            <summary>
            获得/设置 回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RecognizerOption.SpeechRecognitionLanguage">
            <summary>
            获得/设置 识别语音文化 默认 zh-CN
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RecognizerOption.TargetLanguage">
            <summary>
            获得/设置 结果文化 默认 zh-CN
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.RecognizerOption.AutoRecoginzerElapsedMilliseconds">
            <summary>
            获得/设置 自动识别时间 默认 5000 设置 0 时禁用需要手动关闭
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.RecognizerService">
            <summary>
            语音识别服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RecognizerService.#ctor(BootstrapBlazor.Components.IRecognizerProvider)">
            <summary>
            语音识别服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RecognizerService.InvokeAsync(BootstrapBlazor.Components.RecognizerOption)">
            <summary>
            语音识别回调方法
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SpeechWave">
            <summary>
            语音识别波形图组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SpeechWave.Show">
            <summary>
            获得/设置 是否显示波形图 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SpeechWave.ShowUsedTime">
            <summary>
            获得/设置 是否显示已用时长 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SpeechWave.OnTimeout">
            <summary>
            获得/设置 倒计时结束时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SpeechWave.TotalTime">
            <summary>
            获得/设置 总时长 默认 60 000 毫秒
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SpeechWave.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SpeechWave.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.SpeechWave.Dispose">
            <summary>
            Dispose 方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SynthesizerOption">
            <summary>
            语音合成配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SynthesizerOption.MethodName">
            <summary>
            获得/设置 语音识别指令名称 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SynthesizerOption.Text">
            <summary>
            获得/设置 语音合成文本内容 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SynthesizerOption.Callback">
            <summary>
            获得/设置 回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SynthesizerOption.SpeechSynthesisLanguage">
            <summary>
            获得/设置 识别语音文化 默认 zh-CN
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SynthesizerOption.SpeechSynthesisVoiceName">
            <summary>
            获得/设置 结果文化 默认 zh-CN
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SynthesizerService">
            <summary>
            语音合成服务
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.SynthesizerService.#ctor(BootstrapBlazor.Components.ISynthesizerProvider)">
            <summary>
            语音合成服务
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.SynthesizerService.InvokeAsync(BootstrapBlazor.Components.SynthesizerOption)">
            <summary>
            语音合成回调方法
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Spinner">
            <summary>
            Spinner 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Spinner.ClassString">
            <summary>
            获取Spinner样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Spinner.Color">
            <summary>
            获得/设置 Spinner 颜色 默认 None 无设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Spinner.Size">
            <summary>
            获得 / 设置 Spinner 大小 默认 None 无设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Spinner.SpinnerType">
            <summary>
            获得/设置 Spinner 类型 默认为 Border
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Split">
            <summary>
            Split 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Split.IsCollapsible">
            <summary>
            获取 是否开启折叠功能 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Split.ShowBarHandle">
            <summary>
            获取 是否显示拖动条 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Split.IsKeepOriginalSize">
            <summary>
            获得/设置 开启 <see cref="P:BootstrapBlazor.Components.Split.IsCollapsible"/> 后，恢复时是否保持原始大小 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Split.IsVertical">
            <summary>
            获得/设置 是否垂直分割
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Split.Basis">
            <summary>
            获得/设置 第一个窗格初始化位置占比 默认为 50%
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Split.FirstPaneTemplate">
            <summary>
            获得/设置 第一个窗格模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Split.FirstPaneMinimumSize">
            <summary>
            获得/设置 第一个窗格模板 支持任意单位如 10px 20% 5em 1rem 未提供单位时默认为 px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Split.SecondPaneTemplate">
            <summary>
            获得/设置 第二个窗格模板 支持任意单位如 10px 20% 5em 1rem 未提供单位时默认为 px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Split.SecondPaneMinimumSize">
            <summary>
            获得/设置 第一个窗格模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Split.OnCollapsedAsync">
            <summary>
            获得/设置 窗格折叠时回调方法 参数 bool 值为 true 是表示已折叠 值为 false 表示第二个已折叠
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Split.OnResizedAsync">
            <summary>
            获得/设置 窗格尺寸改变时回调方法 可参阅 <see cref="T:BootstrapBlazor.Components.SplitterResizedEventArgs"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Split.ClassString">
            <summary>
            获得 组件样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Split.StyleString">
            <summary>
            获得 第一个窗格 Style
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Split.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Split.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Split.SetLeftWidth(System.String)">
            <summary>
            设置左侧窗格宽度
            </summary>
            <param name="leftWidth">可以是百分比或者其他单位</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Split.TriggerOnResize(System.String)">
            <summary>
            窗格折叠时回调方法 由 JavaScript 调用   
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SplitterResizedEventArgs">
            <summary>
            SplitterResizedEventArgs 类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SplitterResizedEventArgs.#ctor(System.String)">
            <summary>
            SplitterResizedEventArgs 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SplitterResizedEventArgs.FirstPanelSize">
            <summary>
            Gets the size of panel 1 (top/left) after a resize operation.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SplitterResizedEventArgs.IsCollapsed">
            <summary>
            获得 组件第一个面板是否折叠
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SplitterResizedEventArgs.IsExpanded">
            <summary>
            获得 组件第一个面板是否展开
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Stack">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Stack.ChildContent">
            <summary>
            获得/设置 内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Stack.IsRow">
            <summary>
            获得/设置 是否为行布局 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Stack.IsReverse">
            <summary>
            获得/设置 是否反向布局 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Stack.IsWrap">
            <summary>
            获得/设置 是否允许折行 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Stack.AlignItems">
            <summary>
            获得/设置 垂直布局模式 默认 StackAlignItems.Stretch
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Stack.Justify">
            <summary>
            获得/设置 水平布局调整 默认 StackJustifyContent.Start
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Stack.AddItem(BootstrapBlazor.Components.StackItem)">
            <summary>
            添加子项
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Stack.RemoveItem(BootstrapBlazor.Components.StackItem)">
            <summary>
            移除子项
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.StackItem">
            <summary>
            Stack Item 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StackItem.ChildContent">
            <summary>
            获得/设置 内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StackItem.IsFill">
            <summary>
            获得/设置 是否自动充满 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StackItem.AlignSelf">
            <summary>
            获得/设置 垂直布局模式 默认 StackAlignItems.Stretch
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StackItem.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StackItem.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.StackItem.Dispose(System.Boolean)">
            <summary>
            销毁资源
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.StackItem.Dispose">
            <summary>
            销毁资源
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:BootstrapBlazor.Components.Step">
            <summary>
            Step 组件类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.Items">
            <summary>
            获得/设置 步骤集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.IsVertical">
            <summary>
            获得/设置 是否垂直渲染 默认 false 水平渲染
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.StepIndex">
            <summary>
            获得/设置 当前步骤索引 默认 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.ChildContent">
            <summary>
            获得/设置 组件内容实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.FinishedTemplate">
            <summary>
            获得/设置 步骤全部完成时模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.OnFinishedCallback">
            <summary>
            获得/设置 步骤全部完成时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.CurrentStepIndex">
            <summary>
            获得当前步骤索引（只读）
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Step.ClassString">
            <summary>
            获得 组件样式字符串
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Step.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Step.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Step.Prev">
            <summary>
            移动到上一步方法 返回当前 StepIndex 值
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Step.Next">
            <summary>
            移动到下一步方法 返回当前 StepIndex 值
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Step.Reset">
            <summary>
            重置步骤方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Step.Add(BootstrapBlazor.Components.StepOption)">
            <summary>
            添加步骤到组件中
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Step.Insert(System.Int32,BootstrapBlazor.Components.StepOption)">
            <summary>
            插入步骤到组件中
            </summary>
            <param name="index"></param>
            <param name="option"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Step.Remove(BootstrapBlazor.Components.StepOption)">
            <summary>
            从组件中移除步骤
            </summary>
            <param name="option"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.StepItem">
            <summary>
            StepItem 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.Text">
            <summary>
            获得/设置 步骤显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.Title">
            <summary>
            获得/设置 步骤显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.Icon">
            <summary>
            获得/设置 步骤显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.FinishedIcon">
            <summary>
            获得/设置 步骤完成显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.Description">
            <summary>
            获得/设置 描述信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.HeaderTemplate">
            <summary>
            获得/设置 Header 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.TitleTemplate">
            <summary>
            获得/设置 Title 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.ChildContent">
            <summary>
            获得/设置 组件内容实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepItem.Step">
            <summary>
            获得/设置 父级组件 Step 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StepItem.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StepItem.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StepItem.Dispose(System.Boolean)">
            <summary>
            销毁方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.StepItem.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.StepOption">
            <summary>
            Step 组件项类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepOption.Text">
            <summary>
            获得/设置 步骤显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepOption.Icon">
            <summary>
            获得/设置 步骤显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepOption.FinishedIcon">
            <summary>
            获得/设置 步骤完成显示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepOption.Title">
            <summary>
            获得/设置 步骤显示标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepOption.Description">
            <summary>
            获得/设置 描述信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepOption.HeaderTemplate">
            <summary>
            获得/设置 Header 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepOption.TitleTemplate">
            <summary>
            获得/设置 Title 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepOption.Template">
            <summary>
            获得/设置 每个 step 内容模板
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SwalOption">
            <summary>
            SweetAlert Option 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.Modal">
            <summary>
            获得/设置 相关弹窗实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.ConfirmContext">
            <summary>
            获得/设置 模态弹窗任务上下文
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.IsConfirm">
            <summary>
            获得/设置 是否为确认弹窗模式 此属性给模态弹窗时使用 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.Category">
            <summary>
            获得/设置 提示类型 默认为 Success
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.Title">
            <summary>
            获得/设置 弹窗标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.BodyTemplate">
            <summary>
            获得/设置 ModalBody 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.FooterTemplate">
            <summary>
            获得/设置 Footer 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.ShowClose">
            <summary>
            获得/设置 是否显示关闭按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.ShowFooter">
            <summary>
            获得/设置 是否显示 Footer 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.ButtonTemplate">
            <summary>
            获得/设置 按钮模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.CloseButtonIcon">
            <summary>
            获得/设置 关闭按钮图标 默认 fa-solid fa-xmark
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.ConfirmButtonIcon">
            <summary>
            获得/设置 确认按钮图标 默认 fa-solid fa-check
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.CloseButtonText">
            <summary>
            获得/设置 关闭按钮文字 默认为 关闭
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.ConfirmButtonText">
            <summary>
            获得/设置 确认按钮文字 默认为 确认
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.CancelButtonText">
            <summary>
            获得/设置 取消按钮文字 默认为 取消
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.Class">
            <summary>
            获得/设置 弹窗自定义样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.OnCloseAsync">
            <summary>
            获得/设置 关闭弹窗回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SwalOption.OnConfirmAsync">
            <summary>
            获得/设置 点击 Confirm 按钮回调方法 用于模态对话框
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SwalOption.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SwalOption.ToAttributes">
            <summary>
            将参数转换为组件属性方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SwalOption.CloseAsync(System.Boolean)">
            <summary>
            关闭弹窗方法
            </summary>
            <param name="returnValue">模态弹窗返回值 默认为 true</param>
        </member>
        <member name="T:BootstrapBlazor.Components.SwalService">
            <summary>
            SweetAlert 弹窗服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SwalService.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{BootstrapBlazor.Components.BootstrapBlazorOptions})">
            <summary>
            SweetAlert 弹窗服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SwalService.Show(BootstrapBlazor.Components.SwalOption,BootstrapBlazor.Components.SweetAlert)">
            <summary>
            Show 方法
            </summary>
            <param name="option"><see cref="T:BootstrapBlazor.Components.SwalOption"/> 实例</param>
            <param name="swal">指定弹窗组件 默认为 null 使用 <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRoot"/> 组件内置弹窗组件</param>
        </member>
        <member name="T:BootstrapBlazor.Components.SweetAlert">
            <summary>
            SweetAlert component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlert.ModalContainer">
            <summary>
            Gets or sets the Modal container component instance
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlert.SwalService">
            <summary>
            Gets or sets the DialogServices service instance
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SweetAlert.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SweetAlert.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SweetAlert.DisposeAsync(System.Boolean)">
            <summary>
            Dispose method
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.SweetAlert.DisposeAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SweetAlertBody">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.CloseButtonText">
            <summary>
            获得/设置 关闭按钮文字 默认为 关闭
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.ConfirmButtonText">
            <summary>
            获得/设置 确认按钮文字 默认为 确认
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.CancelButtonText">
            <summary>
            获得/设置 取消按钮文字 默认为 取消
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.Category">
            <summary>
            获得/设置 弹窗类别默认为 Success
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.Title">
            <summary>
            获得/设置 显示标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.Content">
            <summary>
            获得/设置 显示内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.ShowClose">
            <summary>
            获得/设置 是否显示关闭按钮 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.ShowFooter">
            <summary>
            获得/设置 是否显示 Footer 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.IsConfirm">
            <summary>
            获得/设置 是否为确认弹窗模式 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.CloseButtonIcon">
            <summary>
            获得/设置 关闭按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.ConfirmButtonIcon">
            <summary>
            获得/设置 确认按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.OnCloseAsync">
            <summary>
            获得/设置 关闭按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.OnConfirmAsync">
            <summary>
            获得/设置 确认按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.BodyTemplate">
            <summary>
            获得/设置 显示内容模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.FooterTemplate">
            <summary>
            获得/设置 Footer 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetAlertBody.ButtonTemplate">
            <summary>
            获得/设置 按钮模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SweetAlertBody.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetContext.Value">
            <summary>
            获得/设置 弹窗返回值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SweetContext.ConfirmTask">
            <summary>
            获得/设置 弹窗任务上下文
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.NullSwitch">
            <summary>
            可为空布尔值组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullSwitch.ClassName">
            <summary>
            获得 样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullSwitch.Text">
            <summary>
            获得 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullSwitch.SwitchStyleName">
            <summary>
            获得 组件最小宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullSwitch.StyleName">
            <summary>
            获得 Style 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullSwitch.OnColor">
            <summary>
            获得/设置 开颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullSwitch.OffColor">
            <summary>
            获得/设置 关颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullSwitch.Width">
            <summary>
            获得/设置 组件宽度 默认 40
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullSwitch.Height">
            <summary>
            获得/设置 控件高度默认 20px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullSwitch.OnInnerText">
            <summary>
            获得/设置 组件 On 时内置显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullSwitch.OffInnerText">
            <summary>
            获得/设置 组件 Off 时内置显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullSwitch.ShowInnerText">
            <summary>
            获得/设置 是否显示内置文字 默认 false 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullSwitch.DefaultValueWhenNull">
            <summary>
            获得/设置 绑定值为空时的默认值 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NullSwitch.ComponentValue">
            <summary>
            获得/设置 组件 Value 值
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NullSwitch.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NullSwitch.OnClick">
            <summary>
            点击控件时触发此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Switch">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Switch.Text">
            <summary>
            获得 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Switch.SwitchStyleName">
            <summary>
            获得 组件最小宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Switch.StyleName">
            <summary>
            获得 Style 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Switch.OnColor">
            <summary>
            获得/设置 开颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Switch.OffColor">
            <summary>
            获得/设置 关颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Switch.Width">
            <summary>
            获得/设置 组件宽度 默认 40
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Switch.Height">
            <summary>
            获得/设置 控件高度默认 20px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Switch.OnInnerText">
            <summary>
            获得/设置 组件 On 时内置显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Switch.OffInnerText">
            <summary>
            获得/设置 组件 Off 时内置显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Switch.ShowInnerText">
            <summary>
            获得/设置 是否显示内置文字 默认 false 显示
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Switch.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Switch.OnClick">
            <summary>
            点击控件时触发此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorAuthorizeView">
            <summary>
            BootstrapBlazorAuthorizeView component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorAuthorizeView.Type">
            <summary>
            Gets or sets the type associated with the route. default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorAuthorizeView.Parameters">
            <summary>
            Gets or sets the parameters associated with the route. default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorAuthorizeView.NotAuthorized">
            <summary>
            Gets or sets the template to display when the user is not authorized. default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorAuthorizeView.Resource">
            <summary>
            Gets or sets the resource to which access is being controlled. default is null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorAuthorizeView.OnInitializedAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorAuthorizeView.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITabHeader">
            <summary>
            ITabHeader interface
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITabHeader.Render(Microsoft.AspNetCore.Components.RenderFragment)">
            <summary>
            Render method
            </summary>
            <param name="renderFragment"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ITabHeader.GetId">
            <summary>
            Get the id of the tab header
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Tab">
            <summary>
            Tab component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.Items">
            <summary>
            Gets the collection of tab items.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.Excluded">
            <summary>
            Gets or sets the excluded link. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.IsCard">
            <summary>
            Gets or sets whether card style. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.IsBorderCard">
            <summary>
            Gets or sets whether border card style. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.IsOnlyRenderActiveTab">
            <summary>
            获得/设置 是否仅渲染 Active 标签 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.IsLazyLoadTabItem">
            <summary>
            获得/设置 懒加载 TabItem, 首次不渲染 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.Height">
            <summary>
            获得/设置 组件高度 默认值为 0 高度自动
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.Placement">
            <summary>
            获得/设置 组件标签显示位置 默认显示在 Top 位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ShowClose">
            <summary>
            获得/设置 是否显示关闭按钮 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ShowFullScreen">
            <summary>
            获得/设置 是否显示全屏按钮 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ShowContextMenuFullScreen">
            <summary>
            Gets or sets whether show the full screen button on context menu. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.OnCloseTabItemAsync">
            <summary>
            关闭标签页回调方法
            </summary>
            <remarks>返回 false 时不关 <see cref="T:BootstrapBlazor.Components.TabItem"/> 标签页</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ShowExtendButtons">
            <summary>
            获得/设置 是否显示扩展功能按钮 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ShowNavigatorButtons">
            <summary>
            获得/设置 是否显示前后导航按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.IsLoopSwitchTabItem">
            <summary>
            Gets or sets whether auto reset tab item index. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ShowActiveBar">
            <summary>
            获得/设置 是否显示活动标签 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ClickTabToNavigation">
            <summary>
            获得/设置 点击 TabItem 时是否自动导航 默认为 false 不导航
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ChildContent">
            <summary>
            获得/设置 TabItems 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.NotAuthorized">
            <summary>
            获得/设置 NotAuthorized 模板 默认 null NET6.0/7.0 有效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.NotFound">
            <summary>
            获得/设置 NotFound 模板 默认 null NET6.0/7.0 有效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.NotFoundTabText">
            <summary>
            获得/设置 NotFound 标签文本 默认 null NET6.0/7.0 有效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.Body">
            <summary>
            获得/设置 TabItems 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.AdditionalAssemblies">
            <summary>
            获得/设置 Gets or sets a collection of additional assemblies that should be searched for components that can match URIs.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ExcludeUrls">
            <summary>
            获得/设置 排除地址支持通配符
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.DefaultUrl">
            <summary>
            获得/设置 默认标签页 关闭所有标签页时自动打开此地址 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.OnClickTabItemAsync">
            <summary>
            获得/设置 点击 TabItem 时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.CloseCurrentTabText">
            <summary>
            获得/设置 关闭当前 TabItem 菜单文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.CloseAllTabsText">
            <summary>
            获得/设置 关闭所有 TabItem 菜单文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.CloseOtherTabsText">
            <summary>
            获得/设置 关闭其他 TabItem 菜单文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ButtonTemplate">
            <summary>
            获得/设置 按钮模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ToolbarTemplate">
            <summary>
            Gets or sets the template of the toolbar button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.BeforeNavigatorTemplate">
            <summary>
            获得/设置 标签页前置模板 默认 null
            <para>在向前移动标签页按钮前</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.AfterNavigatorTemplate">
            <summary>
            获得/设置 标签页后置模板 默认 null
            <para>在向后移动标签页按钮前</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.PreviousIcon">
            <summary>
            获得/设置 上一个标签图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.NextIcon">
            <summary>
            获得/设置 下一个标签图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.DropdownIcon">
            <summary>
            获得/设置 下拉菜单标签图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.CloseIcon">
            <summary>
            获得/设置 关闭标签图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.Menus">
            <summary>
            获得/设置 导航菜单集合 默认 null
            </summary>
            <remarks>使用自定义布局时，需要 Tab 导航标签显示为菜单项时设置，已内置 <see cref="P:BootstrapBlazor.Components.Layout.Menus"/> 默认 null</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.AllowDrag">
            <summary>
            获得/设置 是否允许拖放标题栏更改栏位顺序，默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.OnDragItemEndAsync">
            <summary>
            获得/设置 拖动标签页结束回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.TabStyle">
            <summary>
            Gets or sets the tab style. Default is <see cref="F:BootstrapBlazor.Components.TabStyle.Default"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ShowToolbar">
            <summary>
            Gets or sets whether show the toolbar. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ShowFullscreenToolbarButton">
            <summary>
            Gets or sets whether show the full screen button. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.FullscreenToolbarButtonIcon">
            <summary>
            Gets or sets the full screen toolbar button icon string. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.FullscreenToolbarTooltipText">
            <summary>
            Gets or sets the full screen toolbar button tooltip string. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ShowRefreshToolbarButton">
            <summary>
            Gets or sets whether show the full screen button. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.RefreshToolbarButtonIcon">
            <summary>
            Gets or sets the refresh toolbar button icon string. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.RefreshToolbarTooltipText">
            <summary>
            Gets or sets the refresh toolbar button tooltip string. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.OnToolbarRefreshCallback">
            <summary>
            Gets or sets the refresh toolbar button click event callback. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.PrevTabNavLinkTooltipText">
            <summary>
            Gets or sets the previous tab navigation link tooltip text. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.NextTabNavLinkTooltipText">
            <summary>
            Gets or sets the next tab navigation link tooltip text. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.CloseTabNavLinkTooltipText">
            <summary>
            Gets or sets the close tab navigation link tooltip text. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ShowContextMenu">
            <summary>
            Gets or sets whether enable tab context menu. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.BeforeContextMenuTemplate">
            <summary>
            Gets or sets the template of before context menu. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ContextMenuTemplate">
            <summary>
            Gets or sets the template of context menu. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ContextMenuRefreshIcon">
            <summary>
            Gets or sets the icon of tab item context menu refresh button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ContextMenuCloseIcon">
            <summary>
            Gets or sets the icon of tab item context menu close button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ContextMenuCloseOtherIcon">
            <summary>
            Gets or sets the icon of tab item context menu close other button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ContextMenuCloseAllIcon">
            <summary>
            Gets or sets the icon of tab item context menu close all button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ContextMenuFullScreenIcon">
            <summary>
            Gets or sets the icon of tab item context menu full screen button. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.OnBeforeShowContextMenu">
            <summary>
            Gets or sets before popup context menu callback. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.TabHeader">
            <summary>
            Gets or sets the <see cref="T:BootstrapBlazor.Components.ITabHeader"/> instance. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.EnableErrorLogger">
            <summary>
            获得/设置 是否开启全局异常捕获 默认 null 读取配置文件 EnableErrorLogger 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tab.ErrorLoggerToastTitle">
            <summary>
            获得/设置 错误日志 <see cref="T:BootstrapBlazor.Components.Toast"/> 弹窗标题 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.OnClickTabItem(BootstrapBlazor.Components.TabItem)">
            <summary>
            点击 TabItem 时回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.ClickPrevTab">
            <summary>
            切换到上一个标签方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.ClickNextTab">
            <summary>
            切换到下一个标签方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.CloseCurrentTab">
            <summary>
            关闭当前标签页方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.CloseAllTabs">
            <summary>
            关闭所有标签页方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.CloseOtherTabs">
            <summary>
            关闭其他标签页方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.AddItem(BootstrapBlazor.Components.TabItem)">
            <summary>
            添加 TabItem 方法 由 TabItem 方法加载时调用
            </summary>
            <param name="item">TabItemBase 实例</param>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.AddTab(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            通过 Url 添加 TabItem 标签方法
            </summary>
            <param name="url"></param>
            <param name="text"></param>
            <param name="icon"></param>
            <param name="active"></param>
            <param name="closable"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.AddTab(System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{System.Int32})">
            <summary>
            添加 TabItem 方法
            </summary>
            <param name="parameters"></param>
            <param name="index"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.RemoveTab(BootstrapBlazor.Components.TabItem)">
            <summary>
            移除 TabItem 方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.ActiveTab(BootstrapBlazor.Components.TabItem)">
            <summary>
            设置指定 TabItem 为激活状态
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.ActiveTab(System.Int32)">
            <summary>
            设置指定 TabItem 为激活状态
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.GetActiveTab">
            <summary>
            获得当前活动 Tab
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.SetDisabledItem(BootstrapBlazor.Components.TabItem,System.Boolean)">
            <summary>
            设置 TabItem 禁用状态
            </summary>
            <param name="item"></param>
            <param name="disabled"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.DragItemCallback(System.Int32,System.Int32)">
            <summary>
            拖动 TabItem 回调方法有 JS 调用
            </summary>
            <param name="originIndex"></param>
            <param name="currentIndex"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.Refresh(BootstrapBlazor.Components.TabItem)">
            <summary>
            Refresh the tab item method
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.SetTabHeader(BootstrapBlazor.Components.ITabHeader)">
            <summary>
            Sets the <see cref="T:BootstrapBlazor.Components.ITabHeader"/> instance.
            </summary>
            <param name="tabHeader"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Tab.DisposeAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TabItem">
            <summary>
            TabItem component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.Text">
            <summary>
            Gets or sets the text. Default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.HeaderTemplate">
            <summary>
            Gets or sets the TabItem Header template. Default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.Url">
            <summary>
            Gets or sets the request URL. Default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.IsActive">
            <summary>
            Gets or sets whether the current state is active. Default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.IsDisabled">
            <summary>
            Gets or sets whether the current state is disabled, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.Closable">
            <summary>
            Gets or sets whether the current TabItem is closable, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.AlwaysLoad">
            <summary>
            Gets or sets whether the current TabItem is always loaded, this parameter is used to set <see cref="P:BootstrapBlazor.Components.Tab.IsLazyLoadTabItem"/>, default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.CssClass">
            <summary>
            Gets or sets the custom CSS class. Default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.Icon">
            <summary>
            Gets or sets the icon string. Default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.ShowFullScreen">
            <summary>
            Gets or sets whether to show the full screen button, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.ChildContent">
            <summary>
            Gets or sets the component content. Default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItem.TabSet">
            <summary>
            Gets or sets the associated Tab instance
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItem.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItem.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItem.SetActive(System.Boolean)">
            <summary>
            Method to set whether it is active
            </summary>
            <param name="active"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItem.SetDisabled(System.Boolean)">
            <summary>
            Method to set whether it is disabled
            </summary>
            <param name="disabled"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItem.SetDisabledWithoutRender(System.Boolean)">
            <summary>
            Method to set whether it is disabled without rendering
            </summary>
            <param name="disabled"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItem.SetHeader(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Method to reset the tab text and other parameters
            </summary>
            <param name="text"></param>
            <param name="icon"></param>
            <param name="closable"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItem.Create(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Gets a TabItem instance by specifying a set of parameters
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItemContent.Item">
            <summary>
            Gets or sets the component content. Default is null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItemContent.Render">
            <summary>
            Render method
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItemContent.HandlerException(System.Exception,Microsoft.AspNetCore.Components.RenderFragment{System.Exception})">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="ex"></param>
            <param name="errorContent"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItemContent.Dispose">
            <summary>
            IDispose 方法用于释放资源
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TabLink">
            <summary>
            Represents a link within a tab component.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabLink.Text">
            <summary>
            Gets or sets the text of the link. Default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabLink.Url">
            <summary>
            Gets or sets the URL of the link. Default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabLink.Icon">
            <summary>
            Gets or sets the icon of the link. Default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabLink.Closable">
            <summary>
            Gets or sets a value indicating whether the tab item is closable. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabLink.OnClick">
            <summary>
            Gets or sets the callback method when the link is clicked. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabLink.ChildContent">
            <summary>
            Gets or sets the content of the component. Default is null
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TabToolbarButton">
            <summary>
            TabToolbarButton component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabToolbarButton.Icon">
            <summary>
            Gets or sets the button icon string. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabToolbarButton.OnClickAsync">
            <summary>
            Gets or sets the button click event handler. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabToolbarButton.TooltipText">
            <summary>
            Gets or sets the tooltip text. Default is null.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ColumnVisibleItem">
            <summary>
            Table 组件列可见性类
            </summary>
            <param name="name"></param>
            <param name="visible"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ColumnVisibleItem.#ctor(System.String,System.Boolean)">
            <summary>
            Table 组件列可见性类
            </summary>
            <param name="name"></param>
            <param name="visible"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.ColumnVisibleItem.Name">
            <summary>
            获得 列名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ColumnVisibleItem.DisplayName">
            <summary>
            获得 列名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ColumnVisibleItem.Visible">
            <summary>
            获得 列可见性
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ColumnWidth">
            <summary>
            列宽设置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ColumnWidth.Name">
            <summary>
            获得/设置 列名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ColumnWidth.Width">
            <summary>
            获得/设置 列宽
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IColumnCollection">
            <summary>
            列集合接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IColumnCollection.Columns">
            <summary>
            获得 ITableColumn 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.SkipValidate">
            <summary>
            获得/设置 是否不进行验证 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Ignore">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Readonly">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.IsReadonlyWhenAdd">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.IsReadonlyWhenEdit">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Visible">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.IsVisibleWhenAdd">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.IsVisibleWhenEdit">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Required">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.IsRequiredWhenAdd">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.IsRequiredWhenEdit">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.RequiredErrorMessage">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.ShowLabelTooltip">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.CssClass">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.ShownWithBreakPoint">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Template">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.SearchTemplate">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.FilterTemplate">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.HeaderTemplate">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.ToolboxTemplate">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Filter">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.FormatString">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.PlaceHolder">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Formatter">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Align">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.ShowTips">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.GetTooltipTextCallback">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.PropertyType">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Editable">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Step">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Rows">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Cols">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Text">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.ComponentType">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.ComponentParameters">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Items">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Order">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.Lookup">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.ShowSearchWhenSelect">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.IsFixedSearchWhenSelect">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.IsPopover">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.LookupStringComparison">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.LookupServiceKey">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.LookupServiceData">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.LookupService">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.OnCellRender">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.ValidateRules">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.GroupName">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.GroupOrder">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.ShowCopyColumn">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.HeaderTextWrap">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.ShowHeaderTooltip">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.HeaderTextTooltip">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.HeaderTextEllipsis">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.IsMarkupString">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.InternalTableColumn.GetDisplayName">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.InternalTableColumn.GetFieldName">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.CustomSearch">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InternalTableColumn.IgnoreWhenExport">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITable">
            <summary>
            ITable 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITable.GetVisibleColumns">
            <summary>
            获得 ITable 实例配置的可见列集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITable.Filters">
            <summary>
            获得 过滤条件集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITable.OnFilterAsync">
            <summary>
            获得 过滤异步回调方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITableCellButton">
            <summary>
            ITableCellButton 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableCellButton.AutoSelectedRowWhenClick">
            <summary>
            获得/设置 点击按钮是否选中正行 默认 true 选中
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableCellButton.AutoRenderTableWhenClick">
            <summary>
            获得/设置 点击按钮是否重新渲染 Table 组件 默认 false 不重新渲染
            设置 true 时会调用 <see cref="M:BootstrapBlazor.Components.Table`1.QueryAsync(System.Nullable{System.Int32})"/> 方法，触发 <see cref="P:BootstrapBlazor.Components.Table`1.OnQueryAsync"/> 回调
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITableCellComponent">
            <summary>
            ITableCellComponent 单元格组件接口
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITableColumn">
            <summary>
            ITableHeader interface
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.IgnoreWhenExport">
            <summary>
            Gets or sets whether the current item is ignored when export operation. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Sortable">
            <summary>
            Gets or sets whether sorting is allowed. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.DefaultSort">
            <summary>
            Gets or sets whether it is the default sort column. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.DefaultSortOrder">
            <summary>
            Gets or sets the default sort order. Default is SortOrder.Unset.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Filterable">
            <summary>
            Gets or sets whether data filtering is allowed. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Searchable">
            <summary>
            Gets or sets whether the column participates in search. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Width">
            <summary>
            Gets or sets the column width.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Fixed">
            <summary>
            Gets or sets whether the column is fixed. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.TextWrap">
            <summary>
            Gets or sets whether text wrapping is allowed in this column. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.TextEllipsis">
            <summary>
            Gets or sets whether text overflow is ellipsis in this column. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.HeaderTextWrap">
            <summary>
            Gets or sets whether the header text is allowed to wrap. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.ShowHeaderTooltip">
            <summary>
            Gets or sets whether the header shows a tooltip. Default is false. Can be used with <see cref="P:BootstrapBlazor.Components.ITableColumn.HeaderTextEllipsis"/>. This parameter is not effective when <see cref="P:BootstrapBlazor.Components.ITableColumn.HeaderTextWrap"/> is set to true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.HeaderTextTooltip">
            <summary>
            Gets or sets the header tooltip content.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.HeaderTextEllipsis">
            <summary>
            Gets or sets whether the header text is truncated when overflowing. Default is false. Can be used with <see cref="P:BootstrapBlazor.Components.ITableColumn.HeaderTextTooltip"/>. This parameter is not effective when <see cref="P:BootstrapBlazor.Components.ITableColumn.HeaderTextWrap"/> is set to true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.CssClass">
            <summary>
            Gets or sets the custom CSS class for the column td. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.ShownWithBreakPoint">
            <summary>
            Gets or sets the breakpoint at which the column is shown. Default is BreakPoint.None.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.ShowCopyColumn">
            <summary>
            Gets or sets whether the column can be copied. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Template">
            <summary>
            Gets or sets the display template.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.SearchTemplate">
            <summary>
            Gets or sets the search template.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.FilterTemplate">
            <summary>
            Gets or sets the filter template.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.HeaderTemplate">
            <summary>
            Gets or sets the header template.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.ToolboxTemplate">
            <summary>
            Gets or sets the toolbox template. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Filter">
            <summary>
            Gets or sets the column filter.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.FormatString">
            <summary>
            Gets or sets the format string, such as "yyyy-MM-dd" for date types.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Formatter">
            <summary>
            Gets or sets the column format callback delegate <see cref="T:BootstrapBlazor.Components.TableColumnContext`2"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Align">
            <summary>
            Gets or sets the text alignment. Default is null, using Alignment.None.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.ShowTips">
            <summary>
            Gets or sets whether to show tooltips on mouse hover. Default is null, using false value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.GetTooltipTextCallback">
            <summary>
            Gets or sets the custom tooltip content callback delegate. Default is null, using the current value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.OnCellRender">
            <summary>
            Gets or sets the cell render callback method.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.IsMarkupString">
            <summary>
            Gets or sets whether the column is a MarkupString. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.IsRequiredWhenAdd">
            <summary>
            Gets or sets whether the column is required when adding a new item. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.IsRequiredWhenEdit">
            <summary>
            Gets or sets whether the column is required when editing an item. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.IsReadonlyWhenAdd">
            <summary>
            Gets or sets whether the column is read-only when adding a new item. Default is null, using the <see cref="P:BootstrapBlazor.Components.IEditorItem.Readonly"/> value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.IsReadonlyWhenEdit">
            <summary>
            Gets or sets whether the column is read-only when editing an item. Default is null, using the <see cref="P:BootstrapBlazor.Components.IEditorItem.Readonly"/> value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.Visible">
            <summary>
            Gets or sets whether the current edit item is visible. Default is null, using true value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.IsVisibleWhenAdd">
            <summary>
            Gets or sets whether the column is visible when adding a new item. Default is null, using the <see cref="P:BootstrapBlazor.Components.ITableColumn.Visible"/> value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.IsVisibleWhenEdit">
            <summary>
            Gets or sets whether the column is visible when editing an item. Default is null, using the <see cref="P:BootstrapBlazor.Components.ITableColumn.Visible"/> value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableColumn.CustomSearch">
            <summary>
            Gets or sets the custom search logic.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITableEditDialogOption`1">
            <summary>
            Table 编辑配置接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.IsTracking">
            <summary>
            获得/设置 组件是否采用 Tracking 模式对编辑项进行直接更新 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.ShowLabel">
            <summary>
            获得/设置 是否显示标签 默认为 true 显示标签
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.ItemChangedType">
            <summary>
            获得/设置 实体类编辑模式 Add 还是 Update
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.ItemsPerRow">
            <summary>
            获得/设置 每行显示组件数量 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.RowType">
            <summary>
            获得/设置 设置行内组件布局格式 默认 Row 布局
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.LabelAlign">
            <summary>
            获得/设置 设置 <see cref="P:BootstrapBlazor.Components.ITableEditDialogOption`1.RowType" /> Inline 模式下标签对齐方式 默认 None 等效于 Left 左对齐
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.ShowLoading">
            <summary>
            获得/设置 查询时是否显示正在加载中动画 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.ShowUnsetGroupItemsOnTop">
            <summary>
            获得/设置 未分组编辑项布局位置 默认 false 在尾部
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.Model">
            <summary>
            获得/设置 编辑框模型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.DisableAutoSubmitFormByEnter">
            <summary>
            获得/设置 是否禁用表单内回车自动提交功能 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.SaveButtonText">
            <summary>
            获得/设置 保存按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.SaveButtonIcon">
            <summary>
            获得/设置 保存按钮图标 默认 null 使用当前主题图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.CloseButtonText">
            <summary>
            获得/设置 关闭按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.CloseButtonIcon">
            <summary>
            获得/设置 关闭按钮图标 默认 null 使用当前主题图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.Items">
            <summary>
            获得 编辑项集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.OnEditAsync">
            <summary>
            获得/设置 保存回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.OnCloseAsync">
            <summary>
            获得/设置 关闭弹窗回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.DialogBodyTemplate">
            <summary>
            获得/设置 EditDialog Body 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableEditDialogOption`1.DialogFooterTemplate">
            <summary>
            获得/设置 EditDialog Footer 模板
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITableExportContext`1">
            <summary>
            Table 导出数据上下文接口
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableExportContext`1.Columns">
            <summary>
            获得 Table 实例所有列集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableExportContext`1.Rows">
            <summary>
            获得 当前 行数据集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExportContext`1.BuildQueryPageOptions">
            <summary>
            获得 当前 Table 内置查询条件方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExportContext`1.ExportAsync">
            <summary>
            获得 当前 Table 内置 ExportAsync 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExportContext`1.GetVisibleColumns">
            <summary>
            获得 当前 Table 显示列集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ITableExportDataContext`1">
            <summary>
            Table 导出数据上下文接口
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableExportDataContext`1.ExportType">
            <summary>
            获得 导出类型 <see cref="T:BootstrapBlazor.Components.TableExportType"/> 枚举类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableExportDataContext`1.Rows">
            <summary>
            获得 当前 行数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableExportDataContext`1.Columns">
            <summary>
            获得 当前表格可见列集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableExportDataContext`1.Options">
            <summary>
            获得 当前 Table 内置查询条件方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITableSearchModel">
            <summary>
            Table 组件自定义搜索模型接口定义
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableSearchModel.GetSearchs">
            <summary>
            获得 搜索集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableSearchModel.GetSearches">
            <summary>
            获得 搜索集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableSearchModel.Reset">
            <summary>
            重置操作
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITableToolbarButton`1">
            <summary>
            ITableToolbarButton 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableToolbarButton`1.IsEnableWhenSelectedOneRow">
            <summary>
            获得/设置 选中一行时启用按钮 默认 false 均可用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITableToolbarButton`1.IsDisabledCallback">
            <summary>
            获得/设置 按钮是否被禁用回调方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ItemChangedType">
            <summary>
            数据变化类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ItemChangedType.Add">
            <summary>
            新建
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ItemChangedType.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IToolbarComponent">
            <summary>
            工具栏按钮接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IToolbarComponent.IsShow">
            <summary>
            获得/设置 是否显示 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LookupContent.Lookup">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LookupContent.LookupService">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LookupContent.LookupServiceKey">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LookupContent.LookupServiceData">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LookupContent.LookupStringComparison">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.LookupContent.Value">
            <summary>
            获得/设置 显示值
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.LookupContent.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.LookupContent.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Table`1">
            <summary>
            Table 组件基类
            </summary>
            <summary>
            
            </summary>
            <typeparam name="TItem"></typeparam>
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CheckboxDisplayTextString">
            <summary>
            获得 选择列显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.HeaderClass">
            <summary>
            获得 thead 样式表集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsKeepSelectedRows">
            <summary>
            获得/设置 是否保持选择行，默认为 false 不保持
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsKeepSelectedRowAfterAdd">
            <summary>
            获得/设置 新建数据是否保持原选择行，默认为 false 不保持
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.HeaderCheckState">
            <summary>
            获得 表头行是否选中状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.RowCheckState(`0)">
            <summary>
            获得 当前行是否被选中
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsMultipleSelect">
            <summary>
            获得/设置 是否为多选模式 默认为 false
            </summary>
            <remarks>此参数在 <see cref="P:BootstrapBlazor.Components.Table`1.IsExcel"/> 模式下为 true</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowCheckboxText">
            <summary>
            获得/设置 是否显示选择框文字 默认为 false
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CheckboxDisplayText">
            <summary>
            获得/设置 显示选择框文字 默认为 选择
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowRowCheckboxCallback">
            <summary>
            获得/设置 表格行是否显示选择框 默认全部显示 此属性在 <see cref="P:BootstrapBlazor.Components.Table`1.IsMultipleSelect"/> 参数为 true 时生效
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnHeaderCheck(BootstrapBlazor.Components.CheckboxState,`0)">
            <summary>
            点击 Header 选择复选框时触发此方法
            </summary>
            <param name="state"></param>
            <param name="val"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnCheck(BootstrapBlazor.Components.CheckboxState,`0)">
            <summary>
            点击选择复选框时触发此方法
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Table`1._resetColumns">
            <summary>
            是否重置列变量 <see cref="M:BootstrapBlazor.Components.Table`1.OnAfterRenderAsync(System.Boolean)"/> 方法中重置为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnColumnVisibleChanged">
            <summary>
            获得/设置 列改变显示状态回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AutoSearchOnInput">
            <summary>
            Gets or sets a value indicating whether automatic search functionality is enabled. Default value is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.NotSupportedColumnFilterMessage">
            <summary>
            获得/设置 不支持过滤类型提示信息 默认 null 读取资源文件内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.LoadingTemplate">
            <summary>
            获得/设置 Loading 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ColumnToolboxIcon">
            <summary>
            获得/设置 列工具栏图标 fa-solid fa-gear
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DefaultFixedColumnWidth">
            <summary>
            获得/设置 默认固定列宽度 默认 200 单位 px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Table`1._virtualizeElement">
            <summary>
            获得/设置 内置虚拟化组件实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ClassName">
            <summary>
            获得 Table 组件样式表
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableClassName">
            <summary>
            获得 Table 组件样式表
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.WrapperClassName">
            <summary>
            获得 wrapper 样式表集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetRowClassString(`0,System.String)">
            <summary>
            获得 Body 内行样式
            </summary>
            <param name="item"></param>
            <param name="css"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetDetailBarClassString(`0)">
            <summary>
            明细行首小图标单元格样式
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetDetailRowClassString(`0)">
            <summary>
            获得明细行样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetDetailCaretClassString(`0)">
            <summary>
            获得明细行小图标样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ScrollWidth">
            <summary>
            获得/设置 滚动条宽度 默认 null 未设置使用 <see cref="T:BootstrapBlazor.Components.ScrollOptions"/> 配置类中的 <see cref="P:BootstrapBlazor.Components.ScrollOptions.ScrollWidth"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ScrollHoverWidth">
            <summary>
            获得/设置 滚动条 hover 状态下宽度 默认 null 未设置使用 <see cref="T:BootstrapBlazor.Components.ScrollOptions"/> 配置类中的 <see cref="P:BootstrapBlazor.Components.ScrollOptions.ScrollHoverWidth"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ColumnWidthTooltipPrefix">
            <summary>
            获得/设置 列调整提示前缀文字 默认 null 未设置使用资源文件中文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowColumnWidthTooltip">
            <summary>
            获得/设置 是否显示列宽提示信息，默认 false 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.Height">
            <summary>
            获得/设置 Table 高度 默认为 null
            </summary>
            <remarks>开启固定表头功能时生效 <see cref="P:BootstrapBlazor.Components.Table`1.IsFixedHeader"/></remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsFixedHeader">
            <summary>
            获得/设置 固定表头 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsFixedFooter">
            <summary>
            获得/设置 固定 Footer 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.MultiHeaderTemplate">
            <summary>
            获得/设置 多表头模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CopyColumnTooltipText">
            <summary>
            获得/设置 列拷贝 Tooltip 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CopyColumnCopiedTooltipText">
            <summary>
            获得/设置 列拷贝完毕后 Tooltip 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowCopyColumnTooltip">
            <summary>
            获得/设置 CopyColumn Tooltip 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExpandRows">
            <summary>
            明细行集合用于数据懒加载
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsExcel">
            <summary>
            获得/设置 组件工作模式为 Excel 模式 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EnableKeyboardNavigationCell">
            <summary>
            获得/设置 是否启用 Excel 模式下的键盘导航功能 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsDetails">
            <summary>
            获得/设置 是否显示明细行 默认为 null 为空时使用 <see cref="P:BootstrapBlazor.Components.Table`1.DetailRowTemplate" /> 进行逻辑判断
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsHideFooterWhenNoData">
            <summary>
            获得/设置 无数据时是否隐藏表格 Footer 默认为 false 不隐藏
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialogItemsPerRow">
            <summary>
            获得/设置 每行显示组件数量 默认为 2
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialogRowType">
            <summary>
            获得/设置 设置行内组件布局格式 默认 Inline 布局
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialogLabelAlign">
            <summary>
            获得/设置 设置 <see cref="P:BootstrapBlazor.Components.Table`1.EditDialogRowType" /> Inline 模式下标签对齐方式 默认 None 等效于 Left 左对齐
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DisableAutoSubmitFormByEnter">
            <summary>
            获得/设置 是否禁用表单内回车自动提交功能 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DetailColumnWidth">
            <summary>
            获得/设置 明细行 Row Header 宽度 默认 24
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowCheckboxTextColumnWidth">
            <summary>
            获得/设置 显示文字的复选框列宽度 默认 80
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CheckboxColumnWidth">
            <summary>
            获得/设置 复选框宽度 默认 36
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.LineNoColumnWidth">
            <summary>
            获得/设置 行号列宽度 默认 60
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.LineNoColumnAlignment">
            <summary>
            获得/设置 行号内容位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnBeforeRenderRow">
            <summary>
            获得/设置 呈现每行之前的回调
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnAfterRenderCallback">
            <summary>
            获得/设置 Table 组件渲染完毕回调
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AutoScrollLastSelectedRowToView">
            <summary>
            获得/设置 是否自动将选中行滚动到可视区域 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AutoScrollVerticalAlign">
            <summary>
            获得/设置 选中行滚动到可视区域对齐方式 默认 ScrollToViewAlign.Center
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnDoubleClickCellCallback">
            <summary>
            获得/设置 双击单元格回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnToggleDetailRowCallback">
            <summary>
            获得/设置 展开收起明细行回调方法 第二个参数 true 时表示展开 false 时表示收起
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsPopoverToolbarDropdownButton">
            <summary>
            获得/设置 工具栏下拉框按钮是否 IsPopover 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ScrollMode">
            <summary>
            获得/设置 数据滚动模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.RowHeight">
            <summary>
            获得/设置 虚拟滚动行高 默认为 38
            </summary>
            <remarks>需要设置 <see cref="P:BootstrapBlazor.Components.Table`1.ScrollMode"/> 值为 Virtual 时生效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OverscanCount">
            <summary>
            Gets or sets the overscan count for virtual scrolling. Default is 10.
            </summary>
            <remarks>Effective when <see cref="P:BootstrapBlazor.Components.Table`1.ScrollMode"/> is set to <see cref="F:BootstrapBlazor.Components.ScrollMode.Virtual"/>.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsTracking">
            <summary>
            获得/设置 组件是否采用 Tracking 模式对编辑项进行直接更新 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsAccordion">
            <summary>
            获得/设置 明细行手风琴效果 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ColumnMinWidth">
            <summary>
            获得/设置 列最小宽度 默认 null 未设置 可通过 <see cref="P:BootstrapBlazor.Components.TableSettings.ColumnMinWidth"/> 统一设置
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ExpandDetailRow(`0)">
            <summary>
            明细行功能中切换行状态时调用此方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DetailRows">
            <summary>
            明细行集合用于数据懒加载
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.Columns">
            <summary>
            获得 表头集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DetailRowTemplate">
            <summary>
            获得/设置 明细行模板 <see cref="P:BootstrapBlazor.Components.Table`1.IsDetails" />
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.RowTemplate">
            <summary>
            获得/设置 行模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.RowContentTemplate">
            <summary>
            获得/设置 行内容模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableColumns">
            <summary>
            获得/设置 TableHeader 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableFooter">
            <summary>
            获得/设置 TableFooter 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.FooterTemplate">
            <summary>
            获得/设置 Table Footer 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.Items">
            <summary>
            获得/设置 数据集合，适用于无功能仅做数据展示使用，高级功能时请使用 <see cref="P:BootstrapBlazor.Components.Table`1.OnQueryAsync"/> 回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ItemsChanged">
            <summary>
            获得/设置 数据集合回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableSize">
            <summary>
            获得/设置 表格组件大小 默认为 Normal 正常模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EmptyTemplate">
            <summary>
            获得/设置 无数据时显示模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EmptyText">
            <summary>
            获得/设置 无数据时显示文本 默认取资源文件 英文 NoData 中文 无数据
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EmptyImage">
            <summary>
            获得/设置 无数据时显示图片路径 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowEmpty">
            <summary>
            获得/设置 是否显示无数据空记录 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowFilterHeader">
            <summary>
            获得/设置 是否显示过滤表头 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowMultiFilterHeader">
            <summary>
            获得/设置 是否显示过滤表头 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowFooter">
            <summary>
            获得/设置 是否显示表脚 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AllowResizing">
            <summary>
            获得/设置 是否允许列宽度调整 默认 false 固定表头时此属性生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.HeaderTextWrap">
            <summary>
            获得/设置 是否表头允许折行 默认 false 不折行 此设置为 true 时覆盖 <see cref="P:BootstrapBlazor.Components.ITableColumn.HeaderTextWrap"/> 参数值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsStriped">
            <summary>
            获得/设置 是否斑马线样式 默认为 false
            </summary>
            <remarks>此参数在 <see cref="P:BootstrapBlazor.Components.Table`1.IsExcel"/> 模式下不生效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsAutoQueryFirstRender">
            <summary>
            获得/设置 首次加载时是否自动查询数据 默认 true <see cref="P:BootstrapBlazor.Components.Table`1.Items"/> 模式下此参数不起作用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsBordered">
            <summary>
            获得/设置 是否带边框样式 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsAutoRefresh">
            <summary>
            获得/设置 是否自动刷新表格 默认为 false
            </summary>
            <remarks>此参数在 <see cref="P:BootstrapBlazor.Components.Table`1.IsExcel"/> 模式下不生效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AutoRefreshInterval">
            <summary>
            获得/设置 自动刷新时间间隔 默认 2000 毫秒
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.HeaderStyle">
            <summary>
            获取/设置 表格 thead 样式 <see cref="T:BootstrapBlazor.Components.TableHeaderStyle"/>，默认为浅色<see cref="F:BootstrapBlazor.Components.TableHeaderStyle.None"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnClickRowCallback">
            <summary>
            获得/设置 单击行回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnDoubleClickRowCallback">
            <summary>
            获得/设置 双击行回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowDetailRow">
            <summary>
            获得/设置 是否显示每行的明细行展开图标
            </summary>
            <remarks>此参数在 <see cref="P:BootstrapBlazor.Components.Table`1.IsExcel"/> 模式下不生效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DynamicContext">
            <summary>
            获得/设置 动态数据上下文实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.UnsetText">
            <summary>
            获得/设置 未设置排序时 tooltip 显示文字 默认点击升序
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SortAscText">
            <summary>
            获得/设置 升序排序时 tooltip 显示文字 默认点击降序
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SortDescText">
            <summary>
            获得/设置 降序排序时 tooltip 显示文字 默认取消排序
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnColumnCreating">
            <summary>
            获得/设置 列创建时回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ColumnOrderCallback">
            <summary>
            获得/设置 自定义列排序规则 默认 null 未设置 使用内部排序机制 1 2 3 0 -3 -2 -1 顺序
            </summary>
            <remarks>如果设置 <see cref="P:BootstrapBlazor.Components.Table`1.AllowDragColumn"/> 并且设置 <see cref="P:BootstrapBlazor.Components.Table`1.ClientTableName"/> 开启客户端持久化后本回调不生效</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CustomKeyAttribute">
            <summary>
            获得/设置 数据主键标识标签 默认为 <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute"/><code><br /></code>用于判断数据主键标签，如果模型未设置主键时可使用 <see cref="P:BootstrapBlazor.Components.Table`1.ModelEqualityComparer"/> 参数自定义判断 <code><br /></code>数据模型支持联合主键
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ModelEqualityComparer">
            <summary>
            获得/设置 比较数据是否相同回调方法 默认为 null
            <para>提供此回调方法时忽略 <see cref="P:BootstrapBlazor.Components.Table`1.CustomKeyAttribute"/> 属性</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.GetAdvancedSearchFilterCallback">
            <summary>
            获得/设置 获得高级搜索条件回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ClientTableName">
            <summary>
            获得/设置 客户端表格名称 默认 null 用于客户端列宽与列顺序持久化功能
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AlignLeftText">
            <summary>
            获得/设置 左对齐显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AlignLeftTooltipText">
            <summary>
            获得/设置左对齐提示信息文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AlignCenterText">
            <summary>
            获得/设置 居中对齐显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AlignCenterTooltipText">
            <summary>
            获得/设置 居中对齐提示信息文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AlignRightText">
            <summary>
            获得/设置 右对齐显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AlignRightTooltipText">
            <summary>
            获得/设置 右对齐提示信息文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DisableAddButtonCallback">
            <summary>
            获得/设置 新建按钮是否禁用回调方法 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DisableDeleteButtonCallback">
            <summary>
            获得/设置 删除按钮是否禁用回调方法 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DisableEditButtonCallback">
            <summary>
            获得/设置 编辑按钮是否禁用回调方法 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsAutoScrollTopWhenClickPage">
            <summary>
            获得/设置 翻页时是否自动滚动到顶部 默认 false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnInitializedAsync">
            <summary>
            OnInitializedAsync 方法
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.FirstRender">
            <summary>
            获得/设置 是否为第一次 Render
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AutoRefreshCancelTokenSource">
            <summary>
            获得/设置 自动刷新 CancellationTokenSource 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            OnAfterRenderAsync 方法
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ResetVisibleColumns(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ColumnVisibleItem})">
            <summary>
            设置 列可见方法
            </summary>
            <param name="columns"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.LoopQueryAsync">
            <summary>
            周期性查询方法
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.QueryItems">
            <summary>
            OnQueryAsync 查询结果数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.Rows">
            <summary>
            获得 当前表格所有 Rows 集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetValue(BootstrapBlazor.Components.ITableColumn,`0)">
            <summary>
            获得 指定单元格数据方法
            </summary>
            <param name="col"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.RenderCell(BootstrapBlazor.Components.ITableColumn,`0,BootstrapBlazor.Components.ItemChangedType)">
            <summary>
            渲染单元格方法
            </summary>
            <param name="col"></param>
            <param name="item"></param>
            <param name="changedType"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.RenderExcelCell(BootstrapBlazor.Components.ITableColumn,`0,BootstrapBlazor.Components.ItemChangedType)">
            <summary>
            渲染 Excel 单元格方法
            </summary>
            <param name="col"></param>
            <param name="item"></param>
            <param name="changedType"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnFilterAsync">
            <summary>
            获得/设置 表头过滤时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.Filters">
            <summary>
            获得 过滤集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ResetFilters">
            <summary>
            Reset all Columns Filter
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ResetSortAsync">
            <summary>
            Reset all Columns Sort
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetEditButtonStatus">
            <summary>
            返回 true 时按钮禁用
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetDeleteButtonStatus">
            <summary>
            返回 true 时按钮禁用
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AllowDragColumn">
            <summary>
            获得/设置 是否允许拖放标题栏更改栏位顺序，默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnDragColumnEndAsync">
            <summary>
            获得/设置 拖动列结束回调方法，默认 null 可存储数据库用于服务器端保持列顺序
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnResizeColumnAsync">
            <summary>
            获得/设置 设置列宽回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnAutoFitContentAsync">
            <summary>
            获得/设置 自动调整列宽回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.DragColumnCallback(System.Int32,System.Int32)">
            <summary>
            重置列方法 由 JavaScript 脚本调用
            </summary>
            <param name="originIndex"></param>
            <param name="currentIndex"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ResizeColumnCallback(System.Int32,System.Single)">
            <summary>
            设置列宽方法 由 JavaScript 脚本调用
            </summary>
            <param name="index"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.AutoFitContentCallback(System.String)">
            <summary>
            列宽自适应回调方法 由 JavaScript 脚本调用
            </summary>
            <param name="fieldName">当前列名称</param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TouchStart">
            <summary>
            是否触摸
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsBusy">
            <summary>
            触摸定时器工作指示
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.DisposeAsync(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditModalTitleString">
            <summary>
            获得/设置 编辑弹窗 Title 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SelectedRows">
            <summary>
            获得/设置 被选中数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SelectedRowsChanged">
            <summary>
            获得/设置 选中行变化回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.InsertRowMode">
            <summary>
            获得/设置 新建行位置枚举 默认为 Last 最后
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsLoading">
            <summary>
            获得/设置 是否正在查询数据
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ActiveRenderMode">
            <summary>
            获得 渲染模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ScreenSize">
            <summary>
            获得/设置 客户端屏幕宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditMode">
            <summary>
            获得/设置 组件编辑模式 默认为弹窗编辑行数据 PopupEditForm
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.RenderMode">
            <summary>
            获得/设置 组件布局方式 默认为 Auto
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.RenderModeResponsiveWidth">
            <summary>
            获得/设置 组件布局自适应切换阈值 默认为 768
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ScrollingDialogContent">
            <summary>
            获得/设置 编辑弹框是否 Body 出现滚动条 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsKeyboard">
            <summary>
            获得/设置 是否支持键盘 ESC 关闭当前弹窗 默认 true 支持
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SetRowClassFormatter">
            <summary>
            获得/设置 行样式格式回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnAfterCancelSaveAsync">
            <summary>
            获得/设置 取消保存后回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnAfterSaveAsync">
            <summary>
            获得/设置 保存后回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnAfterDeleteAsync">
            <summary>
            获得/设置 删除后回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnAfterModifyAsync">
            <summary>
            获得/设置 保存删除后回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditModalTitle">
            <summary>
            获得/设置 编辑数据弹窗 Title
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AddModalTitle">
            <summary>
            获得/设置 新建数据弹窗 Title
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditModel">
            <summary>
            获得/设置 EditModel 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditTemplate">
            <summary>
            获得/设置 EditTemplate 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.BeforeRowButtonTemplate">
            <summary>
            获得/设置 BeforeRowButtonTemplate 实例 此模板生成的按钮默认放置到按钮前面如需放置前面 请查看 <see cref="P:BootstrapBlazor.Components.Table`1.RowButtonTemplate" />
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.RowButtonTemplate">
            <summary>
            获得/设置 RowButtonTemplate 实例 此模板生成的按钮默认放置到按钮后面如需放置前面 请查看 <see cref="P:BootstrapBlazor.Components.Table`1.BeforeRowButtonTemplate" />
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ColumnButtonTemplateHeaderText">
            <summary>
            获得/设置 行内功能按钮列头文本 默认为 操作
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ClickToSelect">
            <summary>
            获得/设置 点击行即选中本行 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DoubleClickToEdit">
            <summary>
            获得/设置 单选模式下双击即编辑本行 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AutoGenerateColumns">
            <summary>
            获得/设置 是否自动生成列信息 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowLoading">
            <summary>
            获得/设置 查询时是否显示正在加载中动画 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DataService">
            <summary>
            获得/设置 数据服务参数 组件采用就近原则 如果提供了 Items > OnQueryAsync > DataService > 全局注入的数据服务 IDataService
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.InjectDataService">
            <summary>
            获得/设置 注入数据服务
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CreateItemCallback">
            <summary>
            获得/设置 新建模型回调方法 默认 null 未设置时使用默认无参构造函数创建
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsAutoInitializeModelProperty">
            <summary>
            Get or sets Whether to automatically initialize model properties default value is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CreateSearchModelCallback">
            <summary>
            获得/设置 新建搜索模型回调方法 默认 null 未设置时先 尝试使用 <see cref="P:BootstrapBlazor.Components.Table`1.CreateItemCallback"/> 回调，再使用默认无参构造函数创建
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ClickRow(`0)">
            <summary>
            单选模式下选择行时调用此方法
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.CheckActive(`0)">
            <summary>
            检查当前行是否被选中方法
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnClickRefreshAsync">
            <summary>
            刷新按钮回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnClickCardView">
            <summary>
            点击 CardView 按钮回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.QueryAsync(System.Nullable{System.Int32})">
            <summary>
            查询按钮调用此方法 参数 pageIndex 默认值 null 保持上次页码 第一页页码为 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ToggleLoading(System.Boolean)">
            <summary>
            显示/隐藏 Loading 遮罩
            </summary>
            <param name="state">true 时显示，false 时隐藏</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.InternalToggleLoading(System.Boolean)">
            <summary>
            显示/隐藏 Loading 遮罩
            </summary>
            <param name="state">true 时显示，false 时隐藏</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.QueryData(System.Boolean)">
            <summary>
            调用 OnQuery 回调方法获得数据源
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.Equals(`0,`0)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.DoubleClickRow(`0)">
            <summary>
            双击行回调此方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ClickBeforeDelete(`0)">
            <summary>
            行尾列按钮点击回调此方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AddButtonText">
            <summary>
            获得/设置 新建按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AddButtonIcon">
            <summary>
            获得/设置 新建按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditButtonText">
            <summary>
            获得/设置 编辑按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditButtonIcon">
            <summary>
            获得/设置 编辑按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.UpdateButtonText">
            <summary>
            获得/设置 更新按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CancelButtonText">
            <summary>
            获得/设置 取消按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CancelButtonIcon">
            <summary>
            获得/设置 取消按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DeleteButtonText">
            <summary>
            获得/设置 删除按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DeleteButtonIcon">
            <summary>
            获得/设置 删除按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CancelDeleteButtonText">
            <summary>
            获得/设置 取消删除按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SaveButtonText">
            <summary>
            获得/设置 保存按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SaveButtonIcon">
            <summary>
            获得/设置 保存按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CloseButtonText">
            <summary>
            获得/设置 保存按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CloseButtonIcon">
            <summary>
            获得/设置 保存按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ConfirmDeleteButtonText">
            <summary>
            获得/设置 确认删除按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ConfirmDeleteContentText">
            <summary>
            获得/设置 确认删除弹窗文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.RefreshButtonText">
            <summary>
            获得/设置 刷新按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.RefreshButtonIcon">
            <summary>
            获得/设置 刷新按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CardViewButtonText">
            <summary>
            获得/设置 视图按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CardViewButtonIcon">
            <summary>
            获得/设置 视图按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ColumnButtonTitleText">
            <summary>
            获得/设置 列显示隐藏按钮提示信息文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ColumnButtonText">
            <summary>
            获得/设置 列按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CopyColumnButtonIcon">
            <summary>
            获得/设置 列拷贝按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExportButtonText">
            <summary>
            获得/设置 导出按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchPlaceholderText">
            <summary>
            获得/设置 搜索栏 Placeholder 文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchButtonText">
            <summary>
            获得/设置 搜索按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchButtonIcon">
            <summary>
            获得/设置 搜索按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchModalTitle">
            <summary>
            获得/设置 搜索弹窗文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchTooltip">
            <summary>
            获得/设置 获得/设置 搜索框提示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ResetSearchButtonText">
            <summary>
            获得/设置 重置按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ResetSearchButtonIcon">
            <summary>
            获得/设置 重置按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AdvanceButtonText">
            <summary>
            获得/设置 高级搜索按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AdvanceButtonIcon">
            <summary>
            获得/设置 高级搜索按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AddButtonToastTitle">
            <summary>
            获得/设置 新增按钮 Toast 提示 Title 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AddButtonToastContent">
            <summary>
            获得/设置 新增按钮 Toast 提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditButtonToastTitle">
            <summary>
            获得/设置 编辑按钮 Toast 提示 Title 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditButtonToastNotSelectContent">
            <summary>
            获得/设置 编辑按钮 Toast 未选择时提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditButtonToastReadonlyContent">
            <summary>
            获得/设置 编辑按钮 Toast 选择项设置不可编辑时提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditButtonToastMoreSelectContent">
            <summary>
            获得/设置 编辑按钮 Toast 多项选择时提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditButtonToastNoSaveMethodContent">
            <summary>
            获得/设置 编辑按钮 Toast 未提供 Save 方法时提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SaveButtonToastTitle">
            <summary>
            获得/设置 保存按钮 Toast 提示 Title 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SaveButtonToastContent">
            <summary>
            获得/设置 保存按钮 Toast 提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SaveButtonToastResultContent">
            <summary>
            获得/设置 保存按钮结果 Toast 提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SuccessText">
            <summary>
            获得/设置 保存成功文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.FailText">
            <summary>
            获得/设置 保存失败
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DeleteButtonToastTitle">
            <summary>
            获得/设置 删除按钮 Toast 提示 Title 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DeleteButtonToastCanNotDeleteContent">
            <summary>
            获得/设置 删除按钮选项中有无法删除项时 Toast 提示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DeleteButtonToastContent">
            <summary>
            获得/设置 删除按钮 Toast 提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DeleteButtonToastResultContent">
            <summary>
            获得/设置 删除按钮结果 Toast 提示 Content 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AdvancedSortButtonText">
            <summary>
            获得/设置 高级排序按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AdvancedSortModalTitle">
            <summary>
            获得/设置 高级排序弹窗文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsPagination">
            <summary>
            获得/设置 是否分页 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.MaxPageLinkCount">
            <summary>
            获得/设置 Page up/down 页码数量 默认 5
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowTopPagination">
            <summary>
            获得/设置 是否在顶端显示分页 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowLineNo">
            <summary>
            获得/设置 是否显示行号列 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.LineNoText">
            <summary>
            获得/设置 行号列标题文字 默认为 行号
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.PageItemsSource">
            <summary>
            获得/设置 每页显示数据数量的外部数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnQueryAsync">
            <summary>
            异步查询回调方法，设置 <see cref="P:BootstrapBlazor.Components.Table`1.Items"/> 后无法触发此回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TotalCount">
            <summary>
            获得/设置 数据总条目
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.PageCount">
            <summary>
            获得/设置 分页页码总数 内置规则 PageCount > 1 时显示分页组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.PageIndex">
            <summary>
            获得/设置 当前页码 默认 1
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.PageItems">
            <summary>
            获得/设置 默认每页数据数量 默认 null 使用 <see cref="P:BootstrapBlazor.Components.Table`1.PageItemsSource"/> 第一个值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowGotoNavigator">
            <summary>
            获得/设置 是否显示 Goto 跳转导航
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.GotoNavigatorLabelText">
            <summary>
            获得/设置 是否显示 Goto 跳转导航文本信息 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.GotoTemplate">
            <summary>
            获得/设置 Goto 导航模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowPageInfo">
            <summary>
            获得/设置 是否显示 PageInfo 内容 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.PageInfoText">
            <summary>
            获得/设置 分页信息文字 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.PageInfoTemplate">
            <summary>
            获得/设置 分页信息模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.PageInfoBodyTemplate">
            <summary>
            获得/设置 分页信息内容模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.StartIndex">
            <summary>
            获得/设置 当前行
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Table`1._pageItems">
            <summary>
            当前每页项目数量设置 默认 null 内部使用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.InternalPageInfoTemplate">
            <summary>
            内部 分页信息模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnPageLinkClick(System.Int32)">
            <summary>
            点击页码调用此方法
            </summary>
            <param name="pageIndex"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnPageItemsValueChanged(System.Int32)">
            <summary>
            每页记录条数变化是调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetPageItemsSource">
            <summary>
            获得 分页数据源
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AdvanceSearchClass">
            <summary>
            获得 高级搜索样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsAdvanceSearch">
            <summary>
            获得/设置 是否已经处理高级搜索 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchTemplate">
            <summary>
            获得/设置 SearchTemplate 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchModel">
            <summary>
            获得/设置 SearchModel 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CustomerSearchModel">
            <summary>
            获得/设置 自定义搜索模型 <see cref="P:BootstrapBlazor.Components.Table`1.CustomerSearchTemplate"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CustomerSearchTemplate">
            <summary>
            获得/设置 自定义搜索模型模板 <see cref="P:BootstrapBlazor.Components.Table`1.CustomerSearchModel"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowSearch">
            <summary>
            获得/设置 是否显示搜索框 默认为 false 不显示搜索框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CollapsedTopSearch">
            <summary>
            获得/设置 是否收缩顶部搜索框 默认为 false 不收缩搜索框 是否显示搜索框请设置 <see cref="P:BootstrapBlazor.Components.Table`1.SearchMode"/> 值 Top
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowSearchText">
            <summary>
            获得/设置 是否显示搜索文本框 默认为 true 显示搜索文本框  <see cref="P:BootstrapBlazor.Components.Table`1.ShowSearch" />
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowSearchTextTooltip">
            <summary>
            获得/设置 是否显示搜索框提示文本 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowResetButton">
            <summary>
            获得/设置 是否显示清空搜索按钮 默认 true 显示 <see cref="P:BootstrapBlazor.Components.Table`1.ShowSearch" />
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowSearchButton">
            <summary>
            获得/设置 是否显示搜索按钮 默认 true 显示 <see cref="P:BootstrapBlazor.Components.Table`1.ShowSearch" />
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowAdvancedSearch">
            <summary>
            获得/设置 是否显示高级搜索按钮 默认 true 显示 <see cref="P:BootstrapBlazor.Components.Table`1.ShowSearch" />
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchText">
            <summary>
            获得/设置 搜索关键字 通过列设置的 Searchable 自动生成搜索拉姆达表达式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchMode">
            <summary>
            获得/设置 搜索栏渲染方式 默认 Popup 弹窗模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchDialogItemsPerRow">
            <summary>
            获得/设置 每行显示组件数量 默认为 2
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchDialogRowType">
            <summary>
            获得/设置 设置行内组件布局格式 默认 Inline 布局
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchDialogLabelAlign">
            <summary>
            获得/设置 设置 <see cref="P:BootstrapBlazor.Components.Table`1.SearchDialogRowType" /> Inline 模式下标签对齐方式 默认 None 等效于 Left 左对齐
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnResetSearchAsync">
            <summary>
            重置搜索按钮异步回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ResetSearchClick">
            <summary>
            重置查询方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.SearchClick">
            <summary>
            查询方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchDialogSize">
            <summary>
            获得/设置 搜索框的大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchDialogIsDraggable">
            <summary>
            获得/设置 搜索框是否可以拖拽 默认 false 不可以拖拽
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SearchDialogShowMaximizeButton">
            <summary>
            获得/设置 搜索框是否显示最大化按钮 默认 true 不显示
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ShowSearchDialog">
            <summary>
            高级查询按钮点击时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetCustomerSearches">
            <summary>
            获得 <see cref="P:BootstrapBlazor.Components.Table`1.CustomerSearchModel"/> 中过滤条件 <see cref="P:BootstrapBlazor.Components.Table`1.SearchTemplate"/> 模板中的条件无法获得
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetAdvanceSearches">
            <summary>
            获得 <see cref="P:BootstrapBlazor.Components.Table`1.SearchModel"/> 中过滤条件
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetSearches">
            <summary>
            通过列集合中的 <see cref="P:BootstrapBlazor.Components.ITableColumn.Searchable"/> 列与 <see cref="P:BootstrapBlazor.Components.Table`1.SearchText"/> 拼装 IFilterAction 集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ClearSearchClick">
            <summary>
            重置搜索按钮调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetSearchColumns">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SortName">
            <summary>
            获得/设置 排序字段名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SortOrder">
            <summary>
            获得/设置 排序方式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SortIconAsc">
            <summary>
            获得/设置 升序图标 fa-solid fa-sort-up
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SortIconDesc">
            <summary>
            获得/设置 降序图标 fa-solid fa-sort-down
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SortIcon">
            <summary>
            获得/设置 默认图标 fa-solid fa-sort
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.FilterIcon">
            <summary>
            获得/设置 过滤图标 默认 fa-solid fa-filter
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.SortString">
            <summary>
            获得/设置 多列排序顺序 默认为空 多列时使用逗号分割 如："Name, Age desc"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnSort">
            <summary>
            获得/设置 点击表头排序时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.InternalOnSortAsync">
            <summary>
            获得/设置 内部表头排序时回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.OnClickHeader(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            点击列进行排序方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetHeaderClassString(BootstrapBlazor.Components.ITableColumn,System.Boolean)">
            <summary>
            获取指定列头样式字符串
            </summary>
            <param name="col"></param>
            <param name="isFilterHeader"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetHeaderCellClassString(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            获得列头单元格样式
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetFixedCellClassString(BootstrapBlazor.Components.ITableColumn,System.String)">
            <summary>
            获得指定列头固定列样式
            </summary>
            <param name="col"></param>
            <param name="cellClass"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.FixedExtendButtonsColumnClassString">
            <summary>
            获得扩展按钮列固定列样式
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExtendButtonsColumnClass">
            <summary>
            获得 按钮列样式表集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetFixedExtendButtonsColumnStyleString(System.Int32)">
            <summary>
            获得扩展按钮列固定列样式
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetCellStyleString(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            获得列单元格 Style 用于设置文本超长溢出
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetFixedCellStyleString(BootstrapBlazor.Components.ITableColumn,System.Int32)">
            <summary>
            获得指定列头固定列样式
            </summary>
            <param name="col"></param>
            <param name="margin"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetHeaderWrapperClassString(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            获取指定列头样式字符串
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetCellClassString(BootstrapBlazor.Components.ITableColumn,System.Boolean,System.Boolean)">
            <summary>
            获得 Cell 文字样式
            </summary>
            <param name="col"></param>
            <param name="hasChildren"></param>
            <param name="inCell"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetIconClassString(System.String)">
            <summary>
            获取指定列头样式字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetColumnToolboxIconClassString">
            <summary>
            获取指定列头样式字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AdvancedSortClass">
            <summary>
            获得 高级排序样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowAdvancedSort">
            <summary>
            获得/设置 是否显示高级排序按钮 默认 false 不显示 />
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AdvancedSortButtonIcon">
            <summary>
            获得/设置 高级排序按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AdvancedSortDialogSize">
            <summary>
            获得/设置 高级排序框的大小 默认 Medium
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AdvancedSortDialogIsDraggable">
            <summary>
            获得/设置 高级排序框是否可以拖拽 默认 false 不可以拖拽
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AdvancedSortDialogShowMaximizeButton">
            <summary>
            获得/设置 高级排序框是否显示最大化按钮 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AdvancedSortItems">
            <summary>
            获得/设置 高级排序，默认为 Empty
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ShowSortDialog">
            <summary>
            高级排序按钮点击时调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetAdvancedSortList">
            <summary>
            获得 <see cref="P:BootstrapBlazor.Components.Table`1.AdvancedSortItems"/> 中过滤条件
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowToolbar">
            <summary>
            获得/设置 是否显示工具栏 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ToolbarTemplate">
            <summary>
            Gets or sets the template of table toolbar. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowSkeleton">
            <summary>
            获得/设置 首次加载是否显示加载骨架屏 默认 false 不显示 使用 <see cref="P:BootstrapBlazor.Components.Table`1.ShowLoadingInFirstRender" /> 参数值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowLoadingInFirstRender">
            <summary>
            获得/设置 首次加载是否显示加载动画 默认 true 显示 设置 <see cref="P:BootstrapBlazor.Components.Table`1.ShowSkeleton"/> 值覆盖此参数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowDefaultButtons">
            <summary>
            获得/设置 是否显示按钮列 默认为 true
            </summary>
            <remarks>本属性设置为 true 新建编辑删除按钮设置为 false 可单独控制每个按钮是否显示</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowAddButton">
            <summary>
            获得/设置 是否显示新建按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowEditButton">
            <summary>
            获得/设置 是否显示编辑按钮 默认为 true 行内是否显示请使用 <see cref="P:BootstrapBlazor.Components.Table`1.ShowExtendEditButton"/> 与 <see cref="P:BootstrapBlazor.Components.Table`1.ShowExtendEditButtonCallback" />
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowDeleteButton">
            <summary>
            获得/设置 是否显示删除按钮 默认为 true 行内是否显示请使用 <see cref="P:BootstrapBlazor.Components.Table`1.ShowExtendDeleteButton"/> 与 <see cref="P:BootstrapBlazor.Components.Table`1.ShowExtendDeleteButtonCallback" />
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowExportButton">
            <summary>
            获得/设置 是否显示导出按钮 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowExportExcelButton">
            <summary>
            获得/设置 是否显示 Excel 导出按钮 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowExportCsvButton">
            <summary>
            获得/设置 是否显示 Csv 导出按钮 默认为 false 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowExportPdfButton">
            <summary>
            获得/设置 是否显示 Pdf 导出按钮 默认为 false 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExportButtonIcon">
            <summary>
            获得/设置 导出按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.CsvExportIcon">
            <summary>
            获得/设置 内置导出 Csv 按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExcelExportIcon">
            <summary>
            获得/设置 内置导出 Excel 按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.PdfExportIcon">
            <summary>
            获得/设置 内置导出 Pdf 按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowToastBeforeExport">
            <summary>
            获得/设置 导出数据前是否弹出 Toast 提示框 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowToastAfterExport">
            <summary>
            获得/设置 导出数据后是否弹出 Toast 提示框 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.BeforeExportCallback">
            <summary>
            获得/设置 导出数据前回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.AfterExportCallback">
            <summary>
            获得/设置 导出数据后回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExportButtonDropdownTemplate">
            <summary>
            获得/设置 导出按钮下拉菜单模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExportCsvDropdownItemText">
            <summary>
            获得/设置 内置导出微软 Csv 按钮文本 默认 null 读取资源文件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExportExcelDropdownItemText">
            <summary>
            获得/设置 内置导出微软 Excel 按钮文本 默认 null 读取资源文件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExportPdfDropdownItemText">
            <summary>
            获得/设置 内置导出 Pdf 按钮文本 默认 null 读取资源文件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowExtendButtons">
            <summary>
            获得/设置 是否显示扩展按钮 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsAutoCollapsedToolbarButton">
            <summary>
            获得/设置 是否自动收缩工具栏按钮 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowColorWhenToolbarButtonsCollapsed">
            <summary>
            获得/设置 工具栏按钮收缩后是否继承原先按钮的颜色样式和中空化 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.GearIcon">
            <summary>
            获得/设置 工具栏移动端按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsExtendButtonsInRowHeader">
            <summary>
            获得/设置 扩展按钮是否在前面 默认 false 在行尾
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExtendButtonColumnWidth">
            <summary>
            获得/设置 行内操作列宽度 默认为 130
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExtendButtonColumnAlignment">
            <summary>
            获得/设置 行内操作列对齐方式 默认 center
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowExtendEditButton">
            <summary>
            获得/设置 是否显示行内扩展编辑按钮 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowExtendEditButtonCallback">
            <summary>
            获得/设置 是否显示行内扩展编辑按钮 默认为 null 未设置时使用 <see cref="P:BootstrapBlazor.Components.Table`1.ShowExtendEditButton"/> 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DisableExtendEditButton">
            <summary>
            获得/设置 是否禁用行内扩展编辑按钮 默认 false 不禁用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DisableExtendEditButtonCallback">
            <summary>
            获得/设置 是否禁用行内扩展编辑按钮 默认为 null 未设置时使用 <see cref="P:BootstrapBlazor.Components.Table`1.DisableExtendEditButton"/> 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DisableExtendDeleteButton">
            <summary>
            获得/设置 是否禁用行内扩展删除按钮 默认 false 不禁用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DisableExtendDeleteButtonCallback">
            <summary>
            获得/设置 是否禁用行内扩展删除按钮 默认为 null 未设置时使用 <see cref="P:BootstrapBlazor.Components.Table`1.DisableExtendDeleteButton"/> 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowEditButtonCallback">
            <summary>
            获得/设置 是否显示行内扩展编辑按钮 默认为 null 未设置时使用 <see cref="P:BootstrapBlazor.Components.Table`1.ShowExtendEditButton"/> 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowExtendDeleteButton">
            <summary>
            获得/设置 是否显示行内扩展删除按钮 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowExtendDeleteButtonCallback">
            <summary>
            获得/设置 是否显示行内扩展删除按钮 默认为 null 未设置时使用 <see cref="P:BootstrapBlazor.Components.Table`1.ShowExtendDeleteButton"/> 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowDeleteButtonCallback">
            <summary>
            获得/设置 是否显示行内扩展删除按钮 默认为 null 未设置时使用 <see cref="P:BootstrapBlazor.Components.Table`1.ShowExtendDeleteButton"/> 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.FixedExtendButtonsColumn">
            <summary>
            获得/设置 是否固定扩展按钮列 默认为 false 不固定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.FixedMultipleColumn">
            <summary>
            获得/设置 是否固定多选列 默认为 false 不固定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.FixedDetailRowHeaderColumn">
            <summary>
            获得/设置 是否固定明细行 Header 列 默认为 false 不固定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.FixedLineNoColumn">
            <summary>
            获得/设置 是否固定 LineNo 列 默认为 false 不固定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowRefresh">
            <summary>
            获得/设置 是否显示刷新按钮 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowCardView">
            <summary>
            获得/设置 是否显示视图按钮 默认为 false <see cref="P:BootstrapBlazor.Components.Table`1.IsExcel"/> 模式下此设置无效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowColumnList">
            <summary>
            获得/设置 是否显示列选择下拉框 默认为 false 不显示 点击下拉框内列控制是否显示后触发 <see cref="P:BootstrapBlazor.Components.Table`1.OnColumnVisibleChanged"/> 回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ColumnListButtonIcon">
            <summary>
            获得/设置 列选择下拉框图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowToastAfterSaveOrDeleteModel">
            <summary>
            获得/设置 保存、删除失败后是否显示 Toast 提示框 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableToolbarBeforeTemplate">
            <summary>
            获得/设置 表格 Toolbar 按钮模板
            <para>表格工具栏左侧按钮模板，模板中内容出现在默认按钮前面</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableToolbarTemplate">
            <summary>
            获得/设置 表格 Toolbar 按钮模板
            <para>表格工具栏左侧按钮模板，模板中内容出现在默认按钮后面</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableExtensionToolbarBeforeTemplate">
            <summary>
            获得/设置 表格 Toolbar 按钮模板
            <para>表格工具栏右侧按钮模板，模板中内容出现在默认按钮前面</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TableExtensionToolbarTemplate">
            <summary>
            获得/设置 表格 Toolbar 按钮模板
            <para>表格工具栏右侧按钮模板，模板中内容出现在默认按钮后面</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnAddAsync">
            <summary>
            获得/设置 新建按钮回调方法 用于补充模型字段值
            </summary>
            <remarks>有些场景下新建模型有些属性字段默认值需要更改为默认业务值，或者该属性数据库中设置不可为空，新建模型默认值为空时，可通过此回调进行属性值补充更新</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnEditAsync">
            <summary>
            获得/设置 编辑按钮回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnSaveAsync">
            <summary>
            获得/设置 保存按钮异步回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnDeleteAsync">
            <summary>
            获得/设置 删除按钮异步回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnExportAsync">
            <summary>
            获得/设置 导出按钮异步回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialogSaveButtonText">
            <summary>
            获得/设置 保存弹窗中的保存按钮显示文本 默认为资源文件中的 保存
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialogSaveButtonIcon">
            <summary>
            获得/设置 保存弹窗中的保存按钮图标 默认 null 使用当前主题图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialogCloseButtonText">
            <summary>
            获得/设置 保存弹窗中的关闭按钮显示文本 默认为资源文件中的 关闭
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialogCloseButtonIcon">
            <summary>
            获得/设置 保存弹窗中的关闭按钮图标 默认 null 使用当前主题图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExportToastTitle">
            <summary>
            获得/设置 导出数据弹窗 Title 默认为资源文件 导出数据
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExportToastContent">
            <summary>
            获得/设置 导出数据提示内容 默认为资源文件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ExportToastInProgressContent">
            <summary>
            获得/设置 正在导出数据提示内容 默认为资源文件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.BeforeShowEditDialogCallback">
            <summary>
            获得/设置 编辑弹窗配置类扩展回调方法 新建/编辑弹窗弹出前回调此方法用于设置弹窗配置信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.Toast">
            <summary>
            ToastService 服务实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DialogService">
            <summary>
            DialogService 服务实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.DrawerService">
            <summary>
            DrawerService 服务实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnBeforeShowDrawer">
            <summary>
            获得/设置 抽屉打开之前回调方法 用于设置 <see cref="T:BootstrapBlazor.Components.DrawerOption"/> 抽屉配置信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.VisibleColumns">
            <summary>
            获得/设置 各列是否显示状态集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetVisibleColumns">
            <summary>
            获得当前可见列集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.AddAsync">
            <summary>
            新建按钮方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.EditAsync">
            <summary>
            编辑按钮方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.CancelSave">
            <summary>
            取消保存方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.SaveModelAsync(Microsoft.AspNetCore.Components.Forms.EditContext,BootstrapBlazor.Components.ItemChangedType)">
            <summary>
            保存数据方法
            </summary>
            <param name="context"></param>
            <param name="changedType"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.SaveAsync(Microsoft.AspNetCore.Components.Forms.EditContext,BootstrapBlazor.Components.ItemChangedType)">
            <summary>
            保存数据
            </summary>
            <param name="context"></param>
            <param name="changedType"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialogSize">
            <summary>
            编辑框的大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialogIsDraggable">
            <summary>
            获得/设置 编辑框是否可以拖拽 默认 false 不可以拖拽
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialogFullScreenSize">
            <summary>
            获得/设置 编辑框 FullScreenSize 参数 默认 none
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialogShowMaximizeButton">
            <summary>
            获得/设置 编辑框是否显示最大化按钮 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.ShowUnsetGroupItemsOnTop">
            <summary>
            获得/设置 未分组编辑项布局位置 默认 false 在尾部
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditFooterTemplate">
            <summary>
            获得/设置 弹窗 Footer
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialogCloseAsync">
            <summary>
            获得/设置 编辑弹窗关闭前回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.EditDialog">
            <summary>
            获得/设置 编辑弹窗 Dialog, 可避免弹窗中 Table 再次弹窗时隐藏原表格问题
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ShowEditDialog(BootstrapBlazor.Components.ItemChangedType)">
            <summary>
            弹出编辑对话框方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ShowEditDrawer(BootstrapBlazor.Components.ItemChangedType)">
            <summary>
            弹出编辑抽屉方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ConfirmDelete">
            <summary>
            确认删除按钮方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.DeleteAsync">
            <summary>
            删除数据方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetExportColumns">
            <summary>
            Gets the export column collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetSelectedRows">
            <summary>
            获取当前 Table 选中的所有行数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetShowExtendEditButton(`0)">
            <summary>
            是否显示行内编辑按钮
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetShowExtendDeleteButton(`0)">
            <summary>
            是否显示行内删除按钮
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsTree">
            <summary>
            获得/设置 是否为树形数据 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TreeNodeConverter">
            <summary>
            获得/设置 生成树状结构回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.OnTreeExpand">
            <summary>
            获得/设置 树形数据节点展开式回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TreeRows">
            <summary>
            获得/设置 树形数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IsLoadChildren">
            <summary>
            获得/设置 是否正在加载子项 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TreeIcon">
            <summary>
            获得/设置 数型结构小箭头图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TreeExpandIcon">
            <summary>
            获得/设置 数型结构展开小箭头图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TreeNodeLoadingIcon">
            <summary>
            获得/设置 数型结构正在加载图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.IndentSize">
            <summary>
            获得/设置 缩进大小 默认为 16 单位 px
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetTreeStyleString(System.Int32)">
            <summary>
            树形数据小箭头缩进
            </summary>
            <param name="degree"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.GetTreeClassString(System.Boolean)">
            <summary>
            树形数据展开小箭头
            </summary>
            <param name="isExpand"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Table`1.TreeNodeCache">
            <summary>
            节点缓存类实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Table`1.ToggleTreeRow(`0)">
            <summary>
            展开收缩树形数据节点方法
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TableAdvancedSortDialog">
            <summary>
            Table 高级排序弹窗的内容组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableAdvancedSortDialog.Value">
            <summary>
            获得/设置 排序列列表 实例值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableAdvancedSortDialog.ValueChanged">
            <summary>
            获得/设置 排序列列表 回调方法 支持双向绑定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableAdvancedSortDialog.Items">
            <summary>
            获得/设置 可排序列的列表
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableAdvancedSortDialog.PlusIcon">
            <summary>
            获得/设置 增加排序条件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableAdvancedSortDialog.RemoveIcon">
            <summary>
            获得/设置 移除排序条件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableAdvancedSortDialog.MinusIcon">
            <summary>
            获得/设置 减少排序条件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableAdvancedSortDialog.SortOrders">
            <summary>
            排序规则列表
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableAdvancedSortDialog.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableAdvancedSortDialog.OnClose(BootstrapBlazor.Components.DialogResult)">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableCellArgs">
            <summary>
            单元格数据类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellArgs.Row">
            <summary>
            获得 当前单元格行数据 请自行转化为绑定模型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellArgs.ColumnName">
            <summary>
            获得 当前单元格绑定列名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellArgs.Colspan">
            <summary>
            获得/设置 合并单元格数量 默认 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellArgs.Class">
            <summary>
            获得/设置 当前单元格样式 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellArgs.Value">
            <summary>
            获得/设置 当前单元格显示内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellArgs.ValueTemplate">
            <summary>
            获得/设置 当前单元格内容模板
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableCellButton">
            <summary>
            单元格内按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellButton.Buttons">
            <summary>
            获得/设置 Table 扩展按钮集合实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellButton.AutoSelectedRowWhenClick">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellButton.AutoRenderTableWhenClick">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellButton.IsShow">
            <summary>
            获得/设置 是否显示 默认 true 显示
            </summary>
            <remarks>一般是通过 context 进行业务判断是否需要显示功能按钮</remarks>
        </member>
        <member name="M:BootstrapBlazor.Components.TableCellButton.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableCellButton.DisposeAsync(System.Boolean)">
            <summary>
            DisposeAsyncCore
            </summary>
            <param name="disposing"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TableCellButtonArgs">
            <summary>
            单元格内按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellButtonArgs.AutoSelectedRowWhenClick">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellButtonArgs.AutoRenderTableWhenClick">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableCellComponent">
            <summary>
            Table 组件单元格自定义组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellComponent.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellComponent.Buttons">
            <summary>
            获得/设置 Table 扩展按钮集合实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellComponent.IsShow">
            <summary>
            获得/设置 是否显示 默认 true 显示
            </summary>
            <remarks>一般是通过 context 进行业务判断是否需要显示功能按钮</remarks>
        </member>
        <member name="M:BootstrapBlazor.Components.TableCellComponent.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableCellComponent.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TableCellComponent.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableCellPopConfirmButton">
            <summary>
            TableCellPopConfirmButton 单元格内按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellPopConfirmButton.Buttons">
            <summary>
            获得/设置 Table 扩展按钮集合实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellPopConfirmButton.AutoSelectedRowWhenClick">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellPopConfirmButton.AutoRenderTableWhenClick">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableCellPopConfirmButton.IsShow">
            <summary>
            获得/设置 是否显示本按钮 默认 true 显示
            </summary>
            <remarks>一般是通过 context 进行业务判断是否需要显示功能按钮</remarks>
        </member>
        <member name="M:BootstrapBlazor.Components.TableCellPopConfirmButton.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableCellPopConfirmButton.DisposeAsync(System.Boolean)">
            <summary>
            DisposeAsyncCore
            </summary>
            <param name="disposing"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TableColumn`2">
            <summary>
            表头组件
            </summary>
            <typeparam name="TItem">模型泛型</typeparam>
            <typeparam name="TType">绑定字段值类型</typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Filter">
            <summary>
            获得/设置 相关过滤器
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.ComponentType">
            <summary>
            获得/设置 组件类型 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.ComponentParameters">
            <summary>
            获得/设置 组件自定义类型参数集合 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.PropertyType">
            <summary>
            获得/设置 绑定列类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Field">
            <summary>
            获得/设置 数据绑定字段值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.FieldExpression">
            <summary>
            获得/设置 ValueExpression 表达式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.IgnoreWhenExport">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Sortable">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.DefaultSort">
            <summary>
            获得/设置 是否为默认排序列 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.TextWrap">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.TextEllipsis">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.ShowLabelTooltip">
            <summary>
            获得/设置 是否显示标签 Tooltip 多用于标签文字过长导致裁减时使用 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.HeaderTextWrap">
            <summary>
            获得/设置 是否表头允许折行 默认 false 不折行
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.ShowHeaderTooltip">
            <summary>
            获得/设置 是否表头显示 Tooltip 默认 false 不显示 可配合 <see cref="P:BootstrapBlazor.Components.TableColumn`2.HeaderTextEllipsis"/> 使用 设置 <see cref="P:BootstrapBlazor.Components.TableColumn`2.HeaderTextWrap"/> 为 true 时本参数不生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.HeaderTextTooltip">
            <summary>
            获得/设置 是否表头 Tooltip 内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.HeaderTextEllipsis">
            <summary>
            获得/设置 是否表头溢出时截断 默认 false 不截断 可配合 <see cref="P:BootstrapBlazor.Components.TableColumn`2.HeaderTextTooltip"/> 使用 设置 <see cref="P:BootstrapBlazor.Components.TableColumn`2.HeaderTextWrap"/> 为 true 时本参数不生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Step">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Rows">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Cols">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.DefaultSortOrder">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Filterable">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Searchable">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Ignore">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Editable">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Readonly">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.IsReadonlyWhenAdd">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.IsReadonlyWhenEdit">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Visible">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.IsVisibleWhenAdd">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.IsVisibleWhenEdit">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Required">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.IsRequiredWhenAdd">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.IsRequiredWhenEdit">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.RequiredErrorMessage">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.CustomSearch">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.SkipValidate">
            <summary>
            获得/设置 是否不进行验证 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Text">
            <summary>
            获得/设置 表头显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.PlaceHolder">
            <summary>
            获得/设置 placeholder 文本 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Width">
            <summary>
            获得/设置 列宽 默认为 auto
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Fixed">
            <summary>
            获得/设置 是否固定本列 默认 false 不固定
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.ShowCopyColumn">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.ShowTips">
            <summary>
            获得/设置 字段鼠标悬停提示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.GetTooltipTextCallback">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.CssClass">
            <summary>
            获得/设置 列 td 自定义样式 默认为 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Align">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.FormatString">
            <summary>
            获得/设置 格式化字符串 如时间类型设置 yyyy-MM-dd
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Formatter">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Template">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.BootstrapBlazor#Components#ITableColumn#Template">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.EditTemplate">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.SearchTemplate">
            <summary>
            <inheritdoc/>
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.FilterTemplate">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.HeaderTemplate">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.ToolboxTemplate">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.ShownWithBreakPoint">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Items">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Order">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Lookup">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.ShowSearchWhenSelect">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.IsFixedSearchWhenSelect">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.IsPopover">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.LookupStringComparison">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.LookupService">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.LookupServiceKey">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.LookupServiceData">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.OnCellRender">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.IsMarkupString">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.ValidateRules">
            <summary>
            获得/设置 自定义验证集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.FieldName">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.GroupName">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.GroupOrder">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumn`2.Columns">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumn`2.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumn`2.GetDisplayName">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumn`2.GetFieldName">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableColumnContext`2">
            <summary>
            TableColumn 上下文类
            </summary>
            <param name="model"></param>
            <param name="value"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumnContext`2.#ctor(`0,`1)">
            <summary>
            TableColumn 上下文类
            </summary>
            <param name="model"></param>
            <param name="value"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnContext`2.Row">
            <summary>
            获得/设置 行数据实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableColumnContext`2.Value">
            <summary>
            获得/设置 当前绑定字段数据实例
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableEditDrawerOption`1">
            <summary>
            编辑弹窗配置类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableEditDrawerOption`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.IsTracking">
            <summary>
            获得/设置 组件是否采用 Tracking 模式对编辑项进行直接更新 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.ShowLabel">
            <summary>
            获得/设置 是否显示标签 默认为 true 显示标签
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.ItemChangedType">
            <summary>
            获得/设置 实体类编辑模式 Add 还是 Update
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.ItemsPerRow">
            <summary>
            获得/设置 每行显示组件数量 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.RowType">
            <summary>
            获得/设置 设置行内组件布局格式 默认 Row 布局
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.LabelAlign">
            <summary>
            获得/设置 设置 <see cref="P:BootstrapBlazor.Components.TableEditDrawerOption`1.RowType" /> Inline 模式下标签对齐方式 默认 None 等效于 Left 左对齐
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.ShowLoading">
            <summary>
            获得/设置 查询时是否显示正在加载中动画 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.ShowUnsetGroupItemsOnTop">
            <summary>
            获得/设置 未分组编辑项布局位置 默认 false 在尾部
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.Model">
            <summary>
            获得/设置 编辑框模型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.DisableAutoSubmitFormByEnter">
            <summary>
            获得/设置 是否禁用表单内回车自动提交功能 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.CloseButtonIcon">
            <summary>
            获得/设置 关闭按钮图标 默认 null 使用当前主题图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.CloseButtonText">
            <summary>
            获得/设置 关闭按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.SaveButtonIcon">
            <summary>
            获得/设置 保存按钮图标 默认 null 使用当前主题图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.SaveButtonText">
            <summary>
            获得/设置 查询按钮文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.DialogBodyTemplate">
            <summary>
            获得/设置 EditDialog Body 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.DialogFooterTemplate">
            <summary>
            获得/设置 EditDialog Footer 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.Items">
            <summary>
            获得 编辑项集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.OnCloseAsync">
            <summary>
            获得/设置 关闭弹窗回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableEditDrawerOption`1.OnEditAsync">
            <summary>
            获得/设置 保存回调委托
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableExportContext`1">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableExportContext`1.Table">
            <summary>
            获得 Table 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableExportContext`1.Columns">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableExportContext`1.GetVisibleColumns">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableExportContext`1.Rows">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableExportContext`1.ExportAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableExportContext`1.BuildQueryPageOptions">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableExportContext`1.#ctor(BootstrapBlazor.Components.ITable,System.Collections.Generic.IEnumerable{`0},System.Func{BootstrapBlazor.Components.QueryPageOptions},System.Func{System.Threading.Tasks.Task})">
            <summary>
            构造函数
            </summary>
            <param name="table">ITable 实例</param>
            <param name="rows">行数据集合</param>
            <param name="optionsBuilder">ITable 实例当前条件生成方法</param>
            <param name="exportAsync">ITable 实例内置 Export 方法</param>
        </member>
        <member name="T:BootstrapBlazor.Components.TableExtensionButton">
            <summary>
            TableExtensionButton 表格扩展按钮类
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableExtensionButton._buttons">
            <summary>
            获得 Toolbar 扩展按钮集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableExtensionButton.ChildContent">
            <summary>
            Specifies the content to be rendered inside this
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableExtensionButton.OnClickButton">
            <summary>
            获得/设置 扩展按钮点击回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableExtensionButton.AddButton(BootstrapBlazor.Components.ITableCellComponent)">
            <summary>
            添加按钮到工具栏方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableExtensionButton.RemoveButton(BootstrapBlazor.Components.ITableCellComponent)">
             <summary>
            从工具栏中移除按钮
             </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableFooterCell">
            <summary>
            TableFooterCell 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.Text">
            <summary>
            获得/设置 单元格内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.Align">
            <summary>
            获得/设置 文字对齐方式 默认为 Alignment.None
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.FormatString">
            <summary>
            获得/设置 格式化字符串 如时间类型设置 yyyy-MM-dd
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.Formatter">
            <summary>
            获得/设置 列格式化回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.Aggregate">
            <summary>
            获得/设置 聚合方法枚举 默认 Sum
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.CustomerAggregateCallback">
            <summary>
            获得/设置 自定义统计列回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.Field">
            <summary>
            获得/设置 统计列名称 默认为 null 不参与统计仅作为显示单元格
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.ColspanCallback">
            <summary>
            获得/设置 colspan 值 默认 null 自己手动设置值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.IsMobileMode">
            <summary>
            获得/设置 是否为移动端模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.DataSource">
            <summary>
            获得/设置 是否为移动端模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.ShownWithBreakPoint">
            <summary>
            获得/设置 显示节点阈值 默认值 BreakPoint.None 未设置
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFooterCell.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFooterCell.CheckShownWithBreakpoint">
            <summary>
            检查当前列是否显示方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFooterCell.GetCountValue">
            <summary>
            解析 Count Aggregate
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableFooterCell.CreateSelector``2(System.String)">
            <summary>
            通过属性名称构建委托
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFormatContent.Formatter">
            <summary>
            获得/设置 格式化方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableFormatContent.Item">
            <summary>
            获得/设置 当前显示数据项
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableRowContext`1">
            <summary>
            TableRow 上下文类
            </summary>
            <param name="model"></param>
            <param name="columns"></param>
            <param name="renderMode"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TableRowContext`1.#ctor(`0,System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},BootstrapBlazor.Components.TableRenderMode)">
            <summary>
            TableRow 上下文类
            </summary>
            <param name="model"></param>
            <param name="columns"></param>
            <param name="renderMode"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.TableRowContext`1.RenderMode">
            <summary>
            获得/设置 当前渲染模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableRowContext`1.Row">
            <summary>
            获得/设置 行数据实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableRowContext`1.Columns">
            <summary>
            获得/设置 当前绑定字段数据实例
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableSize">
            <summary>
            Table 大小枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableSize.Normal">
            <summary>
            正常模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableSize.Compact">
            <summary>
            紧凑模式
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableSortItem">
            <summary>
            排序项 (高级排序使用)
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableSortItem.SortName">
            <summary>
            排序字段名 默认 string.Empty
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableSortItem.SortOrder">
            <summary>
            排序顺序 默认 SortOrder.Unset
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableSortItem.ToString">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TableTemplateColumn`1">
            <summary>
            TableTemplateColumn component
            </summary>
            <remarks>No need to bind model properties</remarks>
        </member>
        <member name="T:BootstrapBlazor.Components.TableToolbar`1">
            <summary>
            Table Toolbar 组件
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableToolbar`1._buttons">
            <summary>
            获得 Toolbar 按钮集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbar`1.ChildContent">
            <summary>
            Specifies the content to be rendered inside this
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbar`1.OnGetSelectedRows">
            <summary>
            获得/设置 按钮点击后回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbar`1.IsAutoCollapsedToolbarButton">
            <summary>
            获得/设置 是否自动收缩工具栏按钮 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbar`1.ShowColorWhenToolbarButtonsCollapsed">
            <summary>
            获得/设置 工具栏按钮收缩后是否继承原先按钮的颜色样式 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbar`1.GearIcon">
            <summary>
            获得/设置 移动端按钮图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableToolbar`1.AddButton(BootstrapBlazor.Components.IToolbarComponent)">
            <summary>
            添加按钮到工具栏方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableToolbar`1.RemoveButton(BootstrapBlazor.Components.IToolbarComponent)">
            <summary>
            移除按钮到工具栏方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableToolbarButton`1">
            <summary>
            表格 Toolbar 按钮组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarButton`1.OnClickCallback">
            <summary>
            获得/设置 按钮点击后回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarButton`1.IsEnableWhenSelectedOneRow">
            <summary>
            获得/设置 选中一行时启用按钮 默认 false 均可用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarButton`1.IsDisabledCallback">
            <summary>
            获得/设置 按钮是否被禁用回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarButton`1.IsShow">
            <summary>
            获得/设置 是否显示 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarButton`1.Toolbar">
            <summary>
            获得/设置 Table Toolbar 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableToolbarButton`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableToolbarButton`1.DisposeAsync(System.Boolean)">
            <summary>
            DisposeAsyncCore 方法
            </summary>
            <param name="disposing"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TableToolbarComponent`1">
            <summary>
            Table 工具栏自定义组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarComponent`1.IsShow">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarComponent`1.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarComponent`1.Toolbar">
            <summary>
            获得/设置 Table Toolbar 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableToolbarComponent`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableToolbarComponent`1.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TableToolbarComponent`1.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableToolbarPopConfirmButton`1">
            <summary>
            TableToolbarPopConfirmButton 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarPopConfirmButton`1.OnConfirmCallback">
            <summary>
            获得/设置 按钮点击后回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarPopConfirmButton`1.IsShow">
            <summary>
            获得/设置 是否显示 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarPopConfirmButton`1.IsEnableWhenSelectedOneRow">
            <summary>
            获得/设置 选中一行时启用按钮 默认 false 均可用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarPopConfirmButton`1.IsDisabledCallback">
            <summary>
            获得/设置 按钮是否被禁用回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableToolbarPopConfirmButton`1.Toolbar">
            <summary>
            获得/设置 Table Toolbar 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableToolbarPopConfirmButton`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableToolbarPopConfirmButton`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableToolbarPopConfirmButton`1.DisposeAsync(System.Boolean)">
            <summary>
            DisposeAsyncCore 方法
            </summary>
            <param name="disposing"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Tag">
            <summary>
            Tag 组件类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tag.ClassName">
            <summary>
            获得 样式集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Textarea">
            <summary>
            Textarea component
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Textarea.ScrollToTop">
            <summary>
            Scroll to the top
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Textarea.ScrollTo(System.Int32)">
            <summary>
            Scroll to a specific value
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Textarea.ScrollToBottom">
            <summary>
            Scroll to the bottom
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Textarea.IsAutoScroll">
            <summary>
            Gets or sets whether auto-scroll is enabled. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Textarea.UseShiftEnter">
            <summary>
            Gets or sets whether Shift + Enter replaces the default Enter key behavior. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Textarea.AutoScrollString">
            <summary>
            Gets the client-side auto-scroll identifier.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Textarea.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ThemeProvider">
            <summary>
            ThemeProvider 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThemeProvider.AutoModeIcon">
            <summary>
            获得/设置 自动模式图标 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThemeProvider.AutoModeText">
            <summary>
            获得/设置 自动模式文本 默认 null 未设置使用本地化资源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThemeProvider.DarkModeIcon">
            <summary>
            获得/设置 暗黑模式图标 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThemeProvider.DarkModeText">
            <summary>
            获得/设置 暗黑模式文本 默认 null 未设置使用本地化资源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThemeProvider.LightModeIcon">
            <summary>
            获得/设置 明亮模式图标 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThemeProvider.LightModeText">
            <summary>
            获得/设置 明亮模式文本 默认 null 未设置使用本地化资源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThemeProvider.ActiveIcon">
            <summary>
            获得/设置 当前选中模式图标 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThemeProvider.ShowShadow">
            <summary>
            获得/设置 下拉框是否显示阴影效果 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThemeProvider.Alignment">
            <summary>
            获得/设置 下拉框对其方式 默认 Right
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThemeProvider.OnThemeChangedAsync">
            <summary>
            获得/设置 主题切换回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThemeProvider.ThemeValue">
            <summary>
            主题类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThemeProvider.ThemeValueChanged">
            <summary>
            主题类型改变回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ThemeProvider.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ThemeProvider.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ThemeProvider.OnThemeChanged(BootstrapBlazor.Components.ThemeValue)">
            <summary>
            JavaScript 回调方法
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ThemeValue">
            <summary>
            主题选项
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ThemeValue.Auto">
            <summary>
            自动
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ThemeValue.Light">
            <summary>
            明亮主题
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ThemeValue.Dark">
            <summary>
            暗黑主题
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ThemeValue.UseLocalStorage">
            <summary>
            使用本地保存选项
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Timeline">
            <summary>
            时间线组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timeline.ClassString">
            <summary>
            获得 Timeline 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timeline.Items">
            <summary>
            获得/设置 绑定数据集
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timeline.IsReverse">
            <summary>
            获得/设置 是否反转
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timeline.IsAlternate">
            <summary>
            获得/设置 是否左右交替出现 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timeline.IsLeft">
            <summary>
            获得/设置 内容是否出现在时间线左侧 默认为 false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Timeline.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TimelineItem">
            <summary>
            时间线选项
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineItem.Content">
            <summary>
            获得/设置 时间线内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineItem.Description">
            <summary>
            获得/设置 时间线描述
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineItem.DescriptionTemplate">
            <summary>
            获得/设置 时间线描述模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineItem.Color">
            <summary>
            获得/设置 时间线颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineItem.Icon">
            <summary>
            获得/设置 时间线图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimelineItem.Component">
            <summary>
            获得/设置 自定义组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimelineItem.ToNodeClassString">
            <summary>
            获得 时间线节点样式
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimelineItem.ToIconClassString">
            <summary>
            获得 图标样式
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TimePicker">
            <summary>
            TimePicker 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePicker.CancelButtonText">
            <summary>
            获得/设置 取消按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePicker.ConfirmButtonText">
            <summary>
            获得/设置 确定按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePicker.HasSeconds">
            <summary>
            获得/设置 是否显示秒 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePicker.OnClose">
            <summary>
            获得/设置 取消按钮回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePicker.OnConfirm">
            <summary>
            获得/设置 确认按钮回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePicker.CurrentTime">
            <summary>
            获得/设置 当前时间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePicker.ClassString">
            <summary>
            获得/设置 样式
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePicker.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePicker.OnClickClose">
            <summary>
            点击取消按钮回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePicker.OnClickConfirm">
            <summary>
            点击确认按钮时回调此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TimePickerCell">
            <summary>
            时间选择滚轮单元组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerCell.GetClassName(System.Int32)">
            <summary>
            获得 当前样式名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerCell.Range">
            <summary>
            获得 滚轮单元数据区间
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerCell.StyleName">
            <summary>
            获得 组件单元数据样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerCell.ViewMode">
            <summary>
            获得/设置 时间选择框视图模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerCell.Value">
            <summary>
            获得/设置 组件值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerCell.ValueChanged">
            <summary>
            获得/设置 组件值变化时委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerCell.UpIcon">
            <summary>
            获得/设置 向上箭头图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TimePickerCell.DownIcon">
            <summary>
            获得/设置 向下箭头图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerCell.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerCell.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerCell.OnClickUp">
            <summary>
            上翻页按钮调用此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerCell.OnHeightCallback(System.Double)">
            <summary>
            计算单元格高度回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TimePickerCell.OnClickDown">
            <summary>
            下翻页按钮调用此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Timer">
            <summary>
            Timer 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.ClassString">
            <summary>
            获得 组件样式字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.ValueString">
            <summary>
            获得/设置 当前进度值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.ValueTitleString">
            <summary>
            获得/设置 Title 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.Value">
            <summary>
            获得/设置 当前值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.Width">
            <summary>
            获得/设置 文件预览框宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.OnTimeout">
            <summary>
            获得/设置 倒计时结束时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.OnCancel">
            <summary>
            获得/设置 取消时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.StrokeWidth">
            <summary>
            获得/设置 进度条宽度 默认为 2
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.IsVibrate">
            <summary>
            获得/设置 倒计时结束时设备震动
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.PauseText">
            <summary>
            获得/设置 暂停按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.ResumeText">
            <summary>
            获得/设置 继续按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.CancelText">
            <summary>
            获得/设置 取消按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.StarText">
            <summary>
            获得/设置 取消按钮文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Timer.Icon">
            <summary>
            获得/设置 Alert 图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Timer.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Timer.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Timer.Timeout">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Timer.DisposeAsync(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.Title">
            <summary>
            Title 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Title.Text">
            <summary>
            获得/设置 当前页标题文字
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Title.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Toast">
            <summary>
            ToastBox 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Toast.AutoHide">
            <summary>
            获得/设置 弹出框类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Toast.ClassString">
            <summary>
            获得/设置 弹出框类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Toast.ProgressClass">
            <summary>
            获得/设置 进度条样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Toast.IconString">
            <summary>
            获得/设置 图标样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Toast.DelayString">
            <summary>
            获得/设置 弹出框自动关闭时长
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Toast.AnimationString">
            <summary>
            获得/设置 是否开启动画效果
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Toast.Options">
            <summary>
            获得/设置 ToastOption 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Toast.ToastContainer">
            <summary>
            获得/设置 Toast 实例
            </summary>
            <value></value>
        </member>
        <member name="M:BootstrapBlazor.Components.Toast.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Toast.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Toast.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Toast.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Toast.Close">
            <summary>
            清除 ToastBox 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ToastContainer">
            <summary>
            Toast 弹出窗组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastContainer.Toasts">
            <summary>
            获得 弹出窗集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastContainer.Placement">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastContainer.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastContainer.Close(BootstrapBlazor.Components.ToastOption)">
            <summary>
            关闭弹窗
            </summary>
            <param name="option"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastContainer.SetPlacement(BootstrapBlazor.Components.Placement)">
            <summary>
            设置 Toast 容器位置方法
            </summary>
            <param name="placement"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastContainer.Dispose(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastContainer.Dispose">
            <summary>
            Dispose 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ToastOption">
            <summary>
            Toast 弹出窗参数配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.Toast">
            <summary>
            获得/设置 弹窗载体
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.Category">
            <summary>
            获得/设置 弹出框类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.SuccessIcon">
            <summary>
            获得/设置 成功图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.InformationIcon">
            <summary>
            获得/设置 提示图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.ErrorIcon">
            <summary>
            获得/设置 错误图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.WarningIcon">
            <summary>
            获得/设置 警告图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.Title">
            <summary>
            获得/设置 显示标题
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.ShowClose">
            <summary>
            获得/设置 是否显示关闭按钮 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.ShowHeader">
            <summary>
            获得/设置 是否显示 Header 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.PreventDuplicates">
            <summary>
            获得/设置 是否阻止重复消息 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.HeaderTemplate">
            <summary>
            获得/设置 Header 模板 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.Animation">
            <summary>
            获得/设置 是否开启动画 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToastOption.OnCloseAsync">
            <summary>
            获得/设置 关闭当前 Toast 回调委托 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastOption.Close">
            <summary>
            关闭当前弹窗方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ToastService">
            <summary>
            Toast 弹出窗服务类
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastService.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{BootstrapBlazor.Components.BootstrapBlazorOptions})">
            <summary>
            Toast 弹出窗服务类
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastService.Show(BootstrapBlazor.Components.ToastOption,BootstrapBlazor.Components.ToastContainer)">
            <summary>
            Show 方法
            </summary>
            <param name="option"></param>
            <param name="toastContainer">指定弹窗组件 默认为 null 使用 <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRoot"/> 组件内置弹窗组件</param>
        </member>
        <member name="T:BootstrapBlazor.Components.Toggle">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Toggle.Color">
            <summary>
            获得/设置 组件颜色 默认为 Success 颜色
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Toggle.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Toggle.OnClick">
            <summary>
            点击控件时触发此方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ToggleBase`1">
            <summary>
            Toggle 开关组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToggleBase`1.StyleName">
            <summary>
            获得 Style 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToggleBase`1.Width">
            <summary>
            获得/设置 组件宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToggleBase`1.OnText">
            <summary>
            获得/设置 组件 On 时显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ToggleBase`1.OffText">
            <summary>
            获得/设置 组件 Off 时显示文本
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ITooltip">
            <summary>
            ITooltip 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.Placement">
            <summary>
            获得/设置 位置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.Title">
            <summary>
            获得/设置 显示内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.IsHtml">
            <summary>
            获得/设置 内容是否为 Html 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.Trigger">
            <summary>
            获得/设置 触发方式 可组合 click focus hover 默认为 focus hover
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.CustomClass">
            <summary>
            获得/设置 自定义样式 默认 null
            </summary>
            <remarks>由 data-bs-custom-class 实现</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.Delay">
            <summary>
            获得/设置 显示隐藏延时 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.Sanitize">
            <summary>
            获得/设置 是否对 <see cref="P:BootstrapBlazor.Components.ITooltip.Title"/> 进行关键字过滤 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITooltip.Selector">
            <summary>
            获得/设置 元素选择器
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Tooltip">
            <summary>
            Tooltip 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.PlacementString">
            <summary>
            弹窗位置字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.SanitizeString">
            <summary>
            获得 是否关键字过滤字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.HtmlString">
            <summary>
            获得 是否 Html 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.ClassString">
            <summary>
            component class
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.FallbackPlacementsString">
            <summary>
            fallbackPlacements 参数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.Delay">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.Selector">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.Title">
            <summary>
            获得/设置 显示内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.GetTitleCallback">
            <summary>
            获得/设置 获得显示内容异步回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.IsHtml">
            <summary>
            获得/设置 显示文字是否为 Html 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.Sanitize">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.Placement">
            <summary>
            获得/设置 位置 默认为 Placement.Top
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.FallbackPlacements">
            <summary>
            获得/设置 位置 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.Offset">
            <summary>
            获得/设置 偏移量 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.CustomClass">
            <summary>
            获得/设置 自定义样式 默认 null
            </summary>
            <remarks>由 data-bs-custom-class 实现</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.Trigger">
            <summary>
            获得/设置 触发方式 可组合 click focus hover 默认为 focus hover
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.ChildContent">
            <summary>
            获得/设置 子组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tooltip.CustomClassString">
            <summary>
            获得 CustomClass 字符串
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tooltip.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tooltip.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Tooltip.SetParameters(System.String,BootstrapBlazor.Components.Placement,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
            设置参数方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TooltipWrapperBase">
            <summary>
            TooltipWrapperBase 基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TooltipWrapperBase.PlacementString">
            <summary>
            Tooltip 弹窗位置字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TooltipWrapperBase.TriggerString">
            <summary>
            Tooltip Trigger 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TooltipWrapperBase.Tooltip">
            <summary>
            the instance of Tooltip component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TooltipWrapperBase.TooltipText">
            <summary>
            获得/设置 TooltipText 显示文字 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TooltipWrapperBase.TooltipPlacement">
            <summary>
            获得/设置 Tooltip 显示位置 默认为 Top
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TooltipWrapperBase.TooltipTrigger">
            <summary>
            获得/设置 Tooltip 触发方式 默认为 hover focus
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TooltipWrapperBase.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Transfer`1">
            <summary>
            穿梭框组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.LeftButtonClassName">
            <summary>
            获得/设置 按钮文本样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.RightButtonClassName">
            <summary>
            获得/设置 按钮文本样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.LeftItems">
            <summary>
            获得/设置 左侧数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.RightItems">
            <summary>
            获得/设置 右侧数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.Items">
            <summary>
            获得/设置 组件绑定数据项集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.OnSelectedItemsChanged">
            <summary>
            获得/设置 选中项集合发生改变时回调委托方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.LeftPanelText">
            <summary>
            获得/设置 左侧面板 Header 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.RightPanelText">
            <summary>
            获得/设置 右侧面板 Header 显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.LeftIcon">
            <summary>
            获得/设置 向左侧转移图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.RightIcon">
            <summary>
            获得/设置 向右侧转移图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.LeftButtonText">
            <summary>
            获得/设置 左侧按钮显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.RightButtonText">
            <summary>
            获得/设置 右侧按钮显示文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.ShowSearch">
            <summary>
            获得/设置 是否显示搜索框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.LeftPannelSearchPlaceHolderString">
            <summary>
            获得/设置 左侧面板搜索框 placeholder 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.LeftPanelSearchPlaceHolderString">
            <summary>
            获得/设置 左侧面板搜索框 placeholder 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.RightPannelSearchPlaceHolderString">
            <summary>
            获得/设置 右侧面板搜索框 placeholder 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.RightPanelSearchPlaceHolderString">
            <summary>
            获得/设置 右侧面板搜索框 placeholder 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.Max">
            <summary>
            获得/设置 右侧面板包含的最大数量, 默认为 0 不限制
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.MaxErrorMessage">
            <summary>
            获得/设置 设置最大值时错误消息文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.Min">
            <summary>
            获得/设置 右侧面板包含的最大数量，默认为 0 不限制
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.MinErrorMessage">
            <summary>
            获得/设置 设置最小值时错误消息文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.OnSetItemClass">
            <summary>
            获得/设置 数据样式回调方法 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.LeftHeaderTemplate">
            <summary>
            获得/设置 左侧 Panel Header 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.LeftItemTemplate">
            <summary>
            获得/设置 左侧 Panel Item 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.RightHeaderTemplate">
            <summary>
            获得/设置 右侧 Panel Header 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.RightItemTemplate">
            <summary>
            获得/设置 右侧 Panel Item 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transfer`1.Height">
            <summary>
            获得/设置 组件高度 默认值 null 未设置
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Transfer`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Transfer`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Transfer`1.TransferItems(System.Collections.Generic.List{BootstrapBlazor.Components.SelectedItem},System.Collections.Generic.List{BootstrapBlazor.Components.SelectedItem},System.Boolean)">
            <summary>
            选中数据移动方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Transfer`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="result"></param>
            <param name="validationErrorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Transfer`1.FormatValueAsString(`0)">
            <summary>
            FormatValueAsString 方法
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Transfer`1.SelectedItemsChanged">
            <summary>
            选项状态改变时回调此方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Transfer`1.GetButtonState(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.SelectedItem})">
            <summary>
            获得按钮是否可用
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TransferPanel">
            <summary>
            TransferPanelBase 穿梭框面板组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.SearchText">
            <summary>
            获得/设置 搜索关键字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.SearchClass">
            <summary>
            获得 搜索图标样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.PanelListClassString">
            <summary>
            获得 Panel 样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.Disabled">
            <summary>
            获得 组件是否被禁用属性值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.Items">
            <summary>
            获得/设置 数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.OnSetItemClass">
            <summary>
            获得/设置 数据样式回调方法 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.Text">
            <summary>
            获得/设置 面板显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.ShowSearch">
            <summary>
            获得/设置 是否显示搜索框
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.SearchIcon">
            <summary>
            获得/设置 搜索框图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.OnSelectedItemsChanged">
            <summary>
            获得/设置 选项状态变化时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.SearchPlaceHolderString">
            <summary>
            获得/设置 搜索框的 placeholder 字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.HeaderTemplate">
            <summary>
            获得/设置 Header 模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TransferPanel.ItemTemplate">
            <summary>
            获得/设置 Item 模板
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferPanel.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferPanel.HeaderCheckState">
            <summary>
            头部复选框初始化值方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferPanel.OnHeaderCheck(BootstrapBlazor.Components.CheckboxState,BootstrapBlazor.Components.SelectedItem)">
            <summary>
            左侧头部复选框初始化值方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferPanel.OnStateChanged(BootstrapBlazor.Components.CheckboxState,BootstrapBlazor.Components.SelectedItem)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferPanel.OnSearch(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            搜索框文本改变时回调此方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferPanel.OnKeyUp(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            搜索文本框按键回调方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TransferPanel.ClearSearch">
            <summary>
            清空搜索条件方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Transition">
            <summary>
            Transition 动画组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transition.Show">
            <summary>
            获得/设置 是否显示动画 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transition.TransitionType">
            <summary>
            获得/设置 动画名称 默认 FadeIn
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transition.Duration">
            <summary>
             获得/设置 动画执行时长 单位毫秒 默认为 0 未生效
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transition.ChildContent">
            <summary>
            获得/设置 子内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Transition.OnTransitionEnd">
            <summary>
            获得/设置 动画执行完成回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Transition.TransitionEndAsync">
            <summary>
            动画执行完毕结束异步方法 JSInvoke 调用
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Transition.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Tree">
            <summary>
            Tree 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.ClassString">
            <summary>
            获得 按钮样式集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.LoadingClassString">
            <summary>
            获得 Loading 样式集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tree.GetIconClassString(BootstrapBlazor.Components.TreeItem)">
            <summary>
            获得/设置 TreeItem 图标
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Tree.GetCaretClassString(BootstrapBlazor.Components.TreeItem)">
            <summary>
            获得/设置 TreeItem 小箭头样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Tree.GetItemClassString(BootstrapBlazor.Components.TreeItem)">
            <summary>
            获得/设置 当前行样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Tree.GetTreeNodeClassString(BootstrapBlazor.Components.TreeItem)">
            <summary>
            获得/设置 TreeNode 样式
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.ActiveItem">
            <summary>
            获得/设置 选中节点 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.IsAccordion">
            <summary>
            获得/设置 是否为手风琴效果 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.ClickToggleNode">
            <summary>
            获得/设置 是否点击节点时展开或者收缩子项 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.ShowSkeleton">
            <summary>
            获得/设置 是否显示加载骨架屏 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.NodeIcon">
            <summary>
            获得/设置 Tree Node 节点图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.ExpandNodeIcon">
            <summary>
            获得/设置 Tree Node 展开节点图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.Items">
            <summary>
            获得/设置 菜单数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.ShowCheckbox">
            <summary>
            获得/设置 是否显示 CheckBox 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.ShowRadio">
            <summary>
            获得/设置 是否显示 Radio 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.ShowIcon">
            <summary>
            获得/设置 是否显示 Icon 图标 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.OnTreeItemClick">
            <summary>
            获得/设置 树形控件节点点击时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.OnTreeItemChecked">
            <summary>
            获得/设置 树形控件节点选中时回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Tree.OnExpandNode">
            <summary>
            获得/设置 节点展开前回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tree.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tree.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Tree.OnClick(BootstrapBlazor.Components.TreeItem)">
            <summary>
            选中节点时触发此方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Tree.OnExpandRowAsync(BootstrapBlazor.Components.TreeItem)">
            <summary>
            更改节点是否展开方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Tree.OnStateChanged(BootstrapBlazor.Components.CheckboxState,BootstrapBlazor.Components.TreeItem)">
            <summary>
            节点 Checkbox 状态改变时触发此方法
            </summary>
            <param name="state"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Tree.GetCheckedItems">
            <summary>
            获得 所有选中节点集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TreeItem">
            <summary>
            TreeItem 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.ShowLoading">
            <summary>
            获得/设置 是否显示正在加载动画 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.Items">
            <summary>
            获得/设置 子节点数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.Key">
            <summary>
            获得/设置 TreeItem 标识
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.Tag">
            <summary>
            获得/设置 TreeItem 相关额外信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.Checked">
            <summary>
            获得/设置 是否被选中
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeItem.HasChildNode">
            <summary>
            获取/设置 是否有子节点 默认 false 
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeItem.GetAllSubItems">
            <summary>
            获得 所有子项集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeItem.CascadeSetCheck(System.Boolean)">
            <summary>
            级联设置复选状态
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TreeView`1">
            <summary>
            Tree component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.IsReset">
            <summary>
            Gets or sets whether to show the loading animation. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ShowToolbar">
            <summary>
            Gets or sets whether show the toolbar of tree view item. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ShowToolbarCallback">
            <summary>
            Gets or sts A callback method that determines whether to show the toolbar of the tree view item.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.IsDisabled">
            <summary>
            Gets or sets whether the entire component is disabled. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.CanExpandWhenDisabled">
            <summary>
            Gets or sets whether nodes can be expanded or collapsed when the component is disabled. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.IsAccordion">
            <summary>
            Gets or sets whether the tree view has accordion behavior. Default is false. Accordion behavior is not supported in virtual scrolling mode.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ClickToggleNode">
            <summary>
            Gets or sets whether clicking a node expands or collapses its children. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ClickToggleCheck">
            <summary>
            Gets or sets whether clicking a node toggles its checkbox state. Default is false. Effective when <see cref="P:BootstrapBlazor.Components.TreeView`1.ShowCheckbox"/> is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ShowSkeleton">
            <summary>
            Gets or sets whether to show the loading skeleton. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ShowSearch">
            <summary>
            Gets or sets whether to show the search bar. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ShowResetSearchButton">
            <summary>
            Gets or sets whether to show the reset search button. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.SearchTemplate">
            <summary>
            Gets or sets the search bar template. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.SearchIcon">
            <summary>
            Gets or sets the search icon. Default is not set, using the built-in theme icon.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ClearSearchIcon">
            <summary>
            Gets or sets the clear search icon. Default is not set, using the built-in theme icon.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.OnSearchAsync">
            <summary>
            Gets or sets the search callback method. Default is null.
            </summary>
            <remarks>Enabled by setting <see cref="P:BootstrapBlazor.Components.TreeView`1.ShowSearch"/> to true.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.Items">
            <summary>
            Gets or sets the hierarchical data collection.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ShowCheckbox">
            <summary>
            Gets or sets whether to show checkboxes. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.MaxSelectedCount">
            <summary>
            Gets or sets the maximum number of selected items.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.OnMaxSelectedCountExceed">
            <summary>
            Gets or sets the callback method when the maximum number of selected items is exceeded.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ShowIcon">
            <summary>
            Gets or sets whether to show icons. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.OnTreeItemClick">
            <summary>
            Gets or sets the callback method when a tree item is clicked.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.OnTreeItemChecked">
            <summary>
            Gets or sets the callback method when a tree item is checked.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.OnExpandNodeAsync">
            <summary>
            Gets or sets the callback method to get child data when a node is expanded.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.CustomKeyAttribute">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ModelEqualityComparer">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.LoadingIcon">
            <summary>
            Gets or sets the loading icon for tree nodes.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.NodeIcon">
            <summary>
            Gets or sets the icon for tree nodes.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ExpandNodeIcon">
            <summary>
            Gets or sets the icon for expanded tree nodes.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.EnableKeyboard">
            <summary>
            Gets or sets whether to enable keyboard navigation. Default is false.
            <para>ArrowLeft collapses the node.</para>
            <para>ArrowRight expands the node.</para>
            <para>ArrowUp moves to the previous node.</para>
            <para>ArrowDown moves to the next node.</para>
            <para>Space selects the current node.</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ScrollIntoViewOptions">
            <summary>
            Gets or sets the scroll into view options for keyboard navigation. Default is null, using { behavior: "smooth", block: "nearest", inline: "start" }.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.IsVirtualize">
            <summary>
            Gets or sets whether to enable virtual scrolling. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.RowHeight">
            <summary>
            Gets or sets the row height for virtual scrolling. Default is 29f.
            </summary>
            <remarks>Effective when <see cref="P:BootstrapBlazor.Components.TreeView`1.IsVirtualize"/> is set to true.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.OverscanCount">
            <summary>
            Gets or sets the overscan count for virtual scrolling. Default is 10.
            </summary>
            <remarks>Effective when <see cref="P:BootstrapBlazor.Components.TreeView`1.IsVirtualize"/> is set to true.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ToolbarTemplate">
            <summary>
            Gets or sets the toolbar content template. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ToolbarEditTitle">
            <summary>
            Gets or sets the title of the popup-window. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.ToolbarEditLabelText">
            <summary>
            Gets or sets the title of the popup-window. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.OnUpdateCallbackAsync">
            <summary>
            Gets or sets the update the tree text value callback. Default is null.
            <para>If return true will update the tree text value, otherwise will not update.</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.AutoCheckChildren">
            <summary>
            Gets or sets whether to automatically update child nodes when the node state changes. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.AutoCheckParent">
            <summary>
            Gets or sets whether to automatically update parent nodes when the node state changes. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.AllowDrag">
            <summary>
            Gets or sets a value indicating whether drag-and-drop operations are allowed. Default is false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeView`1.OnDragItemEndAsync">
            <summary>
            获得/设置 拖动标签页结束回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.OnInitialized">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.ShouldRender">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.TriggerKeyDown(System.String)">
            <summary>
            Client-side user keyboard operation handler method called by JavaScript
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.TriggerDragEnd(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Triggers the end of a drag-and-drop operation within the tree view.
            </summary>
            <remarks>This method is invoked via JavaScript interop to signal the completion of a drag-and-drop
            action. If a handler is assigned to <see cref="P:BootstrapBlazor.Components.TreeView`1.OnDragItemEndAsync"/>, it will be invoked with the drag
            context.</remarks>
            <param name="originIndex">The zero-based index of the item being dragged from its original position.</param>
            <param name="currentIndex">The zero-based index of the item's current position after the drag operation.</param>
            <param name="isChildren">A value indicating whether the drag operation involves child items.</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.GetParentsState(System.Collections.Generic.List{System.Int32})">
            <summary>
            Client-side method to query the state of the specified row checkbox, called by JavaScript
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.SetActiveItem(BootstrapBlazor.Components.TreeViewItem{`0})">
            <summary>
            Set the active node
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.SetItems(System.Collections.Generic.List{BootstrapBlazor.Components.TreeViewItem{`0}})">
            <summary>
            Set the data source method for <see cref="P:BootstrapBlazor.Components.TreeView`1.Items"/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.SetActiveItem(`0)">
            <summary>
            Set the active node
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.OnToggleNodeAsync(BootstrapBlazor.Components.TreeViewItem{`0})">
            <summary>
            Toggle node expand collapse state method
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.ClearCheckedItems">
            <summary>
            Clear all selected nodes
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.GetCheckedItems">
            <summary>
            Gets all selected node collections
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeView`1.Equals(`0,`0)">
            <summary>
            Check if the data is the same
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TreeViewDragContext`1">
            <summary>
            <see cref="T:BootstrapBlazor.Components.TreeView`1"/> 组件拖动上下文类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeViewDragContext`1.#ctor(BootstrapBlazor.Components.TreeViewItem{`0},BootstrapBlazor.Components.TreeViewItem{`0},System.Boolean)">
            <summary>
            <see cref="T:BootstrapBlazor.Components.TreeView`1"/> 组件拖动上下文类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewDragContext`1.Source">
            <summary>
            获得 源节点
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewDragContext`1.Target">
            <summary>
            获得 目标节点
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewDragContext`1.IsChildren">
            <summary>
            获得 是否未目标节点的子节点
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TreeViewItem`1">
            <summary>
            TreeItem 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewItem`1.ShowLoading">
            <summary>
            获得/设置 是否显示正在加载动画 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewItem`1.CheckedState">
            <summary>
            获得/设置 是否被选中
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewItem`1.Items">
            <summary>
            获得/设置 子节点数据源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewItem`1.BootstrapBlazor#Components#IExpandableNode{TItem}#Items">
            <summary>
            获得/设置 子节点集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewItem`1.Parent">
            <summary>
            获得/设置 父级节点
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewItem`1.BootstrapBlazor#Components#IExpandableNode{TItem}#Parent">
            <summary>
            获得/设置 父级节点
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeViewItem`1.#ctor(`0)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TreeViewRow`1">
            <summary>
            TreeViewRow component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.IsActive">
            <summary>
            Gets or sets whether the node is active. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.Index">
            <summary>
            Gets or sets the node index. Default is 0.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.Item">
            <summary>
            Gets or sets the tree node item. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.LoadingIcon">
            <summary>
            Gets or sets the loading icon for tree nodes.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.NodeIcon">
            <summary>
            Gets or sets the icon for tree nodes.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.ExpandNodeIcon">
            <summary>
            Gets or sets the icon for expanded tree nodes.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.IsDisabled">
            <summary>
            Gets or sets whether the entire component is disabled. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.ShowCheckbox">
            <summary>
            Gets or sets whether to show checkboxes. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.CanExpandWhenDisabled">
            <summary>
            Gets or sets whether nodes can be expanded or collapsed when the component is disabled. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.OnToggleNodeAsync">
            <summary>
            Get or sets the node click event callback.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.OnCheckStateChanged">
            <summary>
            Get or sets the node checkbox state change event callback.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.MaxSelectedCount">
            <summary>
            Gets or sets the maximum number of selected items.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.OnBeforeStateChangedCallback">
            <summary>
            Gets or sets the callback that is invoked before the node state changes.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.ShowIcon">
            <summary>
            Gets or sets whether to show icons. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.OnClick">
            <summary>
            Gets or sets the click event callback. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.ShowToolbar">
            <summary>
            Gets or sets whether show the toolbar of tree view item. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.ShowToolbarCallback">
            <summary>
            A callback method that determines whether to show the toolbar of the tree view item.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.ToolbarEditTitle">
            <summary>
            Gets or sets the title of the popup-window. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.ToolbarEditLabelText">
            <summary>
            Gets or sets the title of the popup-window. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.ToolbarTemplate">
            <summary>
            Gets or sets the toolbar content template. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewRow`1.OnUpdateCallbackAsync">
            <summary>
            Gets or sets the update the tree text value callback. Default is null.
            <para>If return true will update the tree text value, otherwise will not update.</para>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeViewRow`1.OnParametersSetAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TreeViewToolbarEditButton`1">
            <summary>
            TreeViewToolbarEditButton component
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewToolbarEditButton`1.Item">
            <summary>
            Gets or sets the tree view item. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewToolbarEditButton`1.ItemChanged">
            <summary>
            Gets or sets the item changed event callback.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewToolbarEditButton`1.OnUpdateCallbackAsync">
            <summary>
            Gets or sets the update the tree text value callback. Default is null.
            <para>If return true will update the tree text value, otherwise will not update.</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewToolbarEditButton`1.Title">
            <summary>
            Gets or sets the title of the popup-window. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewToolbarEditButton`1.Text">
            <summary>
            Gets or sets the text of the popup-window label. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeViewToolbarEditButton`1.Icon">
            <summary>
            Gets or sets the icon of the edit button. Default is null.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeViewToolbarEditButton`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Typed">
            <summary>
            TypedJs 组件类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Typed.Text">
            <summary>
            获得/设置 组件显示文字 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Typed.Options">
            <summary>
            获得/设置 组件配置 <see cref="T:BootstrapBlazor.Components.TypedOptions"/> 实例 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Typed.OnCompleteAsync">
            <summary>
            获得/设置 打字结束回调方法 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Typed.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Typed.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Typed.TriggerComplete">
            <summary>
            打字结束方法 由 Javascript 触发
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TypedOptions">
            <summary>
            TypedJs 组件配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TypedOptions.Text">
            <summary>
            获得/设置 要打字的字符串数组
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TypedOptions.TypeSpeed">
            <summary>
            获得/设置 打字速度 默认 null 未设置 单位毫秒
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TypedOptions.BackSpeed">
            <summary>
            获得/设置 退格速度 默认 null 未设置 单位毫秒
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TypedOptions.SmartBackspace">
            <summary>
            获得/设置 smartBackspace only backspace what doesn't match the previous string default true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TypedOptions.Shuffle">
            <summary>
            获得/设置 shuffle the strings default false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TypedOptions.BackDelay">
            <summary>
            获得/设置 backDelay time before backspacing in milliseconds default 700
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TypedOptions.Loop">
            <summary>
            获得/设置 loop loop strings default false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TypedOptions.LoopCount">
            <summary>
            获得/设置 loopCount amount of loops default Infinity
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TypedOptions.ShowCursor">
            <summary>
            获得/设置 showCursor show cursor default true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TypedOptions.CursorChar">
            <summary>
            获得/设置 cursorChar character for cursor default |
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TypedOptions.ContentType">
            <summary>
            获得/设置 contentType 'html' or 'null' for plaintext default html
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TypedOptions.Equals(BootstrapBlazor.Components.TypedOptions)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TypedOptions.Equals(System.Object)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TypedOptions.GetHashCode">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.AvatarUpload`1">
            <summary>
            头像上传组件
            <para>AvatarUpload Component</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarUpload`1.Width">
            <summary>
            获得/设置 文件预览框宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarUpload`1.Height">
            <summary>
            获得/设置 文件预览框高度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarUpload`1.IsCircle">
            <summary>
            获得/设置 是否圆形图片框 Avatar 模式时生效 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarUpload`1.BorderRadius">
            <summary>
            Gets or sets the border radius. Default is null.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarUpload`1.AllowExtensions">
            <summary>
            获得/设置 图标文件扩展名集合 ".png"
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarUpload`1.DeleteIcon">
            <summary>
            获得/设置 删除图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarUpload`1.LoadingIcon">
            <summary>
            获得/设置 加载图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarUpload`1.AddIcon">
            <summary>
            获得/设置 新建图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarUpload`1.ValidStatusIcon">
            <summary>
            获得/设置 状态正常图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarUpload`1.InvalidStatusIcon">
            <summary>
            获得/设置 状态正常图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarUpload`1.IsUploadButtonAtFirst">
            <summary>
            获得/设置 继续上传按钮是否在列表前 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarUpload`1.CanPreviewCallback">
            <summary>
            获得/设置 是否允许预览回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.AvatarUpload`1.ItemStyleString">
            <summary>
            获得/设置 预览框 Style 属性
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AvatarUpload`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AvatarUpload`1.TriggerOnChanged(BootstrapBlazor.Components.UploadFile)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.AvatarUpload`1.Preview">
            <summary>
            预览当前头像方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.AvatarUpload`1.ToggleMessage(System.Collections.Generic.IReadOnlyCollection{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="results"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.AvatarUpload`1.ShowValidResult">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.AvatarUpload`1.RemoveValidResult(System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="validateId"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.AvatarUpload`1.DisposeAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="disposing"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ButtonUpload`1">
            <summary>
            按钮上传组件
            <para>ButtonUpload Component</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonUpload`1.LoadingIcon">
            <summary>
            获得/设置 浏览按钮加载中图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonUpload`1.InvalidStatusIcon">
            <summary>
            获得/设置 上传失败状态图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonUpload`1.ValidStatusIcon">
            <summary>
            获得/设置 上传成功状态图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonUpload`1.BrowserButtonIcon">
            <summary>
            获得/设置 浏览按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonUpload`1.BrowserButtonClass">
            <summary>
            获得/设置 上传按钮样式 默认 null 使用 Button 默认 Color Primary
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonUpload`1.ShowUploadFileList">
            <summary>
            获得/设置 是否显示上传列表 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonUpload`1.BrowserButtonText">
            <summary>
            获得/设置 浏览按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonUpload`1.BrowserButtonColor">
            <summary>
            获得/设置 浏览按钮颜色
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonUpload`1.Size">
            <summary>
            获得/设置 Size 大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonUpload`1.ChildContent">
            <summary>
            获得/设置 子组件内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ButtonUpload`1.OnGetFileFormat">
            <summary>
            获得/设置 设置文件格式图标回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ButtonUpload`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CardUpload`1">
            <summary>
            CardUpload component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardUpload`1.CanPreviewCallback">
            <summary>
            获得/设置 是否允许预览回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardUpload`1.IconTemplate">
            <summary>
            获得/设置 图标模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardUpload`1.AddIcon">
            <summary>
            获得/设置 新建图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardUpload`1.StatusIcon">
            <summary>
            获得/设置 状态图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardUpload`1.RemoveIcon">
            <summary>
            获得/设置 移除图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardUpload`1.ZoomIcon">
            <summary>
            获得/设置 放大图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardUpload`1.ShowZoomButton">
            <summary>
            获得/设置 是否显示放大按钮 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardUpload`1.ShowDeletedButton">
            <summary>
            获得/设置 是否显示删除按钮 默认 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardUpload`1.IsUploadButtonAtFirst">
            <summary>
            获得/设置 继续上传按钮是否在列表前 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardUpload`1.OnZoomAsync">
            <summary>
            获得/设置 点击 Zoom 图标回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CardUpload`1.AllowExtensions">
            <summary>
            获得/设置 图标文件扩展名集合 ".png"
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CardUpload`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CardUpload`1.TriggerOnChanged(BootstrapBlazor.Components.UploadFile)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DropUpload">
            <summary>
            DropUpload 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropUpload.BodyTemplate">
            <summary>
            获得/设置 Body 模板 默认 null
            <para>设置 BodyTemplate 后 <see cref="P:BootstrapBlazor.Components.DropUpload.IconTemplate"/> <see cref="P:BootstrapBlazor.Components.DropUpload.TextTemplate"/> 不生效</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropUpload.IconTemplate">
             <summary>
            获得/设置 图标模板 默认 null
             </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropUpload.UploadIcon">
            <summary>
            获得/设置 图标 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropUpload.TextTemplate">
            <summary>
            获得/设置 文字模板 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropUpload.UploadText">
            <summary>
            获得/设置 上传文字 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropUpload.ShowFooter">
            <summary>
            获得/设置 是否显示 Footer 默认 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropUpload.FooterTemplate">
            <summary>
            获得/设置 Footer 字符串模板 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropUpload.FooterText">
            <summary>
            获得/设置 Footer 字符串信息 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropUpload.ShowUploadFileList">
            <summary>
            获得/设置 是否显示上传列表 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropUpload.OnGetFileFormat">
            <summary>
            获得/设置 设置文件格式图标回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropUpload.LoadingIcon">
            <summary>
            获得/设置 加载中图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropUpload.InvalidStatusIcon">
            <summary>
            获得/设置 上传失败状态图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DropUpload.ValidStatusIcon">
            <summary>
            获得/设置 上传成功状态图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DropUpload.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FileListUploadBase`1">
            <summary>
            PreviewListUploadBase 基类
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.FileListUploadBase`1.ShowDeleteButton">
            <summary>
            获得/设置 是否显示删除按钮 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FileListUploadBase`1.DeleteIcon">
            <summary>
            获得/设置 删除按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FileListUploadBase`1.ShowDownloadButton">
            <summary>
            获得/设置 是否显示下载按钮 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FileListUploadBase`1.DownloadIcon">
            <summary>
            获得/设置 下载按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FileListUploadBase`1.OnDownload">
            <summary>
            获得/设置 点击下载按钮回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FileListUploadBase`1.CancelIcon">
            <summary>
            获得/设置 取消图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FileListUploadBase`1.OnCancel">
            <summary>
            获得/设置 点击取消按钮回调此方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.FileListUploadBase`1.IconTheme">
            <summary>
            <see cref="P:BootstrapBlazor.Components.FileListUploadBase`1.IconTheme"/> 服务实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FileListUploadBase`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.InputUpload`1">
            <summary>
            InputUpload 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InputUpload`1.BrowserButtonIcon">
            <summary>
            获得/设置 浏览按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InputUpload`1.BrowserButtonClass">
            <summary>
            获得/设置 上传按钮样式 默认 btn-primary
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InputUpload`1.BrowserButtonText">
            <summary>
            获得/设置 浏览按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InputUpload`1.DeleteButtonClass">
            <summary>
            获得/设置 删除按钮样式 默认 btn-danger
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InputUpload`1.DeleteButtonIcon">
            <summary>
            获得/设置 删除按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InputUpload`1.DeleteButtonText">
            <summary>
            获得/设置 重置按钮显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InputUpload`1.ShowDeleteButton">
            <summary>
            获得/设置 是否显示删除按钮 默认为 false 不显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.InputUpload`1.PlaceHolder">
            <summary>
            获得/设置 PlaceHolder 占位符文本
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.InputUpload`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IUpload">
            <summary>
            IUpload 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IUpload.UploadFiles">
            <summary>
            获得/设置 上传文件实例集合
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.UploadBase`1">
            <summary>
            Upload 组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.IsSingle">
            <summary>
            获得/设置 是否仅上传一次 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.Max">
            <summary>
            获得/设置 最大上传个数 默认为最大值 <see cref="F:System.Int32.MaxValue"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.MaxFileCount">
            <summary>
            获得/设置 最大上传个数 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.OnAllFileUploaded">
            <summary>
            获得/设置 所有文件上传完毕回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.DefaultFileList">
            <summary>
            获得/设置 已上传文件集合，可用于组件初始化
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.ShowProgress">
            <summary>
            获得/设置 是否显示上传进度 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.Accept">
            <summary>
            获得/设置 上传接收的文件格式 默认为 null 接收任意格式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.Capture">
            <summary>
            获得/设置 媒体捕获机制的首选面向模式，默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.IsDirectory">
            <summary>
            获得/设置 是否上传整个目录 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.IsMultiple">
            <summary>
            获得/设置 是否允许多文件上传 默认 false 不允许
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.OnDelete">
            <summary>
            获得/设置 点击删除按钮时回调此方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.OnChange">
            <summary>
            获得/设置 点击浏览按钮时回调此方法，如果多文件上传此回调会触发多次 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.UploadFiles">
            <summary>
            获得/设置 已上传文件集合，此集合中数据是用户上传文件集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadBase`1.Files">
            <summary>
            Gets the collection of files to be uploaded.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase`1.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase`1.FormatValueAsString(`0)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase`1.OnFileChange(Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs)">
            <summary>
            User selects files callback method
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase`1.TriggerOnChanged(BootstrapBlazor.Components.UploadFile)">
            <summary>
            触发 OnChanged 事件回调方法
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase`1.OnFileDelete(BootstrapBlazor.Components.UploadFile)">
            <summary>
            Delete file method.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase`1.GetShowProgress(BootstrapBlazor.Components.UploadFile)">
            <summary>
            是否显示进度条方法
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase`1.Update(BootstrapBlazor.Components.UploadFile)">
            <summary>
            更新上传进度方法
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase`1.GetUploadFiles">
            <summary>
            获得当前文件集合
            <para>Get the files collection.</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase`1.CanUpload">
            <summary>
            检查是否可以继续上传文件
            <para>Check whether can upload file.</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase`1.CheckStatus">
            <summary>
            检查上传按钮是否可用方法 不可用时返回 true
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase`1.ShowAddButton">
            <summary>
            判断是否显示新建按钮
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase`1.Reset">
            <summary>
            清空上传列表方法
            <para>Clear the upload files collection.</para>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadBase`1.GetUploadAdditionalAttributes">
            <summary>
            append html attribute method.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.UploadFile">
            <summary>
            上传组件返回类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.FileName">
            <summary>
            获得/设置 文件名 由用户指定 上传文件时此参数未设置 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.OriginFileName">
            <summary>
            获得/设置 原始文件名(上传时 IBrowserFile.Name 实例赋值)
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.Size">
            <summary>
            获得/设置 文件大小
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.Code">
            <summary>
            获得/设置 文件上传结果 0 表示成功 非零表示失败
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.PrevUrl">
            <summary>
            获得/设置 文件预览地址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.Error">
            <summary>
            获得/设置 错误信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.File">
            <summary>
            获得/设置 上传文件实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.FileCount">
            <summary>
            获得/设置 上传文件总数量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.UpdateCallback">
            <summary>
            获得/设置 更新进度回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.ProgressPercent">
            <summary>
            获得/设置 更新进度回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.Uploaded">
            <summary>
            获得/设置 文件是否上传处理完毕
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadFile.ValidateId">
            <summary>
            获得/设置 用于客户端验证 Id
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadFile.GetFileName">
            <summary>
            获得 UploadFile 文件名
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadFile.GetExtension">
            <summary>
            获得 UploadFile 文件扩展名
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.UploadPreviewList">
            <summary>
            UploadPreviewList component
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.Items">
            <summary>
            Gets or sets the collection of files to be uploaded.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.IsDisabled">
            <summary>
            Gets or sets the disable status of the upload list.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.ShowProgress">
            <summary>
            Gets or sets a value indicating whether progress should be displayed during the operation.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.OnGetFileFormat">
            <summary>
            Gets or sets the upload file format callback method.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.OnCancel">
            <summary>
            <para>Gets or sets the callback method for the cancel button click event. Default is null</para>
            <para>获得/设置 点击取消按钮回调此方法 默认 null</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.CancelIcon">
            <summary>
            获得/设置 取消图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.LoadingIcon">
            <summary>
            <para>获得/设置 浏览按钮图标</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.DownloadIcon">
            <summary>
            获得/设置 下载按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.InvalidStatusIcon">
            <summary>
            获得/设置 上传失败状态图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.ValidStatusIcon">
            <summary>
            获得/设置 上传成功状态图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.DeleteIcon">
            <summary>
            获得/设置 删除按钮图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.ShowDownloadButton">
            <summary>
            获得/设置 是否显示下载按钮 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.OnDownload">
            <summary>
            获得/设置 点击下载按钮回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.OnDelete">
            <summary>
            获得/设置 点击删除按钮时回调此方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.FileIconExcel">
            <summary>
            获得/设置 Excel 类型文件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.FileIconDocx">
            <summary>
            获得/设置 Excel 类型文件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.FileIconPPT">
            <summary>
            获得/设置 Excel 类型文件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.FileIconAudio">
            <summary>
            获得/设置 Excel 类型文件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.FileIconVideo">
            <summary>
            获得/设置 Excel 类型文件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.FileIconCode">
            <summary>
            获得/设置 Excel 类型文件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.FileIconPdf">
            <summary>
            获得/设置 Excel 类型文件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.FileIconZip">
            <summary>
            获得/设置 Excel 类型文件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.FileIconArchive">
            <summary>
            获得/设置 Excel 类型文件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.FileIconImage">
            <summary>
            获得/设置 Excel 类型文件图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.UploadPreviewList.FileIconFile">
            <summary>
            获得/设置 Excel 类型文件图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadPreviewList.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IValidateCollection">
            <summary>
            IValidateCollection 多个验证结果接口 支持组件间联动验证
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IValidateCollection.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            验证方法
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IValidateCollection.GetValidMemberNames">
            <summary>
            返回合法成员集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IValidateCollection.GetInvalidMemberNames">
            <summary>
            返回非法成员集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IValidateComponent">
            <summary>
            IValidateComponent 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IValidateComponent.IsNeedValidate">
            <summary>
            获得/设置 是否不进行验证 默认为 false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IValidateComponent.IsComplexValue(System.Object)">
            <summary>
            判断是否需要进行复杂类验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IValidateComponent.ValidatePropertyAsync(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            数据验证方法
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.IValidateComponent.ToggleMessage(System.Collections.Generic.IReadOnlyCollection{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            显示或者隐藏提示信息方法
            </summary>
            <param name="results"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ValidateBase`1">
            <summary>
            支持客户端验证的文本框基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.PreviousParsingAttemptFailed">
            <summary>
            获得/设置 上一次转化是否失败 为 true 时表示上一次转化失败
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.PreviousErrorMessage">
            <summary>
            获得/设置 上一次转化失败错误描述信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.EditContext">
            <summary>
            Gets the associated <see cref="P:BootstrapBlazor.Components.ValidateBase`1.EditContext"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.ErrorMessage">
            <summary>
            获得/设置 错误描述信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.ValidCss">
            <summary>
            获得/设置 数据合规样式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.IsValid">
            <summary>
            获得/设置 组件是否合规 默认为 null 未检查
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.Disabled">
            <summary>
            获得 组件是否被禁用属性值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.Required">
            <summary>
            是否显示 必填项标记
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.CurrentValue">
            <summary>
            Gets or sets the current value of the input.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.CurrentValueAsString">
            <summary>
            Gets or sets the current value of the input, represented as a string.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.OnValueChanged">
            <summary>
            获得/设置 Value 改变时回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.ParsingErrorMessage">
            <summary>
            获得/设置 类型转化失败格式化字符串 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.SkipValidate">
            <summary>
            获得/设置 是否不进行验证 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.IsDisabled">
            <summary>
            获得/设置 是否禁用 默认为 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.ShowRequired">
            <summary>
            获得/设置 是否显示必填项标记 默认为 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.RequiredErrorMessage">
            <summary>
            获得/设置 必填项错误文本 默认为 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.CascadedEditContext">
            <summary>
            获得 父组件的 EditContext 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <summary>
            Parses a string to create an instance of <typeparamref name="TValue"/>. Derived classes can override this to change how
            <see cref="P:BootstrapBlazor.Components.ValidateBase`1.CurrentValueAsString"/> interprets incoming values.
            </summary>
            <param name="value">The string value to be parsed.</param>
            <param name="result">An instance of <typeparamref name="TValue"/>.</param>
            <param name="validationErrorMessage">If the value could not be parsed, provides a validation error message.</param>
            <returns>True if the value could be parsed; otherwise false.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.FormatParsingErrorMessage">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.IsRequired">
            <summary>
            判断是否为必填字段
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.FieldClass">
            <summary>
            Gets a string that indicates the status of the field being edited. This will include
            some combination of "modified", "valid", or "invalid", depending on the status of the field.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.CssClass">
            <summary>
            Gets a CSS class string that combines the <c>class</c> attribute and <see cref="P:BootstrapBlazor.Components.ValidateBase`1.FieldClass"/>
            properties. Derived components should typically use this value for the primary HTML element's class attribute.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            SetParametersAsync 方法
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.OnInitialized">
            <summary>
            OnInitialized 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.Rules">
            <summary>
            获得 数据验证方法集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.ValidateRules">
            <summary>
            获得/设置 自定义验证集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.IsNeedValidate">
            <summary>
            获得/设置 是否不进行验证 默认为 false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.IsComplexValue(System.Object)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.ValidatePropertyAsync(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            属性验证方法
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.ToggleMessage(System.Collections.Generic.IReadOnlyCollection{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            显示/隐藏验证结果方法
            </summary>
            <param name="results"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateBase`1.ValidateModule">
            <summary>
            Gets or sets the module of validate instance.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.LoadValidateModule">
            <summary>
            加载 validate 模块方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.ShowValidResult">
            <summary>
            增加客户端 Tooltip 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.RemoveValidResult(System.String)">
            <summary>
            移除客户端 Tooltip 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.OnValidate(System.Nullable{System.Boolean})">
            <summary>
            客户端检查完成时调用此方法
            </summary>
            <param name="valid">检查结果</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.DisposeAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="disposing"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.AddRequiredValidator">
            <summary>
            增加 <see cref="T:BootstrapBlazor.Components.RequiredValidator"/> 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.SetDisable(System.Boolean)">
            <summary>
            设置是否可用状态
            </summary>
            <param name="disable"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.SetValue(`0)">
            <summary>
            设置 Value 值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateBase`1.SetLabel(System.String)">
            <summary>
            设置 Label 值
            </summary>
            <param name="label"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorDataAnnotationsValidator">
            <summary>
            BootstrapBlazorDataAnnotationsValidator 验证组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorDataAnnotationsValidator.CurrentEditContext">
            <summary>
            获得/设置 当前编辑数据上下文
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorDataAnnotationsValidator.ValidateForm">
            <summary>
            获得/设置 当前编辑窗体上下文
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorDataAnnotationsValidator.OnInitialized">
            <summary>
            初始化方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorDataAnnotationsValidator.Validate">
            <summary>
            手动验证表单方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ValidateForm">
            <summary>
            ValidateForm 组件类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.OnValidSubmit">
            <summary>
            A callback that will be invoked when the form is submitted and the
            <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext"/> is determined to be valid.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.OnInvalidSubmit">
            <summary>
            A callback that will be invoked when the form is submitted and the
            <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext"/> is determined to be invalid.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.OnFieldValueChanged">
            <summary>
            A callback that will be invoked when the field's value has been changed
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.ShowAllInvalidResult">
            <summary>
            获得/设置 是否显示所有验证失败字段的提示信息 默认 false 仅显示第一个验证失败字段的提示信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.ValidateAllProperties">
            <summary>
            获得/设置 是否验证所有字段 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.Model">
            <summary>
            Specifies the top-level model object for the form. An edit context will
            be constructed for this model. If using this parameter, do not also supply
            a value for <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.ChildContent">
            <summary>
            Specifies the content to be rendered inside this
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.ShowRequiredMark">
            <summary>
            获得/设置 是否获取必填项标记 默认为 true 显示
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.ShowLabel">
            <summary>
            获得/设置 是否显示验证表单内的 Label 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.ShowLabelTooltip">
            <summary>
            获得/设置 是否显示标签 Tooltip 多用于标签文字过长导致裁减时使用 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.DisableAutoSubmitFormByEnter">
            <summary>
            获得/设置 是否禁用表单内回车自动提交功能 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.LabelWidth">
            <summary>
            获得/设置 标签宽度 默认 null 未设置使用全局设置 <code>--bb-row-label-width</code> 值
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ValidateForm._validatorCache">
            <summary>
            验证组件缓存
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ValidateForm._validateResults">
            <summary>
            验证组件验证结果缓存
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.ValidMemberNames">
            <summary>
            验证合法成员集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.InvalidMemberNames">
            <summary>
            验证非法成员集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateForm.OnParametersSet">
            <summary>
            OnParametersSet 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateForm.AddValidator(System.ValueTuple{System.String,System.Type},System.ValueTuple{Microsoft.AspNetCore.Components.Forms.FieldIdentifier,BootstrapBlazor.Components.IValidateComponent})">
            <summary>
            添加数据验证组件到 EditForm 中
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateForm.TryRemoveValidator(System.ValueTuple{System.String,System.Type},System.ValueTuple{Microsoft.AspNetCore.Components.Forms.FieldIdentifier,BootstrapBlazor.Components.IValidateComponent}@)">
            <summary>
            移除数据验证组件到 EditForm 中
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateForm.SetError``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)">
            <summary>
            设置指定字段错误信息
            </summary>
            <param name="expression"></param>
            <param name="errorMessage">错误描述信息，可为空，为空时查找资源文件</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateForm.SetError(System.String,System.String)">
            <summary>
            设置指定字段错误信息
            </summary>
            <param name="propertyName">字段名，可以使用多层，如 a.b.c</param>
            <param name="errorMessage">错误描述信息，可为空，为空时查找资源文件</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateForm.ValidateObject(System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            EditModel 数据模型验证方法
            </summary>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateForm.ValidateFieldAsync(System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            通过表单内绑定的字段验证方法
            </summary>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateForm.ValidateDataAnnotations(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult},System.Reflection.PropertyInfo,System.String)">
            <summary>
            通过属性设置的 DataAnnotation 进行数据验证
            </summary>
            <param name="value"></param>
            <param name="context"></param>
            <param name="results"></param>
            <param name="propertyInfo"></param>
            <param name="memberName"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateForm.ValidateProperty(System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            验证整个模型时验证属性方法
            </summary>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateForm.RegisterAsyncSubmitButton(BootstrapBlazor.Components.ButtonBase)">
            <summary>
            注册提交按钮
            </summary>
            <param name="button"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateForm.Validate">
            <summary>
            验证方法 用于代码调用触发表单验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidateForm.NotifyFieldChanged(Microsoft.AspNetCore.Components.Forms.FieldIdentifier@,System.Object)">
            <summary>
            通知属性改变方法
            </summary>
            <param name="fieldIdentifier"></param>
            <param name="value"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.ValueChangedFields">
            <summary>
            获取 当前表单值改变的属性集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.ValidateForm.ValueChagnedFields">
            <summary>
            获取 当前表单值改变的属性集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.Waterfall">
            <summary>
            Waterfall 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Waterfall.OnClickItemAsync">
            <summary>
            获得/设置 点击列表项回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Waterfall.OnRequestAsync">
            <summary>
            获得/设置 请求数据回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Waterfall.Template">
            <summary>
            获得/设置 模板 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Waterfall.ItemTemplate">
            <summary>
            获得/设置 图片模板 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Waterfall.LoadTemplate">
            <summary>
            获得/设置 加载模板
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Waterfall.ItemWidth">
            <summary>
            获得/设置 每一项宽度 默认 216
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Waterfall.ItemMinHeight">
            <summary>
            获得/设置 每一项最小宽度 默认 316 用于显示 loading 图标
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Waterfall.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Waterfall.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Waterfall.OnloadAsync(BootstrapBlazor.Components.WaterfallItem)">
            <summary>
            请求数据回调方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Waterfall.OnClickItem(BootstrapBlazor.Components.WaterfallItem)">
            <summary>
            点击图片回调方法
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.WaterfallItem">
            <summary>
            Waterfall 组件数据类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WaterfallItem.Id">
            <summary>
            获得/设置 id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WaterfallItem.Url">
            <summary>
            the url of image element
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Watermark">
            <summary>
            Watermark 组件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Watermark.ChildContent">
            <summary>
            获得/设置 组件内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Watermark.Text">
            <summary>
            获得/设置 水印文本 默认 BootstrapBlazor
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Watermark.FontSize">
            <summary>
            获得/设置 字体大小 默认 null 未设置 默认使用 16px 字体大小 单位 px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Watermark.Color">
            <summary>
            获得/设置 颜色 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Watermark.Rotate">
            <summary>
            获得/设置 水印的旋转角度 默认 null 45°
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Watermark.ZIndex">
            <summary>
            获得/设置 水印元素的 z-index 值 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Watermark.Gap">
            <summary>
            获得/设置 水印之间的间距 值 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Watermark.IsPage">
            <summary>
            获得/设置 是否为整页面水印 默认 false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Watermark.OnParametersSet">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.Watermark.OnAfterRenderAsync(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Watermark.InvokeInitAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.WebSpeechRecognition">
            <summary>
            WebSpeechRecognition 类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechRecognition.#ctor(BootstrapBlazor.Components.JSModule,BootstrapBlazor.Components.IComponentIdGenerator)">
            <summary>
            WebSpeechRecognition 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognition.OnStartAsync">
            <summary>
            fired when the speech recognition service has begun listening to incoming audio with intent to recognize grammars associated with the current SpeechRecognition.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognition.OnEndAsync">
            <summary>
            fired when the speech recognition service has disconnected.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognition.OnSpeechStartAsync">
            <summary>
            fired when sound recognized by the speech recognition service as speech has been detected.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognition.OnSpeechEndAsync">
            <summary>
            fired when speech recognized by the speech recognition service has stopped being detected.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognition.OnResultAsync">
            <summary>
            fired when the speech recognition service returns a result — a word or phrase has been positively recognized and this has been communicated back to the app
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognition.OnErrorAsync">
            <summary>
            fired when a speech recognition error occurs.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognition.OnNoMatchAsync">
            <summary>
            fired when the speech recognition service returns a final result with no significant recognition.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechRecognition.StartAsync(System.String)">
            <summary>
            开始识别方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechRecognition.StartAsync(BootstrapBlazor.Components.WebSpeechRecognitionOption)">
            <summary>
            开始识别方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechRecognition.StopAsync">
            <summary>
            结束识别方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechRecognition.AbortAsync">
            <summary>
            中断识别方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechRecognition.TriggerStartCallback">
            <summary>
            开始识别回调方法由 Javascript 调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechRecognition.TriggerSpeechStartCallback">
            <summary>
            语音开始回调方法由 Javascript 调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechRecognition.TriggerSpeechEndCallback">
            <summary>
            语音结束回调方法由 Javascript 调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechRecognition.TriggerErrorCallback(BootstrapBlazor.Components.WebSpeechRecognitionError)">
            <summary>
            异常回调方法由 Javascript 调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechRecognition.TriggerResultCallback(BootstrapBlazor.Components.WebSpeechRecognitionEvent)">
            <summary>
            识别结果回调方法由 Javascript 调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechRecognition.TriggerNoMatchCallback(BootstrapBlazor.Components.WebSpeechRecognitionError)">
            <summary>
            无识别结果回调方法由 Javascript 调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechRecognition.TriggerEndCallback">
            <summary>
            朗读结束回调方法由 Javascript 调用
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.WebSpeechRecognitionError">
            <summary>
            WebSpeechRecognitionError 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognitionError.Error">
            <summary>
            A string naming the type of error. no-speech aborted audio-capture network not-allowed service-not-allowed bad-grammar language-not-supported.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognitionError.Message">
            <summary>
            A string containing more details about the error that was raised. Note that the spec does not define the exact wording of these messages — this is up to the implementors to decide upon.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.WebSpeechRecognitionEvent">
            <summary>
            WebSpeechRecognitionEvent 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognitionEvent.Transcript">
            <summary>
            获得/设置 识别文本内容
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognitionEvent.IsFinal">
            <summary>
            获得/设置 是否已经结束
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.WebSpeechRecognitionOption">
            <summary>
            WebSpeechRecognitionOption 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognitionOption.MaxAlternatives">
            <summary>
            sets the maximum number of SpeechRecognitionAlternatives provided per SpeechRecognitionResult.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognitionOption.Continuous">
            <summary>
            whether continuous results are returned for each recognition, or only a single result.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognitionOption.InterimResults">
            <summary>
            whether interim results should be returned (true) or not (false). Interim results are results that are not yet final (e.g. the SpeechRecognitionResult.isFinal property is false).
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechRecognitionOption.Lang">
            <summary>
            sets the language of the current SpeechRecognition. If not specified, this defaults to the HTML lang attribute value, or the user agent's language setting if that isn't set either.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.WebSpeechSynthesisError">
            <summary>
            WebSpeechSynthesisError 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisError.CharIndex">
            <summary>
            Returns the index position of the character in the SpeechSynthesisUtterance.text that was being spoken when the event was triggered.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisError.ElapsedTime">
            <summary>
            Returns the elapsed time in seconds after the SpeechSynthesisUtterance.text started being spoken that the event was triggered at.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisError.Error">
            <summary>
            Returns an error code indicating what has gone wrong with a speech synthesis attempt.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.WebSpeechSynthesisUtterance">
            <summary>
            WebSpeechSynthesisUtterance 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisUtterance.Text">
            <summary>
            gets and sets the text that will be synthesized when the utterance is spoken.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisUtterance.Lang">
            <summary>
            gets and sets A string representing a BCP 47 language tag
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisUtterance.Pitch">
            <summary>
            gets and sets the pitch at which the utterance will be spoken at.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisUtterance.Rate">
            <summary>
            gets and sets the speed at which the utterance will be spoken at.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisUtterance.Voice">
            <summary>
            gets and sets the voice that will be used to speak the utterance.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisUtterance.Volume">
            <summary>
            gets and sets the volume that the utterance will be spoken at.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.WebSpeechSynthesisVoice">
            <summary>
            WebSpeechSynthesisVoice 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisVoice.Default">
            <summary>
            获得/设置 是否为默认
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisVoice.Lang">
            <summary>
            获得/设置 indicating the language of the voice.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisVoice.Name">
            <summary>
            获得/设置 human-readable name that represents the voice.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisVoice.LocalService">
            <summary>
            获得/设置 indicating whether the voice is supplied by a local speech synthesizer service
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesisVoice.VoiceURI">
            <summary>
            获得/设置 the type of URI and location of the speech synthesis service for this voice.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.WebSpeechSynthesizer">
            <summary>
            WebSpeechSynthesizer 类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechSynthesizer.#ctor(BootstrapBlazor.Components.JSModule,BootstrapBlazor.Components.IComponentIdGenerator)">
            <summary>
            WebSpeechSynthesizer 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesizer.OnEndAsync">
            <summary>
            获得/设置 朗读结束回调方法 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebSpeechSynthesizer.OnErrorAsync">
            <summary>
            获得/设置 发生错误回调方法 默认 null
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechSynthesizer.GetVoices">
            <summary>
            获得 语音包方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechSynthesizer.SpeakAsync(BootstrapBlazor.Components.WebSpeechSynthesisUtterance)">
            <summary>
            开始朗读方法
            </summary>
            <param name="utterance"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechSynthesizer.SpeakAsync(System.String,System.String)">
            <summary>
            开始朗读方法
            </summary>
            <param name="text"></param>
            <param name="lang"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechSynthesizer.SpeakAsync(System.String,BootstrapBlazor.Components.WebSpeechSynthesisVoice)">
            <summary>
            开始朗读方法
            </summary>
            <param name="text"></param>
            <param name="voice"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechSynthesizer.PauseAsync">
            <summary>
            暂停朗读方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechSynthesizer.ResumeAsync">
            <summary>
            恢复朗读方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechSynthesizer.CancelAsync">
            <summary>
            取消朗读方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechSynthesizer.TriggerErrorCallback(BootstrapBlazor.Components.WebSpeechSynthesisError)">
            <summary>
            朗读异常回调方法由 Javascript 调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechSynthesizer.TriggerEndCallback">
            <summary>
            朗读结束回调方法由 Javascript 调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechSynthesizer.TriggerSpeakingCallback">
            <summary>
            正在朗读回调方法由 Javascript 调用
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.WebSpeechService">
            <summary>
            Web Speech 服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechService.#ctor(Microsoft.JSInterop.IJSRuntime,BootstrapBlazor.Components.IComponentIdGenerator)">
            <summary>
            Web Speech 服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechService.CreateSynthesizerAsync">
            <summary>
            语音合成方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebSpeechService.CreateRecognitionAsync">
            <summary>
            语音识别方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.JsonDescriptionEnumConverter`1">
            <summary>
            Enum type converter that serializes the [Description] attribute of enum values to strings.
            It is recommended to use <see cref="T:BootstrapBlazor.Components.JsonEnumConverter"/> instead.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.JsonDescriptionEnumConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Reads and converts the JSON to the specified enum type.
            </summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">The serializer options.</param>
            <returns>The converted enum value.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JsonDescriptionEnumConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Writes the specified enum value as a string using its [Description] attribute.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value to write.</param>
            <param name="options">The serializer options.</param>
        </member>
        <member name="T:BootstrapBlazor.Components.JsonEnumConverter">
            <summary>
            JsonEnumConverter is an enum converter that allows customization of enum serialization.
            </summary>
            <param name="camelCase">Optional naming policy for writing enum values.</param>
            <param name="allowIntegerValues">True to allow undefined enum values. When true, if an enum value isn't defined it will output as a number rather than a string.</param>
        </member>
        <member name="M:BootstrapBlazor.Components.JsonEnumConverter.#ctor(System.Boolean,System.Boolean)">
            <summary>
            JsonEnumConverter is an enum converter that allows customization of enum serialization.
            </summary>
            <param name="camelCase">Optional naming policy for writing enum values.</param>
            <param name="allowIntegerValues">True to allow undefined enum values. When true, if an enum value isn't defined it will output as a number rather than a string.</param>
        </member>
        <member name="M:BootstrapBlazor.Components.JsonEnumConverter.CreateConverter(System.Type)">
            <summary>
            Creates a JsonConverter for the specified type.
            </summary>
            <param name="typeToConvert">The type to convert.</param>
            <returns>A JsonConverter for the specified type.</returns>
        </member>
        <member name="T:BootstrapBlazor.Components.JsonQueryPageOptionsConverter">
            <summary>
            QueryPageOptions json converter
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.JsonQueryPageOptionsConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:BootstrapBlazor.Components.JsonQueryPageOptionsConverter.Write(System.Text.Json.Utf8JsonWriter,BootstrapBlazor.Components.QueryPageOptions,System.Text.Json.JsonSerializerOptions)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:BootstrapBlazor.Components.DataTableDynamicContext">
            <summary>
            DataTable 动态数据上下文实现类 <see cref="T:BootstrapBlazor.Components.DynamicObjectContext" />
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DataTableDynamicContext.DataTable">
            <summary>
            获得/设置 相关联的 DataTable 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DataTableDynamicContext.UseCache">
            <summary>
            获得/设置 是否启用内部缓存 默认 true 启用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DataTableDynamicContext.Caches">
            <summary>
            负责将 DataRow 与 Items 关联起来方便查找提高效率
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DataTableDynamicContext.OnAddAsync">
            <summary>
            添加行回调委托
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DataTableDynamicContext.OnDeleteAsync">
            <summary>
            删除行回调委托
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DataTableDynamicContext.#ctor(System.Data.DataTable,System.Action{BootstrapBlazor.Components.DataTableDynamicContext,BootstrapBlazor.Components.ITableColumn},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            构造函数
            </summary>
            <param name="table"></param>
            <param name="addAttributesCallback"></param>
            <param name="invisibleColumns">永远不显示的列集合 默认为 null 全部显示</param>
            <param name="shownColumns">显示列集合 默认为 null 全部显示</param>
            <param name="hiddenColumns">隐藏列集合 默认为 null 无隐藏列</param>
        </member>
        <member name="M:BootstrapBlazor.Components.DataTableDynamicContext.GetItems">
            <summary>
            GetItems 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DataTableDynamicContext.GetColumns">
            <summary>
            GetItems 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DataTableDynamicContext.InternalGetColumns">
            <summary>
            获得列信息方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DataTableDynamicContext.OnColumnCreating(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DataTableDynamicContext.AddAsync(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IDynamicObject})">
            <summary>
            新建方法
            </summary>
            <param name="selectedItems">当前选中行</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DataTableDynamicContext.DeleteAsync(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IDynamicObject})">
            <summary>
            删除方法
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DataTableDynamicContext.OnCellValueChanged(BootstrapBlazor.Components.IDynamicObject,BootstrapBlazor.Components.ITableColumn,System.Object)">
            <summary>
            动态类型变更回调方法
            </summary>
            <param name="item"></param>
            <param name="column"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DataTableDynamicObject">
            <summary>
            DataTable 动态类实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DataTableDynamicObject.Row">
            <summary>
            获得/设置 DataRow 实例
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DataTableDynamicObject.GetValue(System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DataTableDynamicObject.SetValue(System.String,System.Object)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.DynamicColumnsObject">
            <summary>
            动态列类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicColumnsObject.Columns">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicColumnsObject.DynamicObjectPrimaryKey">
            <summary>
            获得/设置 行主键
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicColumnsObject.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            构造函数
            </summary>
            <param name="columnsData"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicColumnsObject.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicColumnsObject.GetValue(System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicColumnsObject.SetValue(System.String,System.Object)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.DynamicItemChangedType">
            <summary>
            DynamicItemChangedType 类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DynamicItemChangedType.Add">
            <summary>
            新建
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DynamicItemChangedType.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DynamicObject">
            <summary>
            动态类型实体类 <see cref="T:BootstrapBlazor.Components.IDynamicObject" /> 实例
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicObject.DynamicObjectPrimaryKey">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObject.GetValue(System.String)">
            <summary>
            获得指定属性值方法
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObject.SetValue(System.String,System.Object)">
            <summary>
            给指定属性设置值方法
            </summary>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.DynamicObjectContext">
            <summary>
            动态类型上下文基类 <see cref="T:BootstrapBlazor.Components.IDynamicObjectContext" />
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContext.GetColumns">
            <summary>
            获取动态类型各列信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContext.GetItems">
            <summary>
            获得动态类数据方法
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicObjectContext.CustomerAttributeBuilderCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContext.AddAttribute(System.String,System.Type,System.Type[],System.Object[],System.Reflection.PropertyInfo[],System.Object[])">
            <summary>
            添加标签到指定列
            </summary>
            <param name="columnName">指定列名称</param>
            <param name="attributeType">Attribute 实例</param>
            <param name="types"></param>
            <param name="constructorArgs"></param>
            <param name="propertyInfos"></param>
            <param name="propertyValues"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContext.OnColumnCreating(BootstrapBlazor.Components.ITableColumn)">
            <summary>
            列创建回调方法 入口参数为 ITableColumn 实例 返回值为 CustomAttributeBuilder 集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContext.AddAsync(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IDynamicObject})">
            <summary>
            动态类型新建回调委托
            </summary>
            <param name="selectedItems">当前选中行</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContext.DeleteAsync(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IDynamicObject})">
            <summary>
            动态类型删除回调委托
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicObjectContext.OnValueChanged">
            <summary>
            动态类型集合变化时回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicObjectContext.OnChanged">
            <summary>
            动态类型属性值变化时回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicObjectContext.EqualityComparer">
            <summary>
            获得选中行比对回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicObjectContext.OnFilterCallback">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DynamicObjectContextArgs">
            <summary>
            DynamicObjectContextArgs 类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContextArgs.#ctor(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IDynamicObject},BootstrapBlazor.Components.DynamicItemChangedType)">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicObjectContextArgs.Items">
            <summary>
            获得 编辑数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DynamicObjectContextArgs.ChangedType">
            <summary>
            获得 数据改变类型 默认 Add
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IDynamicColumnsObject">
            <summary>
            动态对象接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IDynamicColumnsObject.Columns">
            <summary>
            获得设置 列与列数值集合
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IDynamicObject">
            <summary>
            动态对象接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IDynamicObject.GetValue(System.String)">
            <summary>
            通过指定属性名获取属性值方法
            </summary>
            <param name="propertyName">属性名称</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IDynamicObject.SetValue(System.String,System.Object)">
            <summary>
            通过指定属性名设置属性值方法
            </summary>
            <param name="propertyName">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:BootstrapBlazor.Components.IDynamicObject.DynamicObjectPrimaryKey">
            <summary>
            获得/设置 数据主键
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IDynamicObjectContext">
            <summary>
            动态类型上下文接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IDynamicObjectContext.GetColumns">
            <summary>
            获取动态类型各列信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IDynamicObjectContext.GetItems">
            <summary>
            获得动态数据方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IDynamicObjectContext.AddAsync(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IDynamicObject})">
            <summary>
            新建方法
            </summary>
            <param name="selectedItems">当前选中行</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IDynamicObjectContext.DeleteAsync(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IDynamicObject})">
            <summary>
            删除方法
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.IDynamicObjectContext.OnValueChanged">
            <summary>
            获得/设置 动态类型属性值变化时回调方法 默认为 null
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.IDynamicObjectContext.OnFilterCallback">
            <summary>
            获得/设置 动态类型数据集过滤回调委托 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IDynamicObjectContext.OnChanged">
            <summary>
            获得/设置 动态类型集合变化时回调方法 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IDynamicObjectContext.EqualityComparer">
            <summary>
            获得/设置 选中行是否相等判断逻辑 默认为 null
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.AffixPosition">
            <summary>
            AffixPosition 枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.AffixPosition.Top">
            <summary>
            固定在顶部
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.AffixPosition.Bottom">
            <summary>
            固定在底部
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.AggregateType">
            <summary>
            函数枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.AggregateType.Sum">
            <summary>
            合计
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.AggregateType.Average">
            <summary>
            平均数
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.AggregateType.Count">
            <summary>
            数量
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.AggregateType.Min">
            <summary>
            最小值
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.AggregateType.Max">
            <summary>
            最大值
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.AggregateType.Customer">
            <summary>
            自定义
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Alignment">
            <summary>
            对齐方式枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Alignment.None">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Alignment.Left">
            <summary>
            左对齐
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Alignment.Center">
            <summary>
            居中对齐
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Alignment.Right">
            <summary>
            右对齐
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BreakPoint">
            <summary>
            BreakPoint 枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BreakPoint.None">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BreakPoint.ExtraExtraSmall">
            <summary>
            超小屏幕 小于 375px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BreakPoint.ExtraSmall">
            <summary>
            超小屏幕 大于等于 375px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BreakPoint.Small">
            <summary>
            小屏幕 大于等于 576px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BreakPoint.Medium">
            <summary>
            中屏幕 大于等于 768px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BreakPoint.Large">
            <summary>
            大屏幕 大于等于 992px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BreakPoint.ExtraLarge">
            <summary>
            超大屏幕 大于等于 1200px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BreakPoint.ExtraExtraLarge">
            <summary>
            超大屏幕 大于等于 1400px
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ButtonStyle">
            <summary>
            按钮样式枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ButtonStyle.None">
            <summary>
            默认风格
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ButtonStyle.Round">
            <summary>
            圆角按钮
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ButtonStyle.Circle">
            <summary>
            圆形胶囊按钮
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ButtonType">
            <summary>
            按钮类型枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ButtonType.Button">
            <summary>
            正常按钮
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ButtonType.Submit">
            <summary>
            提交按钮
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ButtonType.Reset">
            <summary>
            重置按钮
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CalendarViewMode">
            <summary>
            日历组件显示模式枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CalendarViewMode.Month">
            <summary>
            月视图
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CalendarViewMode.Week">
            <summary>
            周视图
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CarouselPlayMode">
            <summary>
            Carousel 组件播放方式枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CarouselPlayMode.AutoPlayOnload">
            <summary>
            加载后自动播放
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CarouselPlayMode.AutoPlayAfterManually">
            <summary>
            用户点击按钮后自动播放
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CarouselPlayMode.Manually">
            <summary>
            用户控制
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CheckboxState">
            <summary>
            CheckBox 组件状态枚举值
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CheckboxState.UnChecked">
            <summary>
            未选中
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CheckboxState.Checked">
            <summary>
            选中
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.CheckboxState.Indeterminate">
            <summary>
            不确定
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Color">
            <summary>
            颜色枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.None">
            <summary>
            无颜色
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Active">
            <summary>
            active
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Primary">
            <summary>
            primary
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Secondary">
            <summary>
            secondary
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Danger">
            <summary>
            danger
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Warning">
            <summary>
            warning
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Info">
            <summary>
            info
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Light">
            <summary>
            light
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Dark">
            <summary>
            dark
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Color.Link">
            <summary>
            link
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ComponentIcons">
            <summary>
            组件内置图标枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.AnchorLinkIcon">
            <summary>
            AnchorLink 组件 Icon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.AvatarIcon">
            <summary>
            Avatar 组件 Icon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.AvatarUploadDeleteIcon">
            <summary>
            AvatarUpload 组件 DeleteIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.AvatarUploadLoadingIcon">
            <summary>
            AvatarUpload 组件 LoadingIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.AvatarUploadAddIcon">
            <summary>
            AvatarUpload 组件 AddIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.AvatarUploadValidStatusIcon">
            <summary>
            AvatarUpload 组件 ValidStatusIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.AvatarUploadInvalidStatusIcon">
            <summary>
            AvatarUpload 组件 InvalidStatusIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.AutoCompleteIcon">
            <summary>
            AutoComplete 组件 Icon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.AutoFillIcon">
            <summary>
            AutoComplete 组件 Icon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ButtonUploadBrowserButtonIcon">
            <summary>
            ButtonUpload 组件 BrowserButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CameraPlayIcon">
            <summary>
            Camera 组件 PlayIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CameraStopIcon">
            <summary>
            Camera 组件 StopIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CameraPhotoIcon">
            <summary>
            Camera 组件 PhotoIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CardCollapseIcon">
            <summary>
            Card 组件 CollapseIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CardUploadAddIcon">
            <summary>
            CardUpload 组件 AddIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CardUploadStatusIcon">
            <summary>
            CardUpload 组件 StatusIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CardUploadRemoveIcon">
            <summary>
            CardUpload 组件 RemoveIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CardUploadZoomIcon">
            <summary>
            CardUpload 组件 ZoomIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.UploadLoadingIcon">
            <summary>
            ButtonUpload 组件 LoadingIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.UploadInvalidStatusIcon">
            <summary>
            ButtonUpload 组件 FailedInvalidIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.UploadValidStatusIcon">
            <summary>
            ButtonUpload 组件 FailedValidIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.UploadCancelIcon">
            <summary>
            Upload 组件 CancelIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.UploadDeleteIcon">
            <summary>
            CardUpload 组件 DeleteIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.UploadDownloadIcon">
            <summary>
            CardUpload 组件 DownloadIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.DropUploadIcon">
            <summary>
            Upload 组件 UploadIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CascaderIcon">
            <summary>
            Cascader 组件 Icon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CascaderSubMenuIcon">
            <summary>
            Cascader 组件 SubMenuIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ConsoleClearButtonIcon">
            <summary>
            Console 组件 ClearButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ButtonLoadingIcon">
            <summary>
            Button 组件 LoadingIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CaptchaRefreshIcon">
            <summary>
            Captcha 组件 RefreshIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CaptchaBarIcon">
            <summary>
            Captcha 组件 BarIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CarouselPreviousIcon">
            <summary>
            Carousel 组件 PreviousIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.CarouselNextIcon">
            <summary>
            Carousel 组件 NextIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.DatePickBodyPreviousYearIcon">
            <summary>
            DateTimeBody 组件 上一年属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.DatePickBodyPreviousMonthIcon">
            <summary>
            DateTimeBody 组件 上一月属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.DatePickBodyNextMonthIcon">
            <summary>
            DateTimeBody 组件 下一月属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.DatePickBodyNextYearIcon">
            <summary>
            DateTimeBody 组件 下一年属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.DateTimePickerIcon">
            <summary>
            DateTimePicker 组件 Icon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.DialogCloseButtonIcon">
            <summary>
            Dialog 组件 CloseButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.DialogSaveButtonIcon">
            <summary>
            Dialog 组件 SaveButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.DialogMaximizeWindowIcon">
            <summary>
            Dialog 组件 MaximizeIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.DialogRestoreWindowIcon">
            <summary>
            Dialog 组件 MaximizeIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ResultDialogYesIcon">
            <summary>
            ResultDialog 组件 YesIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ResultDialogNoIcon">
            <summary>
            ResultDialog 组件 NoIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ResultDialogCloseIcon">
            <summary>
            ResultDialog 组件 CloseIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.SearchDialogClearIcon">
            <summary>
            SearchDialog 组件 ClearIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.SearchDialogSearchIcon">
            <summary>
            SearchDialog 组件 SearchIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TimePickerCellUpIcon">
            <summary>
            TimePickerCell 组件 UpIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TimePickerCellDownIcon">
            <summary>
            TimePickerCell 组件 DownIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.DateTimeRangeIcon">
            <summary>
            DateTimeRange 组件 Icon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.DateTimeRangeClearIcon">
            <summary>
            DateTimeRange 组件 ClearIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FilterButtonFilterIcon">
            <summary>
            FilterButton 组件 FilterIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FilterButtonClearIcon">
            <summary>
            FilterButton 组件 ClearIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.SideMenuDropdownIcon">
            <summary>
            SideMenu 组件 DropdownIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TopMenuDropdownIcon">
            <summary>
            TopMenu 组件 DropdownIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.MenuLinkArrowIcon">
            <summary>
            MenuLink 组件 ArrowIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableFilterPlusIcon">
            <summary>
            TableFilter 组件 PlusIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableFilterMinusIcon">
            <summary>
            TableFilter 组件 MinusIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ImagePreviewPreviousIcon">
            <summary>
            ImagePreviewer 组件 PreviousIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ImagePreviewNextIcon">
            <summary>
            ImagePreviewer 组件 NextIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ImagePreviewMinusIcon">
            <summary>
            ImagePreviewer 组件 MinusIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ImagePreviewPlusIcon">
            <summary>
            ImagePreviewer 组件 PlusIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ImagePreviewRotateLeftIcon">
            <summary>
            ImagePreviewer 组件 RotateLeftIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ImagePreviewRotateRightIcon">
            <summary>
            ImagePreviewer 组件 RotateRightIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ImageViewerFileIcon">
            <summary>
            ImageViewer 组件 FileIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.InputNumberMinusIcon">
            <summary>
            InputNumber 组件 MinusIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.InputNumberPlusIcon">
            <summary>
            InputNumber 组件 PlusIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.InputUploadBrowserButtonIcon">
            <summary>
            InputUpload 组件 BrowserIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.InputUploadDeleteButtonIcon">
            <summary>
            InputUpload 组件 BrowserIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.LayoutMenuBarIcon">
            <summary>
            Layout 组件 MenuBarIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.LogoutLinkIcon">
            <summary>
            LogoutLink 组件 Icon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.LoadingIcon">
            <summary>
            Button 组件 LoadingIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.GoTopIcon">
            <summary>
            GoTop 组件 Icon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.PaginationPrevPageIcon">
            <summary>
            Pagination 组件 PrevPageIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.PaginationNextPageIcon">
            <summary>
            Pagination 组件 NextPageIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.PaginationPrevEllipsisPageIcon">
            <summary>
            Pagination 组件 PrevEllipsisPageIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.PaginationNextEllipsisPageIcon">
            <summary>
            Pagination 组件 NextEllipsisPageIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.PopConfirmButtonConfirmIcon">
            <summary>
            PopConfirmButton 组件 ConfirmIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.PopConfirmButtonContentCloseButtonIcon">
            <summary>
            PopConfirmButton 组件弹窗中 CloseButtonIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.PopConfirmButtonContentConfirmButtonIcon">
            <summary>
            PopConfirmButton 组件弹窗中 ConfirmButtonIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.RateStarIcon">
            <summary>
            Rate 组件 StarIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.RateUnStarIcon">
            <summary>
            Rate 组件 UnStarIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.RibbonTabArrowUpIcon">
            <summary>
            RibbonTab 组件 ArrowUpIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.RibbonTabArrowDownIcon">
            <summary>
            RibbonTab 组件 ArrowDownIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.RibbonTabArrowPinIcon">
            <summary>
            RibbonTab 组件 ArrowPinIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.MultiSelectDropdownIcon">
            <summary>
            MultiSelect 组件 DropdownIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.MultiSelectCloseIcon">
            <summary>
            MultiSelect 组件 CloseButtonIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.MultiSelectClearIcon">
            <summary>
            MultiSelect 组件 ClearIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.SelectTreeDropdownIcon">
            <summary>
            SelectTree 组件 DropdownIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.StepIcon">
            <summary>
            Step 组件 Icon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.StepErrorIcon">
            <summary>
            Step 组件 ErrorIcon 图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableColumnToolboxIcon">
            <summary>
            Table 组件 ColumnToolboxIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableSortIconAsc">
            <summary>
            Table 组件 SortIconAsc 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableSortDesc">
            <summary>
            Table 组件 SortDesc 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableSortIcon">
            <summary>
            Table 组件 SortIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableFilterIcon">
            <summary>
            Table 组件 FilterIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableExportButtonIcon">
            <summary>
            Table 组件 ExportButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.SearchClearButtonIcon">
            <summary>
            Search 组件 ClearButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.SearchButtonIcon">
            <summary>
            Search 组件 SearchButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.SearchButtonLoadingIcon">
            <summary>
            Search 组件 SearchButtonLoadingIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.SelectDropdownIcon">
            <summary>
            Select 组件 DropdownIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.SelectClearIcon">
            <summary>
            Select 组件 ClearIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.SelectSearchIcon">
            <summary>
            Select 组件 SearchIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FullScreenButtonIcon">
            <summary>
            FullScreenButton 组件 Icon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FullScreenExitButtonIcon">
            <summary>
            FullScreenButton 组件 FullScreenExitButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.PrintButtonIcon">
            <summary>
            Print 组件 ButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.SweetAlertCloseIcon">
            <summary>
            SweetAlertBody 组件 CloseButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.SweetAlertConfirmIcon">
            <summary>
            SweetAlertBody 组件 SweetAlertConfirmIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableAddButtonIcon">
            <summary>
            Table 组件 AddButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableEditButtonIcon">
            <summary>
            Table 组件 EditButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableDeleteButtonIcon">
            <summary>
            Table 组件 DeleteButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableRefreshButtonIcon">
            <summary>
            Table 组件 RefreshButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableCardViewButtonIcon">
            <summary>
            Table 组件 CardViewButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableColumnListButtonIcon">
            <summary>
            Table 组件 ColumnListButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableExportExcelIcon">
            <summary>
            Table 组件 ExportExcelIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableExportCsvIcon">
            <summary>
            Table 组件 ExportCsvIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableExportPdfIcon">
            <summary>
            Table 组件 ExportPdfIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableSearchButtonIcon">
            <summary>
            Table 组件 SearchButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableResetSearchButtonIcon">
            <summary>
            Table 组件 ResetSearchButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableCloseButtonIcon">
            <summary>
            Table 组件 CloseButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableSaveButtonIcon">
            <summary>
            Table 组件 SaveButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableAdvanceButtonIcon">
            <summary>
            Table 组件 AdvanceButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableCancelButtonIcon">
            <summary>
            Table 组件 CancelButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableTreeNodeLoadingIcon">
            <summary>
            Table 组件 TreeNodeLoadingIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableTreeIcon">
            <summary>
            Table 组件 TreeIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableTreeExpandIcon">
            <summary>
            Table 组件 TreeExpandIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableCopyColumnButtonIcon">
            <summary>
            Table 组件 CopyColumnButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableGearIcon">
            <summary>
            Table 组件 GearIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TableAdvancedSortButtonIcon">
            <summary>
            Table 组件 AdvancedSortButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TabPreviousIcon">
            <summary>
            Tab 组件 PreviousIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TabNextIcon">
            <summary>
            Tab 组件 NextIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ToastSuccessIcon">
            <summary>
            ToastOption SuccessIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ToastInformationIcon">
            <summary>
            ToastOption InformationIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ToastWarningIcon">
            <summary>
            ToastOption WarningIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ToastErrorIcon">
            <summary>
            ToastOption ErrorIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TabDropdownIcon">
            <summary>
            Tab 组件 DropdownIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TabCloseIcon">
            <summary>
            Tab 组件 CloseIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TabRefreshButtonIcon">
            <summary>
            Tab 组件 RefreshToolbarButtonIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TabContextMenuRefreshIcon">
            <summary>
            Tab 组件 TabContextMenuRefreshIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TabContextMenuCloseIcon">
            <summary>
            Tab 组件 TabContextMenuCloseIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TabContextMenuCloseOtherIcon">
            <summary>
            Tab 组件 TabContextMenuCloseOtherIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TabContextMenuCloseAllIcon">
            <summary>
            Tab 组件 TabContextMenuCloseAllIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TabContextMenuFullScreenIcon">
            <summary>
            Tab 组件 TabContextMenuFullScreenIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TimerIcon">
            <summary>
            Timer 组件 Icon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TransferLeftIcon">
            <summary>
            Transfer 组件 LeftIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TransferRightIcon">
            <summary>
            Transfer 组件 RightIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TransferPanelSearchIcon">
            <summary>
            TransferPanel 组件 SearchIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TreeViewExpandNodeIcon">
            <summary>
            TreeView 组件 ExpandNodeIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TreeViewSearchIcon">
            <summary>
            TreeView 组件 SearchIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TreeViewResetSearchIcon">
            <summary>
            TreeView 组件 ClearSearchIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TreeViewLoadingIcon">
            <summary>
            TreeView 组件 LoadingIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TreeViewToolbarEditButton">
            <summary>
            TreeView 组件 ToolbarEditButton 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.TreeViewNodeIcon">
            <summary>
            TreeView 组件 NodeIcon 属性图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FileIconExcel">
            <summary>
            Upload 组件 Excel 文件类型图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FileIconDocx">
            <summary>
            Upload 组件 Word 文件类型图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FileIconPPT">
            <summary>
            Upload 组件 PPT 文件类型图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FileIconAudio">
            <summary>
            Upload 组件 音频文件类型图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FileIconVideo">
            <summary>
            Upload 组件 视频文件类型图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FileIconCode">
            <summary>
            Upload 组件 代码文件类型图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FileIconPdf">
            <summary>
            Upload 组件 PDF 文件类型图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FileIconZip">
            <summary>
            Upload 组件 Zip 文件类型图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FileIconArchive">
            <summary>
            Upload 组件 文档文件类型图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FileIconImage">
            <summary>
            Upload 组件 Image 文件类型图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.FileIconFile">
            <summary>
            Upload 组件 File 文件类型图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.QueryBuilderMinusIcon">
            <summary>
            QueryBuilder 组件 减少按钮图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.QueryBuilderPlusIcon">
            <summary>
            QueryBuilder 组件 增加按钮图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.QueryBuilderRemoveIcon">
            <summary>
            QueryBuilder 组件 移除按钮图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ThemeProviderAutoModeIcon">
            <summary>
            ThemeProvider 组件 自动模式图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ThemeProviderDarkModeIcon">
            <summary>
            ThemeProvider 组件 暗黑模式图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ThemeProviderLightModeIcon">
            <summary>
            ThemeProvider 组件 明亮模式图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.ThemeProviderActiveModeIcon">
            <summary>
            ThemeProvider 组件 明亮模式图标
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ComponentIcons.InputClearIcon">
            <summary>
            Input 组件 ClearIcon 图标
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DatePickerViewMode">
            <summary>
            DateTimePicker 组件视图显示模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DatePickerViewMode.DateTime">
            <summary>
            年月日时分秒模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DatePickerViewMode.Date">
            <summary>
            年月日模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DatePickerViewMode.Month">
            <summary>
            月视图
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DatePickerViewMode.Year">
            <summary>
            年视图
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DateTimeRangeRenderMode">
            <summary>
            DateTimeRangeRenderMode 组件视图显示模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DateTimeRangeRenderMode.Single">
            <summary>
            Single Component Mode
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DateTimeRangeRenderMode.Double">
            <summary>
            Double Panel Mode
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DialMode">
            <summary>
            DialButton 呈现方式枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DialMode.Linear">
            <summary>
            线性分布
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DialMode.Radial">
            <summary>
            辐射分布
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Direction">
            <summary>
            下拉框枚举类
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Direction.Dropdown">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Direction.Dropup">
            <summary>
            Dropup
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Direction.Dropleft">
            <summary>
            Dropleft
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Direction.Dropright">
            <summary>
            Dropright
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DOMEvents">
            <summary>
            浏览器event事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Click">
            <summary>
            Click 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Dblclick">
            <summary>
            Dblclick 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Mouseup">
            <summary>
            Mouseup 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Mousedown">
            <summary>
            Mousedown 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Contextmenu">
            <summary>
            Contextmenu 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Mousewheel">
            <summary>
            Mousewheel 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.DOMMouseScroll">
            <summary>
            DOMMouseScroll 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Mouseover">
            <summary>
            Mouseover 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Mouseout">
            <summary>
            Mouseout 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Mousemove">
            <summary>
            Mousemove 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Selectstart">
            <summary>
            Selectstart 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Selectend">
            <summary>
            Selectend 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Keydown">
            <summary>
            Keydown 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Keypress">
            <summary>
            Keypress 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Keyup">
            <summary>
            Keyup 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Orientationchange">
            <summary>
            Orientationchange 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Touchstart">
            <summary>
            Touchstart 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Touchmove">
            <summary>
            Touchmove 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Touchend">
            <summary>
            Touchend 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Touchcancel">
            <summary>
            Touchcancel 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Pointerdown">
            <summary>
            Pointerdown 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Pointermove">
            <summary>
            Pointermove 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Pointerup">
            <summary>
            Pointerup 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Pointerleave">
            <summary>
            Pointerleave 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Pointercancel">
            <summary>
            Pointercancel 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Gesturestart">
            <summary>
            Gesturestart 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Gesturechange">
            <summary>
            Gesturechange 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Gestureend">
            <summary>
            Gestureend 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Focus">
            <summary>
            Focus 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Blur">
            <summary>
            Blur 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Change">
            <summary>
            Change 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Reset">
            <summary>
            Reset 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Select">
            <summary>
            Select 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Submit">
            <summary>
            Submit 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Focusin">
            <summary>
            Focusin 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Focusout">
            <summary>
            Focusout 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Load">
            <summary>
            Load 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Unload">
            <summary>
            Unload 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Beforeunload">
            <summary>
            Beforeunload 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Resize">
            <summary>
            Resize 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Move">
            <summary>
            Move 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.DOMContentLoaded">
            <summary>
            DOMContentLoaded 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Readystatechange">
            <summary>
            Readystatechange 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Error">
            <summary>
            Error 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Abort">
            <summary>
            Abort 事件枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DOMEvents.Scroll">
            <summary>
            Scroll 事件枚举
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.EditMode">
            <summary>
            Table 组件编辑模式枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.EditMode.Popup">
            <summary>
            弹窗式编辑模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.EditMode.EditForm">
            <summary>
            行内编辑模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.EditMode.InCell">
            <summary>
            单元格内编辑模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.EditMode.Drawer">
            <summary>
            抽屉编辑模式
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.EditSubmitKey">
            <summary>
            EditSubmitKeys 枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.EditSubmitKey.Enter">
            <summary>
            Enter 键
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.EditSubmitKey.Space">
            <summary>
            Space 键
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FilterAction">
            <summary>
            关系运算符
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.NotEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.GreaterThan">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.GreaterThanOrEqual">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.LessThan">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.LessThanOrEqual">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.Contains">
            <summary>
            包含
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.NotContains">
            <summary>
            不包含
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterAction.CustomPredicate">
            <summary>
            自定义条件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FilterLogic">
            <summary>
            逻辑运算符
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterLogic.And">
            <summary>
            并且
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FilterLogic.Or">
            <summary>
            或者
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FlipClockViewMode">
            <summary>
            显示模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FlipClockViewMode.DateTime">
            <summary>
            时间
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FlipClockViewMode.Count">
            <summary>
            计数
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FlipClockViewMode.CountDown">
            <summary>
            倒计时
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.FullScreenSize">
            <summary>
            Size 枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FullScreenSize.None">
            <summary>
            无设置
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FullScreenSize.Always">
            <summary>
            始终全屏
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FullScreenSize.Small">
            <summary>
            sm 小设置小于 576px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FullScreenSize.Medium">
            <summary>
            md 中等设置小于 768px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FullScreenSize.Large">
            <summary>
            lg 大设置小于 992px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FullScreenSize.ExtraLarge">
            <summary>
            xl 超大设置小于 1200px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.FullScreenSize.ExtraExtraLarge">
            <summary>
            xxl 超大设置小于 1400px
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.HorizontalAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.HorizontalAlignment.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.HorizontalAlignment.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.HorizontalAlignment.Right">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.InsertRowMode">
            <summary>
            Table 组件 <see cref="T:BootstrapBlazor.Components.EditMode"/> 为非弹窗模式时新建行模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.InsertRowMode.First">
            <summary>
            第一行
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.InsertRowMode.Last">
            <summary>
            最后一行
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ItemsPerRow">
            <summary>
            每行显示多少组件的枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ItemsPerRow.One">
            <summary>
            每行一个
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ItemsPerRow.Two">
            <summary>
            每行两个
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ItemsPerRow.Three">
            <summary>
            每行三个
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ItemsPerRow.Four">
            <summary>
            每行四个
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ItemsPerRow.Six">
            <summary>
            每行六个
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ItemsPerRow.Twelve">
            <summary>
            每行12个
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.MarqueeDirection">
            <summary>
            Marquee组件，文本滚动方向枚举类型
            <para>Marquee component, Text scrolling direction enumeration</para>
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.MarqueeDirection.LeftToRight">
            <summary>
            文本从左向右滚动
            scrolling text from left to right
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.MarqueeDirection.RightToLeft">
            <summary>
            文本从右向左滚动
            scrolling text from right to left
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.MarqueeDirection.TopToBottom">
            <summary>
            Marquee组件，从上到下滚动文本
            scrolling text from top to bottom
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.MarqueeDirection.BottomToTop">
            <summary>
            从下至上滚动文本>
            Scroll text from bottom to top
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.MessageShowMode">
            <summary>
            消息显示模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.MessageShowMode.Single">
            <summary>
            单个模式，始终显示一个消息弹窗
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.MessageShowMode.Multiple">
            <summary>
            多个模式，消息均显示
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ObjectFitMode">
            <summary>
            Image 组件图片填充模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ObjectFitMode.Fill">
            <summary>
            填充 内容拉伸填满
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ObjectFitMode.Contain">
            <summary>
            保持原有尺寸比例 会留白
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ObjectFitMode.Cover">
            <summary>
            覆盖 保持原有尺寸比例 宽度和高度至少有一个和容器一致
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ObjectFitMode.None">
            <summary>
            保持原有尺寸比例
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ObjectFitMode.ScaleDown">
            <summary>
            依次设置了 none 或 contain, 最终呈现的是尺寸比较小的那个
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.OtpInputType">
            <summary>
            OTP input type
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.OtpInputType.Number">
            <summary>
            Number OTP Input 
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.OtpInputType.Text">
            <summary>
            Text OTP Input 
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.OtpInputType.Password">
            <summary>
            Password OTP Input 
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Placement">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.Auto">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.TopStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.TopCenter">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.TopEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.Middle">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.MiddleStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.MiddleCenter">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.MiddleEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.BottomStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.BottomCenter">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.BottomEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.LeftStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.LeftEnd">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.RightStart">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Placement.RightEnd">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PopoverType">
            <summary>
            弹出框类型枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.PopoverType.Tooltip">
            <summary>
            工具条
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.PopoverType.Popover">
            <summary>
            弹出层
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.RecognizerStatus">
            <summary>
            语音合成状态枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.RecognizerStatus.Start">
            <summary>
            正在识别
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.RecognizerStatus.Finished">
            <summary>
            识别完毕
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.RecognizerStatus.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.RecognizerStatus.Error">
            <summary>
            出错
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.RowType">
            <summary>
            行内格式枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.RowType.Normal">
            <summary>
            默认格式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.RowType.Inline">
            <summary>
            表单中使用 label 在左，控件不充满
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ScrollMode">
            <summary>
            数据滚动模式枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollMode.None">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollMode.Virtual">
            <summary>
            虚拟滚动
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ScrollToViewAlign">
            <summary>
            垂直滚动对齐方式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollToViewAlign.Start">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollToViewAlign.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollToViewAlign.End">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollToViewAlign.Nearest">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SearchMode">
            <summary>
            搜索栏渲染模式 默认 Popup 弹窗形式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SearchMode.Popup">
            <summary>
            弹窗模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SearchMode.Top">
            <summary>
            Table 组件上方
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Size">
            <summary>
            Size 枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Size.None">
            <summary>
            无设置
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Size.ExtraSmall">
            <summary>
            xs 超小设置小于 576px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Size.Small">
            <summary>
            sm 小设置大于等于 576px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Size.Medium">
            <summary>
            md 中等设置大于等于 768px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Size.Large">
            <summary>
            lg 大设置大于等于 992px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Size.ExtraLarge">
            <summary>
            xl 超大设置大于等于 1200px
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Size.ExtraExtraLarge">
            <summary>
            xl 超大设置大于等于 1400px
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SortOrder">
            <summary>
            排序顺序枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SortOrder.Unset">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SortOrder.Asc">
            <summary>
            升序 0-9 A-Z
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SortOrder.Desc">
            <summary>
            降序 9-0 Z-A
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SpinnerType">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SpinnerType.Border">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SpinnerType.Grow">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.StackAlignItems">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StackAlignItems.Stretch">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StackAlignItems.Start">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StackAlignItems.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StackAlignItems.End">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StackAlignItems.Baseline">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.StackJustifyContent">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StackJustifyContent.Start">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StackJustifyContent.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StackJustifyContent.End">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StackJustifyContent.Between">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StackJustifyContent.Around">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StackJustifyContent.Evenly">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.StepStatus">
            <summary>
            步骤状态枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StepStatus.Wait">
            <summary>
            未开始
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StepStatus.Process">
            <summary>
            进行中
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StepStatus.Finish">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StepStatus.Success">
            <summary>
            已完成
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.StepStatus.Error">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SwalCategory">
            <summary>
            SweetAlert 提示类型枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SwalCategory.Success">
            <summary>
            成功信息
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SwalCategory.Error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SwalCategory.Warning">
            <summary>
            警告信息
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SwalCategory.Information">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SwalCategory.Question">
            <summary>
            疑问信息
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SynthesizerStatus">
            <summary>
            语音合成状态枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SynthesizerStatus.Synthesizer">
            <summary>
            正在合成
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SynthesizerStatus.Finished">
            <summary>
            朗读完毕
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SynthesizerStatus.Cancel">
            <summary>
            取消
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SynthesizerStatus.Error">
            <summary>
            出错
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableExportType">
            <summary>
            Table 组件导出类型枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableExportType.Unknown">
            <summary>
            未知格式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableExportType.Excel">
            <summary>
            Excel 格式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableExportType.Csv">
            <summary>
            Csv 格式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableExportType.Pdf">
            <summary>
            Pdf 格式
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableHeaderStyle">
            <summary>
            表格 thead 样式枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableHeaderStyle.None">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableHeaderStyle.Light">
            <summary>
            浅色
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableHeaderStyle.Dark">
            <summary>
            深色
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableRenderMode">
            <summary>
            Table 视图枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableRenderMode.Auto">
            <summary>
            自动
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableRenderMode.Table">
            <summary>
            Table 布局适用于大屏幕
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TableRenderMode.CardView">
            <summary>
            卡片式布局适用于小屏幕
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TabStyle">
            <summary>
            Tab style emnu
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TabStyle.Default">
            <summary>
            The default style
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TabStyle.Chrome">
            <summary>
            The Chrome style
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TabStyle.Capsule">
            <summary>
            The Capsule style
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TimePickerCellViewMode">
            <summary>
            时间选择组件视图
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TimePickerCellViewMode.Hour">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TimePickerCellViewMode.Minute">
            <summary>
            分钟
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TimePickerCellViewMode.Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ToastCategory">
            <summary>
            Toast 组件类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ToastCategory.Success">
            <summary>
            成功信息
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ToastCategory.Information">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ToastCategory.Error">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ToastCategory.Warning">
            <summary>
            警告信息
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TransitionType">
            <summary>
            TransitionType 枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeIn">
            <summary>
            淡入效果
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeOut">
            <summary>
            淡出效果
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.Bounce">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.Flash">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.Pulse">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.RubberBand">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.Shake">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.ShakeX">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.ShakeY">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.HeadShake">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.Swing">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.Tada">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.Wobble">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.Jello">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BounceIn">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BounceInDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BounceInLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BounceInRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BounceInUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BounceOut">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BounceOutDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BounceOutLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BounceOutRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BounceOutUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeInDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeInDownBig">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeInLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeInLeftBig">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeInRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeInRightBig">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeInUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeInUpBig">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeOutDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeOutDownBig">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeOutLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeOutLeftBig">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeOutRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeOutRightBig">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeOutUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeOutUpBig">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FlipInX">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FlipInY">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FlipOutX">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FlipOutY">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.LightSpeedIn">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.LightSpeedOut">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.LightSpeedInRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.LightSpeedInLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.LightSpeedOutRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.LightSpeedOutLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.RotateIn">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.RotateInDownLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.RotateInDownRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.RotateInUpLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.RotateInUpRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.RotateOut">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.RotateOutDownLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.RotateOutDownRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.RotateOutUpLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.RotateOutUpRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.Hinge">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.JackInTheBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.RollIn">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.RollOut">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.ZoomIn">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.ZoomInDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.ZoomInLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.ZoomInRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.ZoomInUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.ZoomOut">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.ZoomOutDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.ZoomOutLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.ZoomOutRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.ZoomOutUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.SlideInDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.SlideInLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.SlideInRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.SlideInUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.SlideOutDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.SlideOutLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.SlideOutRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.SlideOutUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.HeartBeat">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeInTopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeInTopRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeInBottomLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeInBottomRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeOutTopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeOutTopRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeOutBottomRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.FadeOutBottomLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BackOutDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BackOutLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BackOutRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TransitionType.BackOutUp">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.UploadStyle">
            <summary>
            上传组件模式枚举类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.UploadStyle.Normal">
            <summary>
            正常模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.UploadStyle.ClickToUpload">
            <summary>
            点击上传
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.UploadStyle.Avatar">
            <summary>
            上传头像模式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.UploadStyle.Card">
            <summary>
            预览卡片模式
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.WebClientDeviceType">
            <summary>
            客户端设备类型
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.WebClientDeviceType.PC">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.WebClientDeviceType.Mobile">
            <summary>
            
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.WebClientDeviceType.Tablet">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AssemblyExtensions.GetUniqueName(System.Reflection.Assembly)">
            <summary>
            获得唯一类型名称方法
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.BluetoothExtensions">
            <summary>
            Bluetooth 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BluetoothExtensions.GetServicesList(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.BluetoothServicesEnum})">
            <summary>
            获得指定蓝牙服务字符串集合
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorEditContextDataAnnotationsExtensions">
            <summary>
            BootstrapBlazorEditContextDataAnnotationsExtensions 扩展操作类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorEditContextDataAnnotationsExtensions.AddEditContextDataAnnotationsValidation(Microsoft.AspNetCore.Components.Forms.EditContext,BootstrapBlazor.Components.ValidateForm,System.IServiceProvider)">
            <summary>
            添加数据合规检查
            </summary>
            <param name="editContext">The <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext"/>.</param>
            <param name="editForm"></param>
            <param name="provider"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorOptionsExtensions">
            <summary>
            BootstrapBlazorOptions configuration class extension methods
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorOptionsExtensions.GetStep``1(BootstrapBlazor.Components.BootstrapBlazorOptions)">
            <summary>
            Get step size generic method
            </summary>
            <typeparam name="TType">The type parameter</typeparam>
            <param name="options">The BootstrapBlazorOptions instance</param>
            <returns>The step size as a string</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorOptionsExtensions.GetStep(BootstrapBlazor.Components.BootstrapBlazorOptions,System.Type)">
            <summary>
            Get step size method
            </summary>
            <param name="options">The BootstrapBlazorOptions instance</param>
            <param name="type">The data type</param>
            <returns>The step size as a string</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorOptionsExtensions.GetIsFadeValue(BootstrapBlazor.Components.BootstrapBlazorOptions,System.Nullable{System.Boolean})">
            <summary>
            Get Modal IsFade value
            </summary>
            <param name="options">The BootstrapBlazorOptions instance</param>
            <param name="value">The default value</param>
            <returns>The IsFade value as a boolean</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ConsoleMessageItemExtensions.RenderMessage(BootstrapBlazor.Components.ConsoleMessageItem)">
            <summary>
            渲染消息方法
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DateTimeExtensions">
            <summary>
            DateTime 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeExtensions.GetSafeMonthDateTime(System.DateTime,System.Int32)">
            <summary>
            获得安全的月份时间
            </summary>
            <param name="dt"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeExtensions.ToLunarDateTime(System.DateTime)">
            <summary>
            获得阴历时间方法
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeExtensions.ToLunarText(System.DateTime,System.Boolean,BootstrapBlazor.Components.ICalendarFestivals)">
            <summary>
            获得阴历信息
            </summary>
            <param name="dt"></param>
            <param name="showSolarTerm"></param>
            <param name="calendarFestivals"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DialogServiceExtensions">
            <summary>
            DialogService extensions method
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogServiceExtensions.Show``1(BootstrapBlazor.Components.DialogService,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},BootstrapBlazor.Components.Dialog)">
            <summary>
            Show dialog with generic type.
            </summary>
            <param name="service">DialogService 服务实例</param>
            <param name="title">对话框标题，优先级高于 <see cref="P:BootstrapBlazor.Components.DialogOption.Title"/></param>
            <param name="parameters">TComponent 组件所需要的参数集合</param>
            <param name="dialog">指定弹窗组件 默认为 null 使用 <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRoot"/> 组件内置弹窗组件</param>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogServiceExtensions.ShowSearchDialog``1(BootstrapBlazor.Components.DialogService,BootstrapBlazor.Components.SearchDialogOption{``0},BootstrapBlazor.Components.Dialog)">
            <summary>
            弹出搜索对话框
            </summary>
            <param name="service">DialogService 服务实例</param>
            <param name="option">SearchDialogOption 配置类实例</param>
            <param name="dialog">指定弹窗组件 默认为 null 使用 <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRoot"/> 组件内置弹窗组件</param>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogServiceExtensions.ShowEditDialog``1(BootstrapBlazor.Components.DialogService,BootstrapBlazor.Components.EditDialogOption{``0},BootstrapBlazor.Components.Dialog)">
            <summary>
            弹出编辑对话框
            </summary>
            <param name="service"><see cref="T:BootstrapBlazor.Components.DialogService"/> 服务实例</param>
            <param name="option"><see cref="T:BootstrapBlazor.Components.ITableEditDialogOption`1"/> 配置类实例</param>
            <param name="dialog"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogServiceExtensions.ShowModal``1(BootstrapBlazor.Components.DialogService,BootstrapBlazor.Components.ResultDialogOption,BootstrapBlazor.Components.Dialog)">
            <summary>
            弹出带结果的对话框
            </summary>
            <param name="service">DialogService 服务实例</param>
            <param name="option">对话框参数</param>
            <param name="dialog">指定弹窗组件 默认为 null 使用 <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRoot"/> 组件内置弹窗组件</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogServiceExtensions.ShowModal(BootstrapBlazor.Components.DialogService,System.String,System.String,BootstrapBlazor.Components.ResultDialogOption,BootstrapBlazor.Components.Dialog)">
            <summary>
            弹出带结果的对话框
            </summary>
            <param name="service">DialogService 服务实例</param>
            <param name="title">对话框标题，优先级高于 <see cref="P:BootstrapBlazor.Components.DialogOption.Title"/></param>
            <param name="content">对话框 <see cref="T:Microsoft.AspNetCore.Components.MarkupString"/> 文本参数</param>
            <param name="option"><see cref="T:BootstrapBlazor.Components.ResultDialogOption"/> 对话框参数实例</param>
            <param name="dialog">指定弹窗组件 默认为 null 使用 <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRoot"/> 组件内置弹窗组件</param>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogServiceExtensions.ShowSaveDialog``1(BootstrapBlazor.Components.DialogService,System.String,System.Func{System.Threading.Tasks.Task{System.Boolean}},System.Action{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Action{BootstrapBlazor.Components.DialogOption},BootstrapBlazor.Components.Dialog)">
            <summary>
            弹出带保存按钮对话窗方法
            </summary>
            <typeparam name="TComponent"></typeparam>
            <param name="service">DialogService 服务实例</param>
            <param name="title">弹窗标题</param>
            <param name="saveCallback">点击保存按钮回调委托方法 返回 true 时关闭弹窗</param>
            <param name="parametersFactory">TComponent 组件所需参数</param>
            <param name="configureOption"><see cref="T:BootstrapBlazor.Components.DialogOption"/> 实例配置回调方法</param>
            <param name="dialog"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogServiceExtensions.ShowCloseDialog``1(BootstrapBlazor.Components.DialogService,System.String,System.Action{System.Collections.Generic.Dictionary{System.String,System.Object}},System.Action{BootstrapBlazor.Components.DialogOption},BootstrapBlazor.Components.Dialog)">
            <summary>
            弹出带关闭按钮对话窗方法
            </summary>
            <typeparam name="TComponent"></typeparam>
            <param name="service"></param>
            <param name="title"></param>
            <param name="parametersFactory"></param>
            <param name="configureOption"></param>
            <param name="dialog"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogServiceExtensions.ShowValidateFormDialog``1(BootstrapBlazor.Components.DialogService,System.String,System.Func{BootstrapBlazor.Components.DialogOption,System.Collections.Generic.Dictionary{System.String,System.Object}},System.Action{BootstrapBlazor.Components.DialogOption},BootstrapBlazor.Components.Dialog)">
            <summary>
            弹出表单对话窗方法
            </summary>
            <typeparam name="TComponent"></typeparam>
            <param name="service">DialogService 服务实例</param>
            <param name="title">弹窗标题</param>
            <param name="parametersFactory">TComponent 组件所需参数</param>
            <param name="configureOption"><see cref="T:BootstrapBlazor.Components.DialogOption"/> 实例配置回调方法</param>
            <param name="dialog"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogServiceExtensions.ShowErrorHandlerDialog(BootstrapBlazor.Components.DialogService,Microsoft.AspNetCore.Components.RenderFragment,BootstrapBlazor.Components.Dialog)">
            <summary>
            显示异常信息对话框扩展方法
            </summary>
            <param name="service"></param>
            <param name="fragment"></param>
            <param name="dialog"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DialogServiceExtensions.ShowExceptionDialog(BootstrapBlazor.Components.DialogService,System.Exception,BootstrapBlazor.Components.Dialog)">
            <summary>
            显示异常信息对话框扩展方法
            </summary>
            <param name="service"></param>
            <param name="exception"></param>
            <param name="dialog"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DirectoryInfoExtensions">
            <summary>
            DirectoryInfo 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DirectoryInfoExtensions.Copy(System.IO.DirectoryInfo,System.String,System.Boolean)">
            <summary>
            Copies the contents of the current directory to a specified destination directory.
            </summary>
            <remarks>This method creates the destination directory if it does not already exist. Files in the
            source directory are copied to the destination directory, and if <paramref name="recursive"/> is <see
            langword="true"/>, all subdirectories and their contents are also copied recursively.</remarks>
            <param name="dir">The source directory to copy from.</param>
            <param name="destinationDir">The path of the destination directory where the contents will be copied.</param>
            <param name="recursive"><see langword="true"/> to copy all subdirectories and their contents recursively; otherwise, <see
            langword="false"/>.</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown if the source directory specified by <paramref name="dir"/> does not exist.</exception>
        </member>
        <member name="T:BootstrapBlazor.Components.DownloadServiceExtensions">
            <summary>
            <see cref="T:BootstrapBlazor.Components.DownloadService"/> 扩展类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DownloadServiceExtensions.DownloadFromStreamAsync(BootstrapBlazor.Components.DownloadService,System.String,System.IO.Stream)">
            <summary>
            下载文件方法
            </summary>
            <param name="download"></param>
            <param name="downloadFileName">文件名</param>
            <param name="stream">文件流</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DownloadServiceExtensions.DownloadFromByteArrayAsync(BootstrapBlazor.Components.DownloadService,System.String,System.Byte[])">
            <summary>
            下载文件方法
            </summary>
            <param name="download"></param>
            <param name="downloadFileName">文件名</param>
            <param name="data">Byte[] 数组</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DownloadServiceExtensions.DownloadFolderAsync(BootstrapBlazor.Components.DownloadService,System.String,System.String)">
            <summary>
            下载文件夹方法
            </summary>
            <param name="download"></param>
            <param name="downloadFileName">文件名</param>
            <param name="folder">文件夹路径</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DownloadServiceExtensions.DownloadFromUrlAsync(BootstrapBlazor.Components.DownloadService,System.String,System.String)">
            <summary>
            获取文件连接方法
            </summary>
            <param name="download"></param>
            <param name="downloadFileName">文件名</param>
            <param name="url">文件地址</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DownloadServiceExtensions.DownloadFromFileAsync(BootstrapBlazor.Components.DownloadService,System.String,System.String)">
            <summary>
            下载文件扩展方法
            </summary>
            <param name="download"></param>
            <param name="fileName"></param>
            <param name="physicalFilePath"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DrawerExtensions">
            <summary>
            抽屉服务扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DrawerExtensions.ShowEditDrawer``1(BootstrapBlazor.Components.DrawerService,BootstrapBlazor.Components.TableEditDrawerOption{``0},BootstrapBlazor.Components.DrawerOption)">
            <summary>
            弹出编辑抽屉
            </summary>
            <param name="service"><see cref="T:BootstrapBlazor.Components.DrawerService"/> 服务实例</param>
            <param name="editDialogOption"><see cref="T:BootstrapBlazor.Components.ITableEditDialogOption`1"/> 配置类实例</param>
            <param name="option"><see cref="T:BootstrapBlazor.Components.DrawerOption"/> 配置类实例</param>
        </member>
        <member name="T:BootstrapBlazor.Components.DrawerOptionExtensions">
            <summary>
            <see cref="T:BootstrapBlazor.Components.DrawerOption"/> 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DrawerOptionExtensions.GetContent(BootstrapBlazor.Components.DrawerOption)">
            <summary>
            获得 组件渲染块
            </summary>
            <param name="drawerOption"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DrawerServiceExtensions">
            <summary>
            抽屉服务扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DrawerServiceExtensions.Show``1(BootstrapBlazor.Components.DrawerService,BootstrapBlazor.Components.DrawerOption,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            弹出搜索对话框
            </summary>
            <param name="service">DrawerService 服务实例</param>
            <param name="parameters"></param>
            <param name="option">DrawerOption 配置类实例</param>
        </member>
        <member name="M:BootstrapBlazor.Components.DrawerServiceExtensions.Show(BootstrapBlazor.Components.DrawerService,System.Type,BootstrapBlazor.Components.DrawerOption,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            弹出搜索对话框
            </summary>
            <param name="service">DrawerService 服务实例</param>
            <param name="type"></param>
            <param name="parameters"></param>
            <param name="option">DrawerOption 配置类实例</param>
        </member>
        <member name="T:BootstrapBlazor.Components.DynamicObjectContextExtensions">
            <summary>
            DynamicObjectContext 扩展方法辅助类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContextExtensions.AddRequiredAttribute(BootstrapBlazor.Components.DynamicObjectContext,System.String,System.String,System.Boolean)">
            <summary>
            增加 RequiredAttribute 扩展方法
            </summary>
            <param name="context"></param>
            <param name="columnName"></param>
            <param name="errorMessage"></param>
            <param name="allowEmptyStrings"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContextExtensions.AddAutoGenerateColumnAttribute(BootstrapBlazor.Components.DynamicObjectContext,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            增加 AutoGenerateColumnAttribute 扩展方法
            </summary>
            <param name="context"></param>
            <param name="columnName"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContextExtensions.AddDisplayAttribute(BootstrapBlazor.Components.DynamicObjectContext,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            增加 DisplayAttribute 扩展方法
            </summary>
            <param name="context"></param>
            <param name="columnName"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContextExtensions.AddMultipleParameterAttribute``1(BootstrapBlazor.Components.DynamicObjectContext,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            增加多参数自定义标签泛型方法
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="context"></param>
            <param name="columnName"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContextExtensions.AddDisplayNameAttribute(BootstrapBlazor.Components.DynamicObjectContext,System.String,System.String)">
            <summary>
            增加 DisplayNameAttribute 扩展方法
            </summary>
            <param name="context"></param>
            <param name="columnName"></param>
            <param name="displayName"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContextExtensions.AddDescriptionAttribute(BootstrapBlazor.Components.DynamicObjectContext,System.String,System.String)">
            <summary>
            增加 DescriptionAttribute 扩展方法
            </summary>
            <param name="context"></param>
            <param name="columnName"></param>
            <param name="description"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContextExtensions.AddAttribute``1(BootstrapBlazor.Components.DynamicObjectContext,System.String,System.Type[],System.Object[],System.Reflection.PropertyInfo[],System.Object[])">
            <summary>
            增加自定义标签泛型方法
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="context"></param>
            <param name="columnName"></param>
            <param name="types"></param>
            <param name="constructorArgs"></param>
            <param name="propertyInfos"></param>
            <param name="propertyValues"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DynamicObjectContextExtensions.SetValue(BootstrapBlazor.Components.IDynamicObjectContext,System.Object)">
            <summary>
            扩展方法将指定模型赋值给 context 实例
            </summary>
            <param name="context">DynamicObjectContext 实例</param>
            <param name="model">模型实例</param>
        </member>
        <member name="T:BootstrapBlazor.Components.EnumExtensions">
            <summary>
            枚举类型扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumExtensions.ToDescriptionString``1(``0)">
            <summary>
            获取 DescriptionAttribute 标签方法
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumExtensions.ToDescriptionString(System.Type,System.String)">
            <summary>
            通过字段名称获取 DescriptionAttribute 标签值
            </summary>
            <param name="type"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumExtensions.ToDisplayName``1(``0)">
            <summary>
            通过字段名称获取 DisplayAttribute/DescriptionAttribute 标签值
            </summary>
            <typeparam name="TEnum"></typeparam>
            <param name="enum"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumExtensions.ToSelectList(System.Type,BootstrapBlazor.Components.SelectedItem)">
            <summary>
            获取指定枚举类型的枚举值集合，默认通过 DisplayAttribute DescriptionAttribute 标签显示 DisplayName 支持资源文件 回退机制显示字段名称
            </summary>
            <param name="type"></param>
            <param name="additionalItem"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumExtensions.ToSelectList``1(System.Type,BootstrapBlazor.Components.SelectedItem{``0})">
            <summary>
            获取指定枚举类型的枚举值集合，默认通过 DisplayAttribute DescriptionAttribute 标签显示 DisplayName 支持资源文件 回退机制显示字段名称
            </summary>
            <param name="type"></param>
            <param name="additionalItem"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumExtensions.IsEnum(System.Type)">
            <summary>
            判断类型是否为枚举类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumExtensions.IsFlagEnum(System.Type)">
            <summary>
            判断类型是否为 Flag 枚举类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.EnumExtensions.ParseFlagEnum``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.SelectedItem},System.Type)">
            <summary>
            将 <see cref="T:System.Collections.Generic.IEnumerable`1"/> 集合转换为 Flag 枚举值
            </summary>
            <param name="items"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ExceptionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ExceptionExtensions.Format(System.Exception,System.Collections.Specialized.NameValueCollection)">
            <summary>
            格式化异常信息
            </summary>
            <param name="exception"></param>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ExceptionExtensions.FormatMarkupString(System.Exception,System.Collections.Specialized.NameValueCollection)">
            <summary>
            格式化异常信息
            </summary>
            <param name="exception"></param>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ExpandableNodeExtensions">
            <summary>
            树状结构获取所有项目扩展方法类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeExtensions.GetAllItems``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IExpandableNode{``0}})">
            <summary>
            获得所有节点集合
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeExtensions.GetAllItems``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IExpandableNode{``0}},System.Collections.Generic.List{``0})">
            <summary>
            获得所有节点集合
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="items"></param>
            <param name="results"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeExtensions.GetAllSubItems``1(BootstrapBlazor.Components.IExpandableNode{``0})">
            <summary>
            获得 所有子项集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeExtensions.GetAllTreeSubItems``1(BootstrapBlazor.Components.IExpandableNode{``0})">
            <summary>
            获得 所有 TreeItem 子项集合
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeExtensions.SetChildrenCheck``2(``0,BootstrapBlazor.Components.TreeNodeCache{``0,``1})">
            <summary>
            向下级联设置复选状态
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeExtensions.SetParentCheck``2(``0,BootstrapBlazor.Components.TreeNodeCache{``0,``1})">
            <summary>
            向上级联设置复选状态
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeExtensions.SetParentExpand``2(``0,System.Boolean)">
            <summary>
            向上级联设置展开状态
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeExtensions.CascadingTree``1(System.Collections.Generic.IEnumerable{``0},BootstrapBlazor.Components.TreeViewItem{``0},System.Func{``0,BootstrapBlazor.Components.TreeViewItem{``0},System.Boolean},System.Func{``0,BootstrapBlazor.Components.TreeViewItem{``0}})">
            <summary>
            树状数据层次化方法
            </summary>
            <param name="items">数据集合</param>
            <param name="parent">父级节点</param>
            <param name="predicate">查找子节点 Lambda 表达式</param>
            <param name="valueFactory"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.FieldIdentifierExtensions">
            <summary>
            FieldIdentifier 扩展操作类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FieldIdentifierExtensions.GetDisplayName(Microsoft.AspNetCore.Components.Forms.FieldIdentifier)">
            <summary>
            获取显示名称方法
            </summary>
            <param name="fieldIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.FieldIdentifierExtensions.GetPlaceHolder(Microsoft.AspNetCore.Components.Forms.FieldIdentifier)">
            <summary>
            获取 PlaceHolder 方法
            </summary>
            <param name="fieldIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.FieldIdentifierExtensions.GetRange(Microsoft.AspNetCore.Components.Forms.FieldIdentifier)">
            <summary>
            获取显示名称方法
            </summary>
            <param name="fieldIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.FieldIdentifierExtensions.GetRequiredValidator(Microsoft.AspNetCore.Components.Forms.FieldIdentifier,Microsoft.Extensions.Localization.IStringLocalizerFactory)">
            <summary>
            获得 <see cref="T:BootstrapBlazor.Components.RequiredValidator"/> 实例
            </summary>
            <param name="fieldIdentifier"></param>
            <param name="localizerFactory"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.FullScreenServiceExtensions">
            <summary>
            FullScreenService 服务扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FullScreenServiceExtensions.ToggleByElement(BootstrapBlazor.Components.FullScreenService,Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            通过 ElementReference 将指定元素进行全屏
            </summary>
            <param name="element"></param>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.FullScreenServiceExtensions.ToggleById(BootstrapBlazor.Components.FullScreenService,System.String)">
            <summary>
            通过元素 Id 将指定元素进行全屏
            </summary>
            <param name="id"></param>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.HostEnvironmentExtensions">
            <summary>
            <see cref="T:Microsoft.Extensions.Hosting.IHostEnvironment"/> 扩展方法"
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.HostEnvironmentExtensions.IsWasm(Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            当前程序是否为 WebAssembly 环境
            </summary>
            <param name="hostEnvironment"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ICacheEntryExtensions">
            <summary>
            <see cref="T:Microsoft.Extensions.Caching.Memory.ICacheEntry"/> 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ICacheEntryExtensions.GetLastAccessed(Microsoft.Extensions.Caching.Memory.ICacheEntry,System.Boolean)">
            <summary>
            获得缓存项 <see cref="T:Microsoft.Extensions.Caching.Memory.ICacheEntry"/> 最后访问时间
            </summary>
            <param name="entry"></param>
            <param name="force"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ICacheEntryExtensions.SetDefaultSlidingExpiration(Microsoft.Extensions.Caching.Memory.ICacheEntry,System.TimeSpan)">
            <summary>
            Sets default sliding expiration if no expiration is configured
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IEditorItemExtensions">
            <summary>
            IEditorItem 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IEditorItemExtensions.IsEditable(BootstrapBlazor.Components.IEditorItem,BootstrapBlazor.Components.ItemChangedType,System.Boolean)">
            <summary>
            判断当前 IEditorItem 实例是否可以编辑
            </summary>
            <param name="item"></param>
            <param name="changedType"></param>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IEditorItemExtensions.IsVisible(BootstrapBlazor.Components.IEditorItem,BootstrapBlazor.Components.ItemChangedType,System.Boolean)">
            <summary>
            判断当前 IEditorItem 实例是否显示
            </summary>
            <param name="item"></param>
            <param name="changedType"></param>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IEditorItemExtensions.CanWrite(BootstrapBlazor.Components.IEditorItem,System.Type,BootstrapBlazor.Components.ItemChangedType,System.Boolean)">
            <summary>
            判断当前 IEditorItem 示例是否可以编辑
            </summary>
            <param name="item"></param>
            <param name="modelType"></param>
            <param name="changedType"></param>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IEditorItemExtensions.CanWrite(BootstrapBlazor.Components.IEditorItem,System.Type)">
            <summary>
            判断模型是否可写
            </summary>
            <param name="item"></param>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IIconThemeExtensions">
            <summary>
            FontAwesome 图标库扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IIconThemeExtensions.GetIconByKey(BootstrapBlazor.Components.IIconTheme,BootstrapBlazor.Components.ComponentIcons,System.String)">
            <summary>
            通过指定 Key 获得 Icon 字符串方法
            </summary>
            <param name="iconTheme"></param>
            <param name="key"></param>
            <param name="defaultIcon"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ILooupExtensions">
            <summary>
            <see cref="T:BootstrapBlazor.Components.ILookup"/> 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ILooupExtensions.IsLookup(BootstrapBlazor.Components.ILookup)">
            <summary>
            判断当前 <see cref="T:BootstrapBlazor.Components.ILookup"/> 实例是否配置 Lookup 数据
            </summary>
            <param name="lookup"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ILooupExtensions.GetLookupService(BootstrapBlazor.Components.ILookup,BootstrapBlazor.Components.ILookupService)">
            <summary>
            获得 ILookupService 实例
            </summary>
            <param name="lookup"></param>
            <param name="service"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ILooupExtensions.GetItemsAsync(BootstrapBlazor.Components.ILookup,BootstrapBlazor.Components.ILookupService,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="lookup"></param>
            <param name="service"></param>
            <param name="key"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ILooupExtensions.GetItemsAsync(BootstrapBlazor.Components.ILookupService,System.String,System.Object)">
            <summary>
            根据指定键值获取 Lookup 集合扩展方法，先调用同步方法，如果返回 null 则调用异步方法
            </summary>
            <param name="service"></param>
            <param name="key"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IModelEqualityComparerExtensions">
            <summary>
            IModelEqualComparer 扩展方法类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IModelEqualityComparerExtensions.Equals``1(BootstrapBlazor.Components.IModelEqualityComparer{``0},``0,``0)">
            <summary>
            Equals 扩展方法
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="comparer"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IQueryableExtensions">
            <summary>
            IQueryable 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IQueryableExtensions.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Boolean)">
            <summary>
            BootstrapBlazor 扩展 Where 方法
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="queryable">数据源</param>
            <param name="predicate">过滤条件</param>
            <param name="condition">是否查询条件</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IQueryableExtensions.Sort``1(System.Linq.IQueryable{``0},System.String,BootstrapBlazor.Components.SortOrder,System.Boolean)">
            <summary>
            BootstrapBlazor 扩展 Sort 方法
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="queryable">数据源</param>
            <param name="sortName">排序名称</param>
            <param name="sortOrder">排序策略</param>
            <param name="condition">是否排序</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IQueryableExtensions.Page``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>
            BootstrapBlazor 扩展 Page 方法
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="queryable">数据源</param>
            <param name="skipCount">Skip 数量</param>
            <param name="maxResultCount">Take 数量</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IQueryableExtensions.Count``1(System.Linq.IQueryable{``0},System.Int32@)">
            <summary>
            BootstrapBlazor 扩展 Count 方法
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="queryable">数据源</param>
            <param name="totalCount">结果数量</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IStringLocalizerExtensions">
            <summary>
            IStringLocalizer 实例扩展类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IStringLocalizerExtensions.TryGetLocalizerString(Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.String@)">
            <summary>
            获取指定 Type 的资源文件
            </summary>
            <param name="localizer"></param>
            <param name="key"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IEditItemExtensions">
            <summary>
            IEditItem 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IEditItemExtensions.InheritValue(BootstrapBlazor.Components.ITableColumn,BootstrapBlazor.Components.AutoGenerateClassAttribute)">
            <summary>
            继承 class 标签中设置的参数值
            </summary>
            <param name="dest"></param>
            <param name="source"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.IEditItemExtensions.CopyValue(BootstrapBlazor.Components.ITableColumn,BootstrapBlazor.Components.IEditorItem)">
            <summary>
            属性赋值方法
            </summary>
            <param name="dest"></param>
            <param name="source"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.IEditItemExtensions.ToSearches(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.String)">
            <summary>
            将 ITableColumn 集合转化为 IFilterAction 集合
            </summary>
            <param name="columns"></param>
            <param name="searchText"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IEditItemExtensions.RenderValue``1(BootstrapBlazor.Components.ITableColumn,``0)">
            <summary>
            当前单元格方法
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="col"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ITcpSocketClientExtensions">
            <summary>
            <see cref="T:BootstrapBlazor.Components.ITcpSocketClient"/> 扩展方法类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITcpSocketClientExtensions.SendAsync(BootstrapBlazor.Components.ITcpSocketClient,System.String,System.Text.Encoding,System.Threading.CancellationToken)">
            <summary>
            Sends the specified string content to the connected TCP socket client asynchronously.
            </summary>
            <remarks>This method converts the provided string content into a byte array using the specified
            encoding  (or UTF-8 by default) and sends it to the connected TCP socket client. Ensure the client is connected 
            before calling this method.</remarks>
            <param name="client">The TCP socket client to which the content will be sent. Cannot be <see langword="null"/>.</param>
            <param name="content">The string content to send. Cannot be <see langword="null"/> or empty.</param>
            <param name="encoding">The character encoding to use for converting the string content to bytes.  If <see langword="null"/>, UTF-8
            encoding is used by default.</param>
            <param name="token">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the operation to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that represents the asynchronous operation.  The result is <see
            langword="true"/> if the content was sent successfully; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ITcpSocketClientExtensions.ConnectAsync(BootstrapBlazor.Components.ITcpSocketClient,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Establishes an asynchronous connection to the specified host and port.
            </summary>
            <param name="client">The TCP socket client to which the content will be sent. Cannot be <see langword="null"/>.</param>
            <param name="ipString">The hostname or IP address of the server to connect to. Cannot be null or empty.</param>
            <param name="port">The port number on the server to connect to. Must be a valid port number between 0 and 65535.</param>
            <param name="token">An optional <see cref="T:System.Threading.CancellationToken"/> to cancel the connection attempt. Defaults to <see
            langword="default"/> if not provided.</param>
            <returns>A task that represents the asynchronous operation. The task result is <see langword="true"/> if the connection
            is successfully established; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ITcpSocketClientExtensions.SetDataPackageAdapter(BootstrapBlazor.Components.ITcpSocketClient,BootstrapBlazor.Components.IDataPackageAdapter,System.Func{System.ReadOnlyMemory{System.Byte},System.Threading.Tasks.ValueTask})">
            <summary>
            Configures the specified <see cref="T:BootstrapBlazor.Components.ITcpSocketClient"/> to use the provided <see cref="T:BootstrapBlazor.Components.IDataPackageAdapter"/> 
            for processing received data and sets a callback to handle processed data.
            </summary>
            <remarks>This method sets up a two-way data processing pipeline: <list type="bullet"> <item>
            <description>The <paramref name="client"/> is configured to pass received data to the <paramref name="adapter"/>
            for processing.</description> </item> <item> <description>The <paramref name="adapter"/> is configured to invoke
            the provided <paramref name="callback"/> with the processed data.</description> </item> </list> Use this method
            to integrate a custom data processing adapter with a TCP socket client.</remarks>
            <param name="client">The <see cref="T:BootstrapBlazor.Components.ITcpSocketClient"/> instance to configure.</param>
            <param name="adapter">The <see cref="T:BootstrapBlazor.Components.IDataPackageAdapter"/> used to process incoming data.</param>
            <param name="callback">A callback function invoked with the processed data. The function receives a <see cref="T:System.ReadOnlyMemory`1"/> 
            containing the processed data and returns a <see cref="T:System.Threading.Tasks.ValueTask"/>.</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ITcpSocketClientExtensions.SetDataPackageAdapter``1(BootstrapBlazor.Components.ITcpSocketClient,BootstrapBlazor.Components.IDataPackageAdapter,System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Configures the specified <see cref="T:BootstrapBlazor.Components.ITcpSocketClient"/> to use a custom data package adapter and a callback
            function for processing received data.
            </summary>
            <remarks>This method sets up the <paramref name="client"/> to use the provided <paramref
            name="adapter"/> for handling incoming data. The adapter processes the raw data received by the client and
            attempts to convert it into an instance of <typeparamref name="TEntity"/>. If the conversion is successful, the
            <paramref name="callback"/> is invoked with the converted entity; otherwise, it is invoked with <see
            langword="null"/>.</remarks>
            <typeparam name="TEntity">The type of the entity that the data package adapter will attempt to convert the received data into.</typeparam>
            <param name="client">The <see cref="T:BootstrapBlazor.Components.ITcpSocketClient"/> instance to configure.</param>
            <param name="adapter">The <see cref="T:BootstrapBlazor.Components.IDataPackageAdapter"/> instance responsible for handling and processing incoming data.</param>
            <param name="callback">A callback function to be invoked with the processed data of type <typeparamref name="TEntity"/>.  The callback
            receives <see langword="null"/> if the data cannot be converted to <typeparamref name="TEntity"/>.</param>
        </member>
        <member name="T:BootstrapBlazor.Components.JSModuleExtensions">
            <summary>
            JSModule extensions class
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.LoadUtility(Microsoft.JSInterop.IJSRuntime,System.String)">
            <summary>
            Load utility js module
            </summary>
            <param name="jsRuntime">The <see cref="T:Microsoft.JSInterop.IJSRuntime"/> instance</param>
            <param name="version">The version of the module</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/><![CDATA[<]]><see cref="T:BootstrapBlazor.Components.JSModule"/><![CDATA[>]]> module loader</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.LoadModuleByName(Microsoft.JSInterop.IJSRuntime,System.String,System.String)">
            <summary>
            Load built-in script module by name
            </summary>
            <param name="jsRuntime">The <see cref="T:Microsoft.JSInterop.IJSRuntime"/> instance</param>
            <param name="moduleName">The name of the module</param>
            <param name="version">The version of the module</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/><![CDATA[<]]><see cref="T:BootstrapBlazor.Components.JSModule"/><![CDATA[>]]> module loader</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.LoadModule(Microsoft.JSInterop.IJSRuntime,System.String,System.String)">
            <summary>
            IJSRuntime extension method to dynamically load scripts
            </summary>
            <param name="jsRuntime">The <see cref="T:Microsoft.JSInterop.IJSRuntime"/> instance</param>
            <param name="fileName">The file name of the script</param>
            <param name="version">The version of the script</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/><![CDATA[<]]><see cref="T:BootstrapBlazor.Components.JSModule"/><![CDATA[>]]> module loader</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.GetTypeModuleName(System.Type)">
            <summary>
            Get the module name of the specified type
            </summary>
            <param name="type">The type</param>
            <returns>The module name</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.OpenUrl(BootstrapBlazor.Components.JSModule,System.String,System.String,System.String)">
            <summary>
            Open the specified URL in a new tab
            </summary>
            <param name="module"><see cref="T:BootstrapBlazor.Components.JSModule"/> instance</param>
            <param name="url">The URL to open</param>
            <param name="target">The target window, default is _blank</param>
            <param name="features">The features of the new window, default is null</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> that represents the asynchronous invocation operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.Eval(BootstrapBlazor.Components.JSModule,System.String)">
            <summary>
            Dynamically run js code
            </summary>
            <param name="module"><see cref="T:BootstrapBlazor.Components.JSModule"/> instance</param>
            <param name="script">The script to run</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> that represents the asynchronous invocation operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.Eval``1(BootstrapBlazor.Components.JSModule,System.String)">
            <summary>
            Dynamically run JavaScript code via Eval
            </summary>
            <param name="module"><see cref="T:BootstrapBlazor.Components.JSModule"/> instance</param>
            <param name="script">The script to run</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> that represents the asynchronous invocation operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.Function(BootstrapBlazor.Components.JSModule,System.String,System.Object[])">
            <summary>
            Dynamically run JavaScript code via Function
            </summary>
            <param name="module"><see cref="T:BootstrapBlazor.Components.JSModule"/> instance</param>
            <param name="script">The script to run</param>
            <param name="args">The arguments to pass to the script</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> that represents the asynchronous invocation operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.Function``1(BootstrapBlazor.Components.JSModule,System.String,System.Object[])">
            <summary>
            Dynamically run js code
            </summary>
            <typeparam name="TValue">The return type</typeparam>
            <param name="module"><see cref="T:BootstrapBlazor.Components.JSModule"/> instance</param>
            <param name="script">The script to run</param>
            <param name="args">The arguments to pass to the script</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> that represents the asynchronous invocation operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.IsMobile(BootstrapBlazor.Components.JSModule)">
            <summary>
            Check if the current terminal is a mobile device
            </summary>
            <param name="module"><see cref="T:BootstrapBlazor.Components.JSModule"/> instance</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> that represents the asynchronous invocation operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.GenerateId(BootstrapBlazor.Components.JSModule,System.String)">
            <summary>
            Get a unique element ID on a page
            </summary>
            <param name="module">An instance of <see cref="T:BootstrapBlazor.Components.JSModule"/></param>
            <param name="prefix">A prefix of type <see cref="T:System.String"/></param>
            <returns>Returns a <see cref="T:System.String"/> formatted element ID</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.GetHtml(BootstrapBlazor.Components.JSModule,System.String,System.String)">
            <summary>
            Get the HTML string of a specified element on a page
            </summary>
            <param name="module">An instance of <see cref="T:BootstrapBlazor.Components.JSModule"/></param>
            <param name="id">The ID of the element</param>
            <param name="selector">The selector of the element</param>
            <returns>Returns a <see cref="T:System.String"/> formatted element ID</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.SetThemeAsync(BootstrapBlazor.Components.JSModule,System.String)">
            <summary>
            Set the theme method
            </summary>
            <param name="module">An instance of <see cref="T:BootstrapBlazor.Components.JSModule"/></param>
            <param name="themeName">The name of the theme</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.GetThemeAsync(BootstrapBlazor.Components.JSModule)">
            <summary>
            Get the theme method
            </summary>
            <param name="module">An instance of <see cref="T:BootstrapBlazor.Components.JSModule"/></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModuleExtensions.SetMemorialModeAsync(BootstrapBlazor.Components.JSModule,System.Boolean)">
            <summary>
            Set memorial mode
            </summary>
            <param name="module">An instance of <see cref="T:BootstrapBlazor.Components.JSModule"/></param>
            <param name="isMemorial">Whether it is memorial mode</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.LocalizationOptionsExtensions">
            <summary>
            JsonLocalizationOptions 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.LocalizationOptionsExtensions.GetJsonStringFromAssembly(BootstrapBlazor.Components.JsonLocalizationOptions,System.Reflection.Assembly,System.String)">
            <summary>
            通过系统 JsonLocalizationOptions 获取当前 Json 格式资源配置集合
            </summary>
            <param name="option"></param>
            <param name="assembly"></param>
            <param name="cultureName"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.MaskServiceExtensions">
            <summary>
            MaskService 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MaskServiceExtensions.Show``1(BootstrapBlazor.Components.MaskService,System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Single,System.Int32,BootstrapBlazor.Components.Mask)">
            <summary>
            Show 扩展方法
            </summary>
            <param name="maskService"></param>
            <param name="parameters"></param>
            <param name="containerId"></param>
            <param name="backgroundColor"></param>
            <param name="opacity"></param>
            <param name="zIndex"></param>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MaskServiceExtensions.Show(BootstrapBlazor.Components.MaskService,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Single,System.Int32,BootstrapBlazor.Components.Mask)">
            <summary>
            Show 扩展方法
            </summary>
            <param name="maskService"></param>
            <param name="type"></param>
            <param name="parameters"></param>
            <param name="containerId"></param>
            <param name="backgroundColor"></param>
            <param name="opacity"></param>
            <param name="zIndex"></param>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.MenuItemExtensions">
            <summary>
            MenuItem 扩展操作类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MenuItemExtensions.CascadingSetActive(BootstrapBlazor.Components.MenuItem,System.Boolean)">
            <summary>
            级联设置 <see cref="T:BootstrapBlazor.Components.MenuItem"/> Active 状态
            </summary>
            <param name="item"></param>
            <param name="active"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.MenuItemExtensions.GetAllItems(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.MenuItem})">
            <summary>
             获取全部节点
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.MenuItemExtensions.GetAllSubItems(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.MenuItem})">
            <summary>
            获取全部子节点
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.NavigationManagerExtensions">
            <summary>
            NavigationManager 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NavigationManagerExtensions.NavigateTo(Microsoft.AspNetCore.Components.NavigationManager,System.IServiceProvider,System.String,System.String,System.String,System.Boolean)">
            <summary>
            导航并添加 TabItem 方法
            </summary>
            <param name="navigation"></param>
            <param name="provider"></param>
            <param name="url"></param>
            <param name="text"></param>
            <param name="icon"></param>
            <param name="closable"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.NavigationManagerExtensions.ToBaseRelativePathWithoutQueryAndFragment(Microsoft.AspNetCore.Components.NavigationManager)">
            <summary>
            获得当前 Url 的相对路径，不包含 QueryString 和 Fragment（Hash）
            </summary>
            <param name="navigationManager"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ObjectExtensions">
            <summary>
            Object 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.ConvertToPercentString(System.String)">
            <summary>
            转化为带单位的字符串 [% px] => [% px] [int] => [int]px
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.IsNumber(System.Type)">
            <summary>
            检查是否为 Number 数据类型
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.IsNumberWithDotSeparator(System.Type)">
            <summary>
            检查是否应该渲染成 <see cref="T:BootstrapBlazor.Components.BootstrapInputNumber`1"/>
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.IsBoolean(System.Type)">
            <summary>
            检查是否为 Boolean 数据类型
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.IsDateTime(System.Type)">
            <summary>
            检查是否为 DateTime 数据类型
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.IsTimeSpan(System.Type)">
            <summary>
            检查是否为 TimeSpan 数据类型
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.GetTypeDesc(System.Type)">
            <summary>
            通过类型获取类型描述文字
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.TryConvertTo(System.String,System.Type,System.Object@)">
            <summary>
            字符串类型转换为其他数据类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.TryConvertTo``1(System.String,``0@)">
            <summary>
            Tries to convert the string representation of a value to a specified type.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.ToFileSizeString(System.Int64)">
            <summary>
            Formats the file size into a string with appropriate units
            </summary>
            <param name="fileSize"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.CreateInstance``1(System.Boolean)">
            <summary>
            Creates an instance of a type and ensures all class-type properties are initialized.
            </summary>
            <typeparam name="TItem">The type to create an instance of.</typeparam>
            <param name="isAutoInitializeModelProperty">Whether to automatically initialize model properties default value is false.</param>
            <returns>An instance of the specified type with initialized properties.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ObjectExtensions.EnsureInitialized(System.Object,System.Boolean)">
            <summary>
            Ensures that all class-type properties of the instance are initialized.
            </summary>
            <param name="isAutoInitializeModelProperty">Whether to automatically initialize model properties default value is false.</param>
            <param name="instance">The instance to initialize properties for.</param>
        </member>
        <member name="T:BootstrapBlazor.Components.PrintServiceExtensions">
            <summary>
            PrintService 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PrintServiceExtensions.PrintAsync``1(BootstrapBlazor.Components.PrintService,System.Func{BootstrapBlazor.Components.DialogOption,System.Collections.Generic.IDictionary{System.String,System.Object}})">
            <summary>
            打印方法
            </summary>
            <typeparam name="TComponent"></typeparam>
            <param name="service"></param>
            <param name="parametersFactory"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.PropertyInfoExtensions">
            <summary>
            PropertyInfo 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PropertyInfoExtensions.IsStatic(System.Reflection.PropertyInfo)">
            <summary>
            判断属性是否为静态属性
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.PropertyInfoExtensions.IsCanWrite(System.Reflection.PropertyInfo)">
            <summary>
            判断属性是否只读扩展方法
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.PropertyInfoExtensions.IsInit(System.Reflection.PropertyInfo)">
            <summary>
            判断是否为 Init 扩展方法
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.QueryPageOptionsExtensions">
            <summary>
            QueryPageOptions 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryPageOptionsExtensions.ToFilter(BootstrapBlazor.Components.QueryPageOptions)">
            <summary>
            将 QueryPageOptions 过滤条件转换为 <see cref="T:BootstrapBlazor.Components.FilterKeyValueAction"/>
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryPageOptionsExtensions.ToFilterFunc``1(BootstrapBlazor.Components.QueryPageOptions)">
            <summary>
            将 QueryPageOptions 过滤条件转换为 where 条件中的参数 <see cref="T:System.Func`2"/>"/> 推荐 Linq 使用
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryPageOptionsExtensions.ToFilterLambda``1(BootstrapBlazor.Components.QueryPageOptions)">
            <summary>
            将 QueryPageOptions 过滤条件转换为 <see cref="T:System.Linq.Expressions.Expression`1"/> 表达式"/> 推荐 EFCore <see cref="T:System.Linq.IQueryable"/> 使用
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryPageOptionsExtensions.HasFilters(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            是否包含过滤条件
            </summary>
            <param name="filterKeyValueAction"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SwalExtensions">
            <summary>
            Swal 扩展类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SwalExtensions.ShowModal(BootstrapBlazor.Components.SwalService,BootstrapBlazor.Components.SwalOption,BootstrapBlazor.Components.SweetAlert)">
            <summary>
            异步回调方法
            </summary>
            <param name="service"></param>
            <param name="option"></param>
            <param name="swal">指定弹窗组件 默认为 null 使用 <see cref="T:BootstrapBlazor.Components.BootstrapBlazorRoot"/> 组件内置弹窗组件</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SwalExtensions.Parse(BootstrapBlazor.Components.SwalOption)">
            <summary>
            将配置信息转化为参数集合
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TabItemExtensions">
            <summary>
            TabItem Extension
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableColumnFilterExtensions">
            <summary>
            TableFilter extensions methods
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumnFilterExtensions.HasFilter(BootstrapBlazor.Components.TableColumnFilter)">
            <summary>
            Whether has filter
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumnFilterExtensions.IsHeaderRow(BootstrapBlazor.Components.TableColumnFilter)">
            <summary>
            Whether is header row
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumnFilterExtensions.GetFieldKey(BootstrapBlazor.Components.TableColumnFilter)">
            <summary>
            Gets the field key for the filter.
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableColumnFilterExtensions.GetFilterTitle(BootstrapBlazor.Components.TableColumnFilter)">
            <summary>
            Gets the filter title.
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TableEditDialogOptionExtensions">
            <summary>
            <see cref="T:BootstrapBlazor.Components.ITableEditDialogOption`1"/> 扩展类方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableEditDialogOptionExtensions.ToParameter``1(BootstrapBlazor.Components.ITableEditDialogOption{``0})">
            <summary>
            将 <see cref="T:BootstrapBlazor.Components.ITableEditDialogOption`1"/> 配置类转化为参数集合扩展方法
            </summary>
            <typeparam name="TModel"></typeparam>
            <param name="option"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ToastServiceExtensions">
            <summary>
            ToastService 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastServiceExtensions.Success(BootstrapBlazor.Components.ToastService,System.String,System.String,System.Boolean)">
            <summary>
            Toast 调用成功快捷方法
            </summary>
            <param name="service"></param>
            <param name="title">Title 属性</param>
            <param name="content">Content 属性</param>
            <param name="autoHide">自动隐藏属性默认为 true</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastServiceExtensions.Success(BootstrapBlazor.Components.ToastService,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Toast 调用成功快捷方法
            </summary>
            <param name="service"></param>
            <param name="title">Title 属性</param>
            <param name="content">Content 属性</param>
            <param name="autoHide">自动隐藏属性默认为 true</param>
            <param name="showClose">是否显示关闭按钮 默认 true</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastServiceExtensions.Error(BootstrapBlazor.Components.ToastService,System.String,System.String,System.Boolean)">
            <summary>
            Toast 调用错误快捷方法
            </summary>
            <param name="service"></param>
            <param name="title">Title 属性</param>
            <param name="content">Content 属性</param>
            <param name="autoHide">自动隐藏属性默认为 true</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastServiceExtensions.Error(BootstrapBlazor.Components.ToastService,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Toast 调用错误快捷方法
            </summary>
            <param name="service"></param>
            <param name="title">Title 属性</param>
            <param name="content">Content 属性</param>
            <param name="autoHide">自动隐藏属性默认为 true</param>
            <param name="showClose">是否显示关闭按钮 默认 true</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastServiceExtensions.Information(BootstrapBlazor.Components.ToastService,System.String,System.String,System.Boolean)">
            <summary>
            Toast 调用提示信息快捷方法
            </summary>
            <param name="service"></param>
            <param name="title">Title 属性</param>
            <param name="content">Content 属性</param>
            <param name="autoHide">自动隐藏属性默认为 true</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastServiceExtensions.Information(BootstrapBlazor.Components.ToastService,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Toast 调用提示信息快捷方法
            </summary>
            <param name="service"></param>
            <param name="title">Title 属性</param>
            <param name="content">Content 属性</param>
            <param name="autoHide">自动隐藏属性默认为 true</param>
            <param name="showClose">是否显示关闭按钮 默认 true</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastServiceExtensions.Warning(BootstrapBlazor.Components.ToastService,System.String,System.String,System.Boolean)">
            <summary>
            Toast 调用警告信息快捷方法
            </summary>
            <param name="service"></param>
            <param name="title">Title 属性</param>
            <param name="content">Content 属性</param>
            <param name="autoHide">自动隐藏属性默认为 true</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ToastServiceExtensions.Warning(BootstrapBlazor.Components.ToastService,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Toast 调用警告信息快捷方法
            </summary>
            <param name="service"></param>
            <param name="title">Title 属性</param>
            <param name="content">Content 属性</param>
            <param name="autoHide">自动隐藏属性默认为 true</param>
            <param name="showClose">是否显示关闭按钮 默认 true</param>
        </member>
        <member name="T:BootstrapBlazor.Components.TreeViewExtensions">
            <summary>
            树状结构获取所有项目扩展方法类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeViewExtensions.FirstOrDefaultActiveItem``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.TreeViewItem{``0}})">
            <summary>
            在全部树状结构 <paramref name="source"/> 中寻找第一个 Active 节点/>
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeViewExtensions.GetAllItems``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.TreeViewItem{``0}})">
            <summary>
             获取全部节点
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeViewExtensions.GetAllSubItems``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.TreeViewItem{``0}})">
            <summary>
            获取全部子节点
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeViewExtensions.ToFlat``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.TreeViewItem{``0}},BootstrapBlazor.Components.TreeViewItem{``0})">
            <summary>
            将带层次结构的树状数据转换为扁平数据集合
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="source"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TypeExtensions.GetUniqueTypeName(System.Type)">
            <summary>
            获得唯一类型名称方法
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.UploadFileExtensions">
            <summary>
            UploadFile 扩展方法类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadFileExtensions.RequestBase64ImageFileAsync(BootstrapBlazor.Components.UploadFile,System.String,System.Int32,System.Int32,System.Nullable{System.Int64},System.Collections.Generic.List{System.String},System.Threading.CancellationToken)">
            <summary>
            获取 base64 格式图片字符串
            </summary>
            <param name="upload"></param>
            <param name="format"></param>
            <param name="maxWidth"></param>
            <param name="maxHeight"></param>
            <param name="maxAllowedSize"></param>
            <param name="allowExtensions"></param>
            <param name="token"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadFileExtensions.SaveToFileAsync(BootstrapBlazor.Components.UploadFile,System.String,System.Int64,System.Int32,System.Threading.CancellationToken)">
            <summary>
            保存到文件方法
            </summary>
            <param name="upload"></param>
            <param name="fileName"></param>
            <param name="maxAllowedSize"></param>
            <param name="bufferSize"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadFileExtensions.GetBytesAsync(BootstrapBlazor.Components.UploadFile,System.String,System.Int32,System.Int32,System.Int64,System.Threading.CancellationToken)">
            <summary>
            获得图片字节数组方法
            </summary>
            <param name="upload"></param>
            <param name="format"></param>
            <param name="maxWidth"></param>
            <param name="maxHeight"></param>
            <param name="maxAllowedSize"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadFileExtensions.GetBytesAsync(BootstrapBlazor.Components.UploadFile,System.Int64,System.Threading.CancellationToken)">
            <summary>
            获得图片字节数组方法
            </summary>
            <param name="upload"></param>
            <param name="maxAllowedSize"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadFileExtensions.IsImage(BootstrapBlazor.Components.UploadFile,System.Collections.Generic.List{System.String},System.Func{BootstrapBlazor.Components.UploadFile,System.Boolean})">
            <summary>
            Check item whether is image extension method.
            </summary>
            <param name="item"></param>
            <param name="allowExtensions"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadFileExtensions.IsBase64Format(BootstrapBlazor.Components.UploadFile)">
            <summary>
            Check item whether is base64 format image extension method.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.UploadFileExtensions.IsAllowExtensions(BootstrapBlazor.Components.UploadFile,System.Collections.Generic.List{System.String})">
            <summary>
            Check the extension whether in the allowExtensions list.
            </summary>
            <param name="item"></param>
            <param name="allowExtensions"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ValidationContextExtensions">
            <summary>
            ValidationContext 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidationContextExtensions.GetInstanceFromMetadataType``1(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            从 <see cref="T:System.ComponentModel.DataAnnotations.MetadataTypeAttribute"/> 中获取指定类型实例
            </summary>
            <typeparam name="T">验证接口类型</typeparam>
            <param name="context"></param>
            <returns>没有实现 <typeparamref name="T"/> 接口，则返回 <see langword="null"/></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidationContextExtensions.GetValidationResult(System.ComponentModel.DataAnnotations.ValidationContext,System.String)">
            <summary>
            获得 <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/> 实例
            </summary>
            <param name="context"></param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ILocalizationMissingItemHandler">
            <summary>
            The handler to handle the items that cannot be localized by any localizer or LocalizationResolver <seealso cref="T:BootstrapBlazor.Components.ILocalizationResolve"/> 
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ILocalizationMissingItemHandler.HandleMissingItem(System.String,System.String,System.String)">
            <summary>
            Handle the item that cannot be localized by any localizer or <seealso cref="T:BootstrapBlazor.Components.ILocalizationResolve"/> 
            </summary>
            <param name="name">the item name for localization</param>
            <param name="typeName">the type name that uses the item</param>
            <param name="cultureName">the culture name that is missing localization</param>
        </member>
        <member name="T:BootstrapBlazor.Components.ILocalizationResolve">
            <summary>
            ILocalizationResolve 服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ILocalizationResolve.GetAllStringsByCulture(System.Boolean)">
            <summary>
            获得所有文化信息集合
            </summary>
            <param name="includeParentCultures"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ILocalizationResolve.GetAllStringsByType(System.String,System.Boolean)">
            <summary>
            获得所有文化信息集合
            </summary>
            <param name="includeParentCultures"></param>
            <param name="typeName">类型名称</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.JsonLocalizationOptions">
            <summary>
            LocalizationOptions 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.JsonLocalizationOptions.ResourceManagerStringLocalizerType">
            <summary>
            获得/设置 微软 resx 格式指定类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.JsonLocalizationOptions.AdditionalJsonAssemblies">
            <summary>
            获得/设置 外置资源文件程序集集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.JsonLocalizationOptions.AdditionalJsonFiles">
            <summary>
            获得/设置 外置资源文件路径集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.JsonLocalizationOptions.FallbackCulture">
            <summary>
            获得/设置 回落默认文化 默认为 en 英文
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.JsonLocalizationOptions.EnableFallbackCulture">
            <summary>
            获得/设置 是否回落到 UI 父文化 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.JsonLocalizationOptions.IgnoreLocalizerMissing">
            <summary>
            获得/设置 是否忽略丢失文化日志信息 默认 false 不忽略
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.JsonLocalizationOptions.UseKeyWhenValueIsNull">
            <summary>
            获得/设置 如果 Value 值为 null 时使用 Key 代替 默认 false 触发异常
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.JsonLocalizationOptions.DisableGetLocalizerFromService">
            <summary>
            获得/设置 是否禁用从服务中获取本地化资源 默认 false 未禁用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.JsonLocalizationOptions.DisableGetLocalizerFromResourceManager">
            <summary>
            获得/设置 是否禁用获取 <see cref="T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer"/> 类型本地化资源 默认 false 未禁用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.JsonLocalizationOptions.ReloadOnChange">
            <summary>
            获得/设置 资源文件是否热加载 默认 false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.JsonLocalizationOptions.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.JsonStringLocalizer">
            <summary>
            JsonStringLocalizer 实现类
            </summary>
            <param name="assembly"></param>
            <param name="typeName"></param>
            <param name="baseName"></param>
            <param name="jsonLocalizationOptions"></param>
            <param name="logger"></param>
            <param name="resourceNamesCache"></param>
            <param name="localizationMissingItemHandler"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.JsonStringLocalizer.#ctor(System.Reflection.Assembly,System.String,System.String,BootstrapBlazor.Components.JsonLocalizationOptions,Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Localization.IResourceNamesCache,BootstrapBlazor.Components.ILocalizationMissingItemHandler)">
            <summary>
            JsonStringLocalizer 实现类
            </summary>
            <param name="assembly"></param>
            <param name="typeName"></param>
            <param name="baseName"></param>
            <param name="jsonLocalizationOptions"></param>
            <param name="logger"></param>
            <param name="resourceNamesCache"></param>
            <param name="localizationMissingItemHandler"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.JsonStringLocalizer.Item(System.String)">
            <summary>
            通过指定键值获取多语言值信息索引
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.JsonStringLocalizer.Item(System.String,System.Object[])">
            <summary>
            带格式化参数的通过指定键值获取多语言值信息索引
            </summary>
            <param name="name"></param>
            <param name="arguments"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JsonStringLocalizer.GetAllStrings(System.Boolean)">
            <summary>
            获取当前语言的所有资源信息
            </summary>
            <param name="includeParentCultures"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.JsonStringLocalizerFactory">
            <summary>
            IStringLocalizerFactory 实现类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.JsonStringLocalizerFactory.#ctor(BootstrapBlazor.Components.ICacheManager,BootstrapBlazor.Components.ILocalizationMissingItemHandler,Microsoft.Extensions.Options.IOptions{BootstrapBlazor.Components.BootstrapBlazorOptions},Microsoft.Extensions.Options.IOptions{BootstrapBlazor.Components.JsonLocalizationOptions},Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Localization.LocalizationOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            构造函数
            </summary>
            <param name="cacheManager"></param>
            <param name="localizationMissingItemHandler"></param>
            <param name="options"></param>
            <param name="jsonLocalizationOptions"></param>
            <param name="localizationOptions"></param>
            <param name="loggerFactory"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.JsonStringLocalizerFactory.GetResourcePrefix(System.Reflection.TypeInfo)">
            <summary>
            GetResourcePrefix 方法
            </summary>
            <param name="typeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JsonStringLocalizerFactory.GetResourcePrefix(System.String,System.String)">
            <summary>
            GetResourcePrefix 方法
            </summary>
            <param name="baseResourceName"></param>
            <param name="baseNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JsonStringLocalizerFactory.CreateResourceManagerStringLocalizer(System.Reflection.Assembly,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer"/> for the given input
            </summary>
            <param name="assembly">The assembly to create a <see cref="T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer"/> for</param>
            <param name="baseName">The base name of the resource to search for</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.StringLocalizer">
            <summary>
            IStringLocalizer 实现类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NullLocalizationMissingItemHandler.HandleMissingItem(System.String,System.String,System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="name"></param>
            <param name="typeName"></param>
            <param name="cultureName"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.NullLocalizationResolve.GetAllStringsByCulture(System.Boolean)">
            <summary>
            获得所有文化信息集合
            </summary>
            <param name="includeParentCultures"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.NullLocalizationResolve.GetAllStringsByType(System.String,System.Boolean)">
            <summary>
            获得指定类型文化信息集合
            </summary>
            <param name="typeName">类型名称</param>
            <param name="includeParentCultures"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DispatchEntry`1">
            <summary>
            分发项类
            </summary>
            <typeparam name="TEntry"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.DispatchEntry`1.Name">
            <summary>
            获得/设置 Entry 名称 默认 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DispatchEntry`1.Entry">
            <summary>
            获得/设置 Entry 实例 不为空
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ExpandableNodeCache`2">
            <summary>
            节点缓存类
            </summary>
            <typeparam name="TNode"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.ExpandableNodeCache`2.ExpandedNodeCache">
            <summary>
            所有已展开行集合 作为缓存使用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExpandableNodeCache`2.CollapsedNodeCache">
            <summary>
            所有已收缩行集合 作为缓存使用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExpandableNodeCache`2.EqualityComparer">
            <summary>
            对象比较器
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeCache`2.#ctor(BootstrapBlazor.Components.IModelEqualityComparer{`1})">
            <remarks>
            构造函数
            </remarks>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeCache`2.ToggleNodeAsync(`0,System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IExpandableNode{`1}}}})">
            <summary>
            节点展开收缩状态切换方法
            </summary>
            <param name="node"></param>
            <param name="callback"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeCache`2.CheckExpandAsync(`0,System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IExpandableNode{`1}}}})">
            <summary>
            检查当前节点是否展开
            </summary>
            <param name="node"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeCache`2.TryFind(System.Collections.Generic.List{`0},`1,`0@)">
            <summary>
            尝试在全部树状结构 <paramref name="items"/> 中寻找指定 <paramref name="target"/>
            </summary>
            <param name="items"></param>
            <param name="target"></param>
            <param name="ret">查询结果 查无资料时为 null</param>
            <returns>是否存在 <paramref name="target"/></returns>
            <remarks>采广度优先搜寻</remarks>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeCache`2.Find(System.Collections.Generic.List{`0},`1)">
            <summary>
            在全部树状结构 <paramref name="items"/> 中寻找指定 <paramref name="target"/>
            </summary>
            <param name="items"></param>
            <param name="target"></param>
            <returns>查询结果 查无资料时为 null</returns>
            <remarks>采广度优先搜寻</remarks>
        </member>
        <member name="M:BootstrapBlazor.Components.ExpandableNodeCache`2.Find(System.Collections.Generic.List{`0},`1,System.Int32@)">
            <summary>
            在全部树状结构 <paramref name="source"/> 中寻找指定 <paramref name="target"/>
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="degree">树状阶层，起始为0</param>
            <returns>查询结果 查无资料时为 null</returns>
            <remarks>采广度优先搜寻</remarks>
        </member>
        <member name="T:BootstrapBlazor.Components.ICheckableNode`1">
            <summary>
            
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.ICheckableNode`1.CheckedState">
            <summary>
            获得/设置 是否被选中
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IExpandableNode`1">
            <summary>
            可扩展节点接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IExpandableNode`1.IsExpand">
            <summary>
            获得/设置 是否展开 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IExpandableNode`1.HasChildren">
            <summary>
            获得/设置 是否有子节点 默认 false 用于判断是否有子节点
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IExpandableNode`1.Items">
            <summary>
            获得/设置 子节点
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IExpandableNode`1.Value">
            <summary>
            获得/设置 TItem 泛型值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IExpandableNode`1.Parent">
            <summary>
            获得/设置 父级节点
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ILookup">
            <summary>
            Lookup 接口定义
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ILookup.Lookup">
            <summary>
            获得/设置 数据集用于 CheckboxList Select 组件 通过 Value 显示 Text 使用 默认 null
            <para>设置 <see cref="P:BootstrapBlazor.Components.ILookup.Lookup"/> 参收后，<see cref="P:BootstrapBlazor.Components.ILookup.LookupServiceKey"/> 和 <see cref="P:BootstrapBlazor.Components.ILookup.LookupServiceData"/> 两个参数均失效</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ILookup.LookupStringComparison">
            <summary>
            获得/设置 字典数据源字符串比较规则 默认 <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> 大小写不敏感 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ILookup.LookupServiceKey">
            <summary>
            获得/设置 <see cref="T:BootstrapBlazor.Components.ILookupService"/> 服务获取 Lookup 数据集合键值 常用于外键自动转换为名称操作，可以通过 <see cref="P:BootstrapBlazor.Components.ILookup.LookupServiceData"/> 传递自定义数据
            <para>未设置 <see cref="P:BootstrapBlazor.Components.ILookup.Lookup"/> 时生效</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ILookup.LookupServiceData">
            <summary>
            获得/设置 <see cref="T:BootstrapBlazor.Components.ILookupService"/> 服务获取 Lookup 数据集合键值自定义数据，通过 <see cref="P:BootstrapBlazor.Components.ILookup.LookupServiceKey"/> 指定键值
            <para>未设置 <see cref="P:BootstrapBlazor.Components.ILookup.Lookup"/> 时生效</para>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ILookup.LookupService">
            <summary>
            获得/设置 <see cref="T:BootstrapBlazor.Components.ILookupService"/> 服务实例
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IModelEqualityComparer`1">
            <summary>
            模型比较接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IModelEqualityComparer`1.ModelEqualityComparer">
            <summary>
            获得/设置 模型比对回调方法
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IModelEqualityComparer`1.CustomKeyAttribute">
            <summary>
            获得/设置 模型键值标签
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IModelEqualityComparer`1.Equals(`0,`0)">
            <summary>
            相等判定方法
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IPopoverBaseComponent">
            <summary>
            可悬浮弹窗组件接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IPopoverBaseComponent.Placement">
            <summary>
            获得/设置 弹窗位置 默认为 Bottom
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IPopoverBaseComponent.CustomClass">
            <summary>
            获得/设置 自定义样式 参数 默认 null
            </summary>
            <remarks>由 data-bs-custom-class 实现</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.IPopoverBaseComponent.ShowShadow">
            <summary>
            获得/设置 是否显示阴影 默认 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IPopoverBaseComponent.IsPopover">
            <summary>
            获得/设置 是否使用 Popover 渲染下拉框 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IPopoverBaseComponent.Offset">
            <summary>
            获得/设置 弹窗偏移量 默认 [0, 10]
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ModelHashSetComparer`1">
            <summary>
            模型比较器
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:BootstrapBlazor.Components.ModelHashSetComparer`1.#ctor(BootstrapBlazor.Components.IModelEqualityComparer{`0})">
            <summary>
            模型比较器
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:BootstrapBlazor.Components.ModelHashSetComparer`1.Equals(`0,`0)">
            <summary>
            Equals 方法
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ModelHashSetComparer`1.GetHashCode(`0)">
            <summary>
            GetHashCode 方法
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.NodeBase">
            <summary>
            节点类基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NodeBase.IsExpand">
            <summary>
            获得/设置 是否展开 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NodeBase.HasChildren">
            <summary>
            获得/设置 是否有子节点 默认 false 用于判断是否有子节点
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.NodeBase`1">
            <summary>
            NodeBase 泛型基类
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.NodeBase`1.Value">
            <summary>
            获得/设置 当前节点值
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.NodeItem">
            <summary>
            节点类组件基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NodeItem.Id">
            <summary>
            获得/设置 当前节点 Id 默认为 null
            </summary>
            <remarks>一般配合数据库使用</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.NodeItem.ParentId">
            <summary>
            获得/设置 父级节点 Id 默认为 null
            </summary>
            <remarks>一般配合数据库使用</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.NodeItem.Text">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NodeItem.Icon">
            <summary>
            获得/设置 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NodeItem.CssClass">
            <summary>
            获得/设置 自定义样式名
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NodeItem.IsDisabled">
            <summary>
            获得/设置 是否被禁用 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NodeItem.IsActive">
            <summary>
            获得/设置 是否选中当前节点 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NodeItem.IsCollapsed">
            <summary>
            获得/设置 是否收缩 默认 true 收缩 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.NodeItem.Template">
            <summary>
            获得/设置 子组件模板 默认为 null
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.QueryData`1">
            <summary>
            表格查询数据类
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryData`1.Items">
            <summary>
            获得/设置 要显示页码的数据集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryData`1.TotalCount">
            <summary>
            获得/设置 数据集合总数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryData`1.IsFiltered">
            <summary>
            获得/设置 数据是否被过滤 默认为 false 未被过滤
            </summary>
            <remarks>组件内部通过此属性判断，如果外部未进行数据过滤，内部将进行数据过滤操作</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryData`1.IsSorted">
            <summary>
            获得/设置 数据是否被排序 默认为 false 未被排序
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryData`1.IsSearch">
            <summary>
            获得/设置 数据是否已处理 SearchText <see cref="P:BootstrapBlazor.Components.Table`1.SearchText"/> 默认为 false
            </summary>
            <remarks>设置本属性为 true 时，Table 组件的高级搜索按钮改变颜色</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryData`1.IsAdvanceSearch">
            <summary>
            获得/设置 数据是否为已处理自定义高级搜索 <see cref="P:BootstrapBlazor.Components.Table`1.CustomerSearchTemplate"/> 默认为 false
            </summary>
            <remarks>设置本属性为 true 时，Table 组件的高级搜索按钮改变颜色</remarks>
        </member>
        <member name="T:BootstrapBlazor.Components.SelectedItem">
            <summary>
            选项类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectedItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectedItem.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem.Text">
            <summary>
            获得/设置 显示名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem.Value">
            <summary>
            获得/设置 选项值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem.Active">
            <summary>
            获得/设置 是否选中
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem.IsDisabled">
            <summary>
            获得/设置 是否禁用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem.GroupName">
            <summary>
            获得/设置 分组名称
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SelectedItem`1">
            <summary>
            泛型实现类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectedItem`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SelectedItem`1.#ctor(`0,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="value"></param>
            <param name="text"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem`1.Text">
            <summary>
            获得/设置 显示名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem`1.Value">
            <summary>
            获得/设置 选项值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem`1.Active">
            <summary>
            获得/设置 是否选中
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem`1.IsDisabled">
            <summary>
            获得/设置 是否禁用
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SelectedItem`1.GroupName">
            <summary>
            获得/设置 分组名称
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableTreeNode`1">
            <summary>
            Table 组件树状结构类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableTreeNode`1.Items">
            <summary>
            获得/设置 子节点集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableTreeNode`1.BootstrapBlazor#Components#IExpandableNode{TItem}#Items">
            <summary>
            获得/设置 子节点集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableTreeNode`1.Parent">
            <summary>
            获得/设置 父级节点
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableTreeNode`1.BootstrapBlazor#Components#IExpandableNode{TItem}#Parent">
            <summary>
            获得/设置 父级节点
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableTreeNode`1.#ctor(`0)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TreeNodeBase`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeNodeBase`1.Text">
            <summary>
            获得/设置 显示文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeNodeBase`1.Icon">
            <summary>
            获得/设置 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeNodeBase`1.ExpandIcon">
            <summary>
            获得/设置 展开节点状态下的 Icon 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeNodeBase`1.CssClass">
            <summary>
            获得/设置 自定义样式名
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeNodeBase`1.IsDisabled">
            <summary>
            获得/设置 是否被禁用 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeNodeBase`1.IsActive">
            <summary>
            获得/设置 是否选中当前节点 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TreeNodeBase`1.Template">
            <summary>
            获得/设置 子组件模板 默认为 null
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TreeNodeCache`2">
            <summary>
            Tree 组件节点缓存类
            </summary>
            <typeparam name="TNode"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="F:BootstrapBlazor.Components.TreeNodeCache`2._checkedNodeCache">
            <summary>
            获得 所有选中节点集合 作为缓存使用
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TreeNodeCache`2._uncheckedNodeCache">
            <summary>
            获得 所有未选中节点集合 作为缓存使用
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.TreeNodeCache`2._indeterminateNodeCache">
            <summary>
            获得 所有未选中节点集合 作为缓存使用
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeNodeCache`2.#ctor(BootstrapBlazor.Components.IModelEqualityComparer{`1})">
            <summary>
            构造函数
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeNodeCache`2.ToggleCheck(`0)">
            <summary>
            切换选中状态方法
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeNodeCache`2.IsChecked(`0)">
            <summary>
            检查当前节点是否选中
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeNodeCache`2.IsChecked(System.Collections.Generic.List{`0})">
            <summary>
            重置是否选中状态
            </summary>
            <param name="nodes"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeNodeCache`2.FindParentNode(System.Collections.Generic.List{`0},`0)">
            <summary>
            通过指定节点查找父节点
            </summary>
            <param name="nodes">数据集合</param>
            <param name="node">指定节点</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TreeNodeCache`2.Reset">
            <summary>
            清除缓存方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ArchiveOptions">
            <summary>
            归档配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ArchiveOptions.CompressionLevel">
            <summary>
            获得/设置 压缩等级 默认 <see cref="F:System.IO.Compression.CompressionLevel.Optimal"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ArchiveOptions.Mode">
            <summary>
            获得/设置 归档模式 默认 <see cref="F:System.IO.Compression.ZipArchiveMode.Create"/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ArchiveOptions.LeaveOpen">
            <summary>
            获得/设置 归档结束后是否关闭流 默认 false 归档后关闭相关流
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ArchiveOptions.Encoding">
            <summary>
            获得/设置 编码方法 默认空 内部使用 UTF-8 编码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ArchiveOptions.ReadStreamAsync">
            <summary>
            获得/设置 获取文件流回调方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorOptions">
            <summary>
            Global configuration class for components
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ToastDelay">
            <summary>
            Gets or sets the default delay for the Toast component, default is 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.MessageDelay">
            <summary>
            Gets or sets the default delay for the Message component, default is 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.SwalDelay">
            <summary>
            Gets or sets the default delay for the Swal component, default is 0
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.FallbackCulture">
            <summary>
            Gets or sets the fallback default language culture, default is "en" (English)
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ToastPlacement">
            <summary>
            Gets or sets the default position for the Toast component globally, default is null. When set, it overrides the site-wide setting.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.SupportedCultures">
            <summary>
            Gets or sets the list of built-in localization languages for components, default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.EnableErrorLogger">
            <summary>
            Gets or sets whether to enable global exception capture functionality, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ShowErrorLoggerToast">
            <summary>
            Gets or sets whether to enable show toast popup when global exception capture, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.EnableErrorLoggerILogger">
            <summary>
            Gets or sets a value indicating whether error logging using an <see cref="T:Microsoft.Extensions.Logging.ILogger"/> is enabled, default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.EnableFallbackCulture">
            <summary>
            Gets or sets whether to fall back to the fallback culture, default is true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.IgnoreLocalizerMissing">
            <summary>
            Gets or sets whether to ignore missing culture log information, default is null (not set)
            </summary>
            <remarks>Uses the default value of <see cref="P:BootstrapBlazor.Components.JsonLocalizationOptions.IgnoreLocalizerMissing"/></remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.DisableGetLocalizerFromService">
            <summary>
            Gets or sets whether to disable fetching localization resources from the service, default is false (not disabled)
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.DisableGetLocalizerFromResourceManager">
            <summary>
            Gets or sets whether to disable fetching localization resources of type <see cref="T:Microsoft.Extensions.Localization.ResourceManagerStringLocalizer"/>, default is false (not disabled)
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.DefaultCultureInfo">
            <summary>
            Gets or sets the default culture information
            </summary>
            <remarks>This parameter is invalid when multi-culture is enabled</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.DisableAutoSubmitFormByEnter">
            <summary>
            Gets or sets whether to disable the automatic form submission feature by pressing Enter, default is null (not set)
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.JSModuleVersion">
            <summary>
            Gets or sets the JavaScript module script version number, default is null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.TableSettings">
            <summary>
            Gets or sets the <see cref="P:BootstrapBlazor.Components.BootstrapBlazorOptions.TableSettings"/> configuration instance
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ModalSettings">
            <summary>
            Gets or sets the <see cref="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ModalSettings"/> configuration instance
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.StepSettings">
            <summary>
            Gets or sets the <see cref="P:BootstrapBlazor.Components.BootstrapBlazorOptions.StepSettings"/> configuration instance
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ConnectionHubOptions">
            <summary>
            Gets or sets the <see cref="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ConnectionHubOptions"/> configuration
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.WebClientOptions">
            <summary>
            Gets or sets the <see cref="P:BootstrapBlazor.Components.BootstrapBlazorOptions.WebClientOptions"/> configuration
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.IpLocatorOptions">
            <summary>
            Gets or sets the <see cref="P:BootstrapBlazor.Components.BootstrapBlazorOptions.IpLocatorOptions"/> configuration
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ScrollOptions">
            <summary>
            Gets or sets the <see cref="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ScrollOptions"/> configuration
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ContextMenuOptions">
            <summary>
            Gets or sets the <see cref="P:BootstrapBlazor.Components.BootstrapBlazorOptions.ContextMenuOptions"/> configuration
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.CacheManagerOptions">
            <summary>
            Gets or sets the CacheManagerOptions configuration
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapBlazorOptions.IsMemorialMode">
            <summary>
            Get or sets website use memorial mode. default is false
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorOptions.GetSupportedCultures">
            <summary>
            Gets the collection of supported languages
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.CacheManagerOptions">
            <summary>
            CacheManagerOptions 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CacheManagerOptions.Enable">
            <summary>
            获得/设置 是否开启 CacheManager 功能 默认 true 开启
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CacheManagerOptions.SlidingExpiration">
            <summary>
            获得/设置 滑动缓存过期时间 默认 5 分钟
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CacheManagerOptions.AbsoluteExpiration">
            <summary>
            获得/设置 绝对缓存过期时间 默认 10 秒钟
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ConnectionHubOptions">
            <summary>
            ConnectionHubOptions 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConnectionHubOptions.Enable">
            <summary>
            获得/设置 是否开启 CollectionHub 功能 默认 false 未开启
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConnectionHubOptions.EnableIpLocator">
            <summary>
            获得/设置 是否开启 IP 定位功能 默认 false 未开启
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ConnectionHubOptions.ExpirationScanFrequency">
            <summary>
            获得/设置 过期扫描周期 默认 1 分钟
            </summary>
            <remarks>自动清理超时 5 倍心跳时间的客户端信息</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.ConnectionHubOptions.TimeoutInterval">
            <summary>
            获得/设置 超时间隔 默认 10 秒
            </summary>
            <remarks>不能小于 <see cref="P:BootstrapBlazor.Components.ConnectionHubOptions.BeatInterval"/> 心跳间隔</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.ConnectionHubOptions.BeatInterval">
            <summary>
            获得/设置 ConnectionHub 组件心跳间隔 默认 5000 单位毫秒
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Constants">
            <summary>
            系统常量
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.Constants.DropdownToggleString">
            <summary>
            
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ContextMenuOptions">
            <summary>
            ContextMenuOptions 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ContextMenuOptions.OnTouchDelay">
            <summary>
            获得/设置 移动端触屏右键菜单延时时长 默认 500 毫秒
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ExportPdfButtonOptions">
            <summary>
            ExportPdfButtonOptions 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonOptions.Selector">
            <summary>
            获得/设置 导出 Pdf 选择器 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonOptions.ElementId">
            <summary>
            获得/设置 导出 Pdf 元素 Id 默认为 null 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonOptions.StyleTags">
            <summary>
            获得/设置 导出 Pdf 所需样式表文件集合 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonOptions.ScriptTags">
            <summary>
            获得/设置 导出 Pdf 所需脚本文件集合 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonOptions.Text">
            <summary>
            获得/设置 导出 Pdf 按钮显示文字 默认为资源文件中 导出 Pdf 文字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonOptions.Icon">
            <summary>
            获得/设置 导出 Pdf 按钮图标 未设置 取当前图标主题下导出 Pdf 图标
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonOptions.Color">
            <summary>
            获得/设置 导出 Pdf 按钮颜色 默认 Color.Primary
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonOptions.FileName">
            <summary>
            获得/设置 导出 Pdf 文件名 默认为 null 未设置时使用 pdf-时间戳.pdf
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonOptions.OnBeforeExport">
            <summary>
            获得/设置 导出 Pdf 之前回调委托 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonOptions.OnBeforeDownload">
            <summary>
            获得/设置 下载 Pdf 之前回调委托 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonOptions.OnAfterDownload">
            <summary>
            获得/设置 下载 Pdf 之后回调委托 默认为 null
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonOptions.AutoDownload">
            <summary>
            获得/设置 是否自动下载 Pdf 默认为 true
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ExportPdfButtonOptions.IsAsync">
            <summary>
            获得/设置 是否异步导出 默认为 true
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IconThemeOptions">
            <summary>
            IconTheme 配置项
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IconThemeOptions.Icons">
            <summary>
            获得/设置 主题 Icons 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IconThemeOptions.ThemeKey">
            <summary>
            获得/设置 当前主题键值 默认 fa 使用 font-awesome 图标集
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IconThemeOptions.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IconThemeOptions.TryAddIcons(System.String,System.Collections.Frozen.FrozenDictionary{BootstrapBlazor.Components.ComponentIcons,System.String})">
            <summary>
            尝试通过指定键值添加图标集合
            </summary>
            <param name="key"></param>
            <param name="icons"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ModalSettings">
            <summary>
            Modal component settings
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ModalSettings.IsFade">
            <summary>
            Gets or sets whether to enable fade animation, default is null
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.OtpOptions">
            <summary>
            OtpOptions class
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.OtpOptions.SecretKey">
            <summary>
            Gets or sets the secret key used for generating the QR code.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.OtpOptions.IssuerName">
            <summary>
            Gets or sets the Issuer name
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.OtpOptions.AccountName">
            <summary>
            Gets or sets the Account name
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.OtpOptions.UserName">
            <summary>
            Gets or sets the user name
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.OtpOptions.Algorithm">
            <summary>
            Gets or sets the OTP hash mode.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.OtpOptions.Type">
            <summary>
            Gets or sets the OTP type.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.OtpOptions.Digits">
            <summary>
            Gets or sets the code length. Default is 6.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.OtpOptions.Period">
            <summary>
            Gets or sets the period in seconds for TOTP. Default is 30.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.OtpOptions.Counter">
            <summary>
            Gets or sets the counter for Hotp. Default is 0.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TotpInstanceBase">
            <summary>
            Abstract class representing a Time-based One-Time Password (TOTP) instance.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TotpInstanceBase.GetRemainingSeconds(System.Nullable{System.DateTime})">
            <summary>
            Get the remaining seconds until the next TOTP expiration for the given secret key and timestamp.
            </summary>
            <param name="timestamp"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TotpInstanceBase.Verify(System.String,System.Nullable{System.DateTime})">
            <summary>
            Verify the given TOTP code against the expected value using the provided secret key.
            </summary>
            <param name="code"></param>
            <param name="timestamp"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.HotpInstanceBase">
            <summary>
            Abstract class representing an HMAC-based One-Time Password (HOTP) instance.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.HotpInstanceBase.Verify(System.String,System.Int64)">
             <summary>
            
             </summary>
             <param name="code"></param>
             <param name="counter"></param>
             <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.OtpHashMode">
            <summary>
            Enum representing the OTP hash modes.
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.OtpHashMode.Sha1">
            <summary>
            SHA1 hash mode
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.OtpHashMode.Sha256">
            <summary>
            SHA256 hash mode
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.OtpHashMode.Sha512">
            <summary>
            SHA512 hash mode
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.OtpType">
            <summary>
            Enum representing the OTP types.
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.OtpType.Totp">
            <summary>
            Time-based One-Time Password (TOTP) algorithm
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.OtpType.Hotp">
            <summary>
            HMAC-based One-Time Password (HOTP) algorithm
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.QueryPageOptions">
            <summary>
            查询条件实体类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.SearchText">
            <summary>
            获得/设置 模糊查询关键字
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.SortName">
            <summary>
            获得 排序字段名称 由 <see cref="P:BootstrapBlazor.Components.Table`1.SortName"/> 设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.SortOrder">
            <summary>
            获得 排序方式 由 <see cref="P:BootstrapBlazor.Components.Table`1.SortOrder"/> 设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.SortList">
            <summary>
            获得/设置 多列排序集合 默认为 Empty 内部为 "Name" "Age desc" 由 <see cref="P:BootstrapBlazor.Components.Table`1.SortString"/> 设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.AdvancedSortList">
            <summary>
            获得/设置 自定义多列排序集合 默认为 Empty 内部为 "Name" "Age desc" 由 <see cref="P:BootstrapBlazor.Components.Table`1.AdvancedSortItems"/> 设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.SearchModel">
            <summary>
            获得 搜索条件绑定模型 未设置 <see cref="P:BootstrapBlazor.Components.Table`1.CustomerSearchModel"/> 时为 <see cref="T:BootstrapBlazor.Components.Table`1"/> 泛型模型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.PageIndex">
            <summary>
            获得 当前页码 首页为 第一页
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.StartIndex">
            <summary>
            获得 请求读取数据开始行 默认 0
            </summary>
            <remarks><see cref="P:BootstrapBlazor.Components.Table`1.ScrollMode"/> 开启虚拟滚动 <see cref="F:BootstrapBlazor.Components.ScrollMode.Virtual"/> 时使用</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.PageItems">
            <summary>
            获得 每页条目数量 由 <see cref="F:BootstrapBlazor.Components.Table`1._pageItems"/> 与 <see cref="P:BootstrapBlazor.Components.Table`1.PageItemsSource"/> 设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.IsPage">
            <summary>
            获得 是否分页查询模式 默认为 false 由 <see cref="P:BootstrapBlazor.Components.Table`1.IsPagination"/> 设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.IsVirtualScroll">
            <summary>
            获得 是否为虚拟滚动查询模式 默认为 false 由 <see cref="P:BootstrapBlazor.Components.Table`1.ScrollMode"/> 设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.Searchs">
            <summary>
            获得 通过列集合中的 <see cref="P:BootstrapBlazor.Components.ITableColumn.Searchable"/> 列与 <see cref="P:BootstrapBlazor.Components.QueryPageOptions.SearchText"/> 拼装 IFilterAction 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.Searches">
            <summary>
            获得 通过列集合中的 <see cref="P:BootstrapBlazor.Components.ITableColumn.Searchable"/> 列与 <see cref="P:BootstrapBlazor.Components.QueryPageOptions.SearchText"/> 拼装 IFilterAction 集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.CustomerSearchs">
            <summary>
            获得 <see cref="P:BootstrapBlazor.Components.Table`1.CustomerSearchModel"/> 中过滤条件 <see cref="P:BootstrapBlazor.Components.Table`1.SearchTemplate"/> 模板中的条件请使用 <see cref="P:BootstrapBlazor.Components.QueryPageOptions.AdvanceSearches" />获得
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.CustomerSearches">
            <summary>
            获得 <see cref="P:BootstrapBlazor.Components.Table`1.CustomerSearchModel"/> 中过滤条件 <see cref="P:BootstrapBlazor.Components.Table`1.SearchTemplate"/> 模板中的条件请使用 <see cref="P:BootstrapBlazor.Components.QueryPageOptions.AdvanceSearches" />获得
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.AdvanceSearchs">
            <summary>
            获得 <see cref="P:BootstrapBlazor.Components.Table`1.SearchModel"/> 中过滤条件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.AdvanceSearches">
            <summary>
            获得 <see cref="P:BootstrapBlazor.Components.Table`1.SearchModel"/> 中过滤条件
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.Filters">
            <summary>
            获得 过滤条件集合 等同于 <see cref="P:BootstrapBlazor.Components.Table`1.Filters"/> 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.IsFristQuery">
            <summary>
            获得 是否为首次查询 默认 false
            </summary>
            <remarks><see cref="T:BootstrapBlazor.Components.Table`1"/> 组件首次查询数据时为 true</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.IsFirstQuery">
            <summary>
            获得 是否为首次查询 默认 false
            </summary>
            <remarks><see cref="T:BootstrapBlazor.Components.Table`1"/> 组件首次查询数据时为 true</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.QueryPageOptions.IsTriggerByPagination">
            <summary>
            获得 是否为刷新分页查询 默认 false 
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ScrollIntoViewOptions">
            <summary>
            ScrollIntoViewOptions 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ScrollIntoViewOptions.Behavior">
            <summary>
            Determines whether scrolling is instant or animates smoothly
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ScrollIntoViewOptions.Block">
            <summary>
            Defines the vertical alignment of the element within the scrollable ancestor container
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ScrollIntoViewOptions.Inline">
            <summary>
            Defines the horizontal alignment of the element within the scrollable ancestor container
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ScrollIntoViewBehavior">
            <summary>
            Determines whether scrolling is instant or animates smoothly. This option is a string which must take one of the following values
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollIntoViewBehavior.Smooth">
            <summary>
            scrolling should animate smoothly
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollIntoViewBehavior.Instant">
            <summary>
            scrolling should happen instantly in a single jump
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollIntoViewBehavior.Auto">
            <summary>
            scroll behavior is determined by the computed value of scroll-behavior
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ScrollIntoViewBlock">
            <summary>
            Defines vertical alignment
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollIntoViewBlock.Start">
            <summary>
            Start
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollIntoViewBlock.Center">
            <summary>
            Center
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollIntoViewBlock.End">
            <summary>
            End
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollIntoViewBlock.Nearest">
            <summary>
            Nearest
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ScrollIntoViewInline">
            <summary>
            Defines horizontal alignment
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollIntoViewInline.Start">
            <summary>
            Start
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollIntoViewInline.Center">
            <summary>
            Center
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollIntoViewInline.End">
            <summary>
            End
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.ScrollIntoViewInline.Nearest">
            <summary>
            Nearest
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ScrollOptions">
            <summary>
            ScrollOptions 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ScrollOptions.ScrollWidth">
            <summary>
            获得/设置 滚动条宽度 默认 5px
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ScrollOptions.ScrollHoverWidth">
            <summary>
            获得/设置 滚动条鼠标悬浮宽度 默认 5px
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.StepSettings">
            <summary>
            StepSettings 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepSettings.Int">
            <summary>
            获得/设置 int 数据类型步长 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepSettings.Long">
            <summary>
            获得/设置 long 数据类型步长 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepSettings.Short">
            <summary>
            获得/设置 short 数据类型步长 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepSettings.Float">
            <summary>
            获得/设置 float 数据类型步长 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepSettings.Double">
            <summary>
            获得/设置 double 数据类型步长 默认 null 未设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.StepSettings.Decimal">
            <summary>
            获得/设置 decimal 数据类型步长 默认 null 未设置
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.StepSettings.GetStep(System.Type)">
            <summary>
            获得步长字符串
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TabItemBindOptions">
            <summary>
            标签与菜单捆绑配置项
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItemBindOptions.Binders">
            <summary>
            获得/设置 集合
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TabItemTextOptions">
            <summary>
            菜单与标签捆绑配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItemTextOptions.Text">
            <summary>
            获得/设置 Tab 标签文本
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItemTextOptions.Icon">
            <summary>
            获得/设置 图标字符串
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItemTextOptions.IsActive">
            <summary>
            获得/设置 是否激活 默认为 true
            </summary>
            <value></value>
        </member>
        <member name="P:BootstrapBlazor.Components.TabItemTextOptions.Closable">
            <summary>
            获得/设置 当前 TabItem 是否可关闭 默认为 true
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItemTextOptions.Reset">
            <summary>
            重置方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TabItemTextOptions.Valid">
            <summary>
            是否可用方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.TableExportOptions">
            <summary>
            Configuration class for exporting tables to Excel
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableExportOptions.EnableFormat">
            <summary>
            Gets or sets whether to use formatting. Default is true. 
            If <see cref="P:BootstrapBlazor.Components.TableColumn`2.FormatString"/> or <see cref="P:BootstrapBlazor.Components.TableColumn`2.Formatter"/> is set, the formatted value will be used.
            </summary>
            <remarks>Note: After formatting, the returned value is a <code>string</code>, which may change the original value type.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.TableExportOptions.EnableLookup">
            <summary>
            Gets or sets whether to use Lookup. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableExportOptions.AutoMergeArray">
            <summary>
            Gets or sets whether to merge array-type values. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableExportOptions.UseEnumDescription">
            <summary>
            Gets or sets whether to use the <see cref="T:System.ComponentModel.DescriptionAttribute"/> tag for enum types. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableExportOptions.ArrayDelimiter">
            <summary>
            Gets or sets the delimiter used when merging array-type values. Default is a comma.
            </summary>
            <remarks>Note: After formatting, the returned value is a <code>string</code>, which may change the original value type.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.TableExportOptions.EnableAutoFilter">
            <summary>
            Gets or sets whether to enable Excel auto-filtering. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableExportOptions.EnableAutoWidth">
            <summary>
            Gets or sets whether to enable Excel auto-width. Default is false.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableSettings">
            <summary>
            TableSettings 表格组件全局默认设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableSettings.CheckboxColumnWidth">
            <summary>
            获得/设置 复选框宽度 默认 36
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableSettings.DetailColumnWidth">
            <summary>
            获得/设置 明细行 Row Header 宽度 默认 24
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableSettings.ShowCheckboxTextColumnWidth">
            <summary>
            获得/设置 显示文字的复选框列宽度 默认 80
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableSettings.LineNoColumnWidth">
            <summary>
            获得/设置 行号列宽度 默认 60
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableSettings.ColumnMinWidth">
            <summary>
            获得/设置 列最小宽度 默认 64
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableSettings.TableRenderMode">
            <summary>
            获得/设置 表格渲染模式
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.TableSettings.TableExportOptions">
            <summary>
            获得/设置 TableExportExcelOptions 配置 默认为不为空
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ThrottleOptions">
            <summary>
            限流配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThrottleOptions.Interval">
            <summary>
            获得/设置 限流时长 默认 500 单位毫秒
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThrottleOptions.DelayAfterExecution">
            <summary>
            获得/设置 是否执行结束后开始延时 默认 false
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ThrottleOptions.ResetIntervalOnException">
            <summary>
            获得/设置 发生错误时是否重置时长 默认 false
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.WebClientOptions">
            <summary>
            WebClient 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.WebClientOptions.EnableIpLocator">
            <summary>
            获得/设置 是否开启 IP 定位功能 默认 false 未开启
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.RouteTableFactory.Create(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.String)">
            <summary>
            
            </summary>
            <param name="assemblies"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.AjaxService">
            <summary>
            Ajax 服务类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AjaxService.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Ajax 服务类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AjaxService.InvokeAsync(BootstrapBlazor.Components.AjaxOption,System.Threading.CancellationToken)">
            <summary>
            调用Ajax方法发送请求
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.AjaxService.Goto(System.String,System.Threading.CancellationToken)">
            <summary>
            调用 Goto 方法跳转其他页面
            </summary>
            <param name="url"></param>
            <param name="token"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.BluetoothDeviceInfo">
            <summary>
            蓝牙设备信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothDeviceInfo.ManufacturerName">
            <summary>
            获得/设置 ManufacturerName
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothDeviceInfo.ModelNumber">
            <summary>
            获得/设置 ModelNumber
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothDeviceInfo.HardwareRevision">
            <summary>
            获得/设置 HardwareRevision
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothDeviceInfo.FirmwareRevision">
            <summary>
            获得/设置 FirmwareRevision
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothDeviceInfo.SoftwareRevision">
            <summary>
            获得/设置 SoftwareRevision
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothDeviceInfo.SystemId">
            <summary>
            获得/设置 SystemId
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothDeviceInfo.IEEERegulatoryCertificationDataList">
            <summary>
            获得/设置 IEEERegulatoryCertificationDataList
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothDeviceInfo.PnPID">
            <summary>
            获得/设置 PnPID
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SystemId">
            <summary>
            SystemId 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SystemId.ManufacturerIdentifier">
            <summary>
            获得/设置 ManufacturerIdentifier
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SystemId.OrganizationallyUniqueIdentifier">
            <summary>
            获得/设置 OrganizationallyUniqueIdentifier
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PnPID">
            <summary>
            PnPID 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PnPID.VendorIdSource">
            <summary>
            获得/设置 VendorIdSource
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PnPID.ProductId">
            <summary>
            获得/设置 ProductId
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.PnPID.ProductVersion">
            <summary>
            获得/设置 ProductVersion
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BluetoothFilter">
            <summary>
            BluetoothFilter 类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothFilter.Services">
            <summary>
            An array of values indicating the Bluetooth GATT (Generic Attribute Profile) services that a Bluetooth device must support. Each value can be a valid name from the GATT assigned services list, such as 'battery_service' or 'blood_pressure'. You can also pass a full service UUID such as '0000180F-0000-1000-8000-00805f9b34fb' or the short 16-bit (0x180F) or 32-bit alias. Note that these are the same values that can be passed to BluetoothUUID.getService().
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothFilter.Name">
            <summary>
            A string containing the precise name of the device to match against.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothFilter.NamePrefix">
            <summary>
            A string containing the name prefix to match against. All devices that have a name starting with this string will be matched.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothFilter.ManufacturerData">
            <summary>
            An array of objects matching against manufacturer data in the Bluetooth Low Energy (BLE) advertising packets.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothFilter.ServiceData">
            <summary>
            An array of objects matching against service data in the Bluetooth Low Energy (BLE) advertising packets.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BluetoothManufacturerDataFilter">
            <summary>
            BluetoothManufacturerDataFilter 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothManufacturerDataFilter.CompanyIdentifier">
            <summary>
            A mandatory number identifying the manufacturer of the device. Company identifiers are listed in the Bluetooth specification Assigned numbers, Section 7. For example, to match against devices manufactured by "Digianswer A/S", with assigned hex number 0x000C, you would specify 12.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothManufacturerDataFilter.DataPrefix">
            <summary>
            The data prefix. A buffer containing values to match against the values at the start of the advertising manufacturer data.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothManufacturerDataFilter.Mask">
            <summary>
            This allows you to match against bytes within the manufacturer data, by masking some bytes of the service data dataPrefix.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BluetoothRequestOptions">
            <summary>
            BluetoothRequestOptions 参数类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothRequestOptions.Filters">
            <summary>
            An array of filter objects indicating the properties of devices that will be matched. To match a filter object, a device must match all the values of the filter: all its specified services, name, namePrefix, and so on
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothRequestOptions.ExclusionFilters">
            <summary>
            An array of filter objects indicating the characteristics of devices that will be excluded from matching. The properties of the array elements are the same as for <see cref="P:BootstrapBlazor.Components.BluetoothRequestOptions.Filters"/>.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothRequestOptions.OptionalServices">
            <summary>
            An array of optional service identifiers.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothRequestOptions.OptionalManufacturerData">
            <summary>
            An optional array of integer manufacturer codes. This takes the same values as companyIdentifier.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothRequestOptions.AcceptAllDevices">
            <summary>
            A boolean value indicating that the requesting script can accept all Bluetooth devices. The default is false.
            </summary>
            <remarks>This option is appropriate when devices have not advertised enough information for filtering to be useful. When acceptAllDevices is set to true you should omit all filters and exclusionFilters, and you must set optionalServices to be able to use the returned device.</remarks>
        </member>
        <member name="M:BootstrapBlazor.Components.BluetoothRequestOptions.GetAllServices">
            <summary>
            获得所有蓝牙服务
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.BluetoothServiceDataFilter">
            <summary>
            BluetoothServiceDataFilter 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothServiceDataFilter.Service">
            <summary>
            The GATT service name, the service UUID, or the UUID 16-bit or 32-bit form. This takes the same values as the elements of the services array.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothServiceDataFilter.DataPrefix">
            <summary>
            The data prefix. A buffer containing values to match against the values at the start of the advertising service data.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothServiceDataFilter.Mask">
            <summary>
            This allows you to match against bytes within the manufacturer data, by masking some bytes of the service data dataPrefix.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BluetoothServicesEnum">
            <summary>
            Bluetooth 设备服务枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.GenericAccess">
            <summary>
            通用访问
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.GenericAttribute">
            <summary>
            通用属性
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.ImmediateAlert">
            <summary>
            即时闹钟
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.LinkLoss">
            <summary>
            连接丢失
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.TxPower">
            <summary>
            发送功率
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.CurrentTime">
            <summary>
            当前时间
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.ReferenceTimeUpdate">
            <summary>
            参照时间更新
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.NextDstChange">
            <summary>
            下个日光节约时间（夏令时）更改
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.Glucose">
            <summary>
            葡萄糖
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.HealthThermometer">
            <summary>
            温度计
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.DeviceInformation">
            <summary>
            设备信息
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.HeartRate">
            <summary>
            心率
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.PhoneAlertStatus">
            <summary>
            手机报警状态
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.BatteryService">
            <summary>
            电池数据
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.BloodPressure">
            <summary>
            血压
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.AlertNotification">
            <summary>
            闹钟通知
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.HumanInterfaceDevice">
            <summary>
            HID设备
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.ScanParameters">
            <summary>
            扫描参数
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.RunningSpeedAndCadence">
            <summary>
            跑步速度、节奏
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.AutomationIo">
            <summary>
            自动化输入输出
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.CyclingSpeedAndCadence">
            <summary>
            循环速度、节奏
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.CyclingPower">
            <summary>
            骑行能量
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.LocationAndNavigation">
            <summary>
            定位及导航
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.EnvironmentalSensing">
            <summary>
            环境传感
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.BodyComposition">
            <summary>
            身体组成
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.UserData">
            <summary>
            用户数据
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.WeightScale">
            <summary>
            体重秤
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.BondManagement">
            <summary>
            设备绑定管理
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.ContinuousGlucoseMonitoring">
            <summary>
            动态血糖检测
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.InternetProtocolSupport">
            <summary>
            互联网协议支持
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.IndoorPositioning">
            <summary>
            室内定位
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.PulseOximeter">
            <summary>
            脉搏血氧计
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.HttpProxy">
            <summary>
            HTTP代理
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.TransportDiscovery">
            <summary>
            传输发现
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.ObjectTransfer">
            <summary>
            对象传输
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.FitnessMachine">
            <summary>
            健康设备
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.MeshProvisioning">
            <summary>
            节点配置
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.MeshProxy">
            <summary>
            节点代理
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.BluetoothServicesEnum.ReconnectionConfiguration">
            <summary>
            重连配置
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BluetoothUUIDAttribute">
            <summary>
            UUID 标签
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BluetoothUUIDAttribute.#ctor(System.String)">
            <summary>
            UUID 标签
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BluetoothUUIDAttribute.Name">
            <summary>
            获得 UUID 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetooth.IsSupport">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetooth.IsAvailable">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetooth.ErrorMessage">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetooth.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            构造函数
            </summary>
            <param name="jsRuntime"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetooth.GetAvailability(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc />
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetooth.RequestDevice(BootstrapBlazor.Components.BluetoothRequestOptions,System.Threading.CancellationToken)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetooth.RequestDevice(System.Collections.Generic.List{System.String},System.Threading.CancellationToken)">
            <summary>
            <inheritdoc />
            </summary>
            <param name="optionalServices"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetooth.OnError(System.String)">
            <summary>
            JavaScript 报错回调方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultBluetoothCharacteristic">
            <summary>
            DefaultBluetoothCharacteristic 实现类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetoothCharacteristic.ServiceUUID">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetoothCharacteristic.UUID">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetoothCharacteristic.Id">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetoothCharacteristic.ErrorMessage">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetoothCharacteristic.IsNotify">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothCharacteristic.#ctor(BootstrapBlazor.Components.JSModule,System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="module"></param>
            <param name="clientId"></param>
            <param name="serviceUUID"></param>
            <param name="characteristicUUID"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothCharacteristic.ReadValue(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothCharacteristic.StartNotifications(System.Func{System.Byte[],System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="notificationCallback"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothCharacteristic.StopNotifications(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothCharacteristic.OnError(System.String)">
            <summary>
            JavaScript 报错回调方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultBluetoothDevice">
            <summary>
            蓝牙设备
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetoothDevice.Name">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetoothDevice.Id">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetoothDevice.ErrorMessage">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetoothDevice.Connected">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothDevice.Connect(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothDevice.Disconnect(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothDevice.GetPrimaryServices(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc />
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothDevice.GetPrimaryService(System.String,System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="serviceUUID"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothDevice.GetDeviceInfo(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothDevice.GetCurrentTime(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc />
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothDevice.GetBatteryValue(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc />
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothDevice.ReadValue(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothDevice.OnError(System.String)">
            <summary>
            JavaScript 报错回调方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothDevice.DisposeAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultBluetoothService">
            <summary>
            DefaultBluetoothService 实现类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetoothService.Name">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetoothService.UUID">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetoothService.Id">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultBluetoothService.ErrorMessage">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothService.#ctor(BootstrapBlazor.Components.JSModule,System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="module"></param>
            <param name="clientId"></param>
            <param name="serviceName"></param>
            <param name="serviceUUID"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothService.GetCharacteristics(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc />
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothService.GetCharacteristic(System.String,System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="characteristicUUID"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBluetoothService.OnError(System.String)">
            <summary>
            JavaScript 报错回调方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.IBluetooth">
            <summary>
            蓝牙服务接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetooth.IsSupport">
            <summary>
            获得 浏览器是否支持蓝牙
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetooth.IsAvailable">
            <summary>
            获得 是否有蓝牙模块
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetooth.ErrorMessage">
            <summary>
            获得 上次运行错误描述信息
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetooth.GetAvailability(System.Threading.CancellationToken)">
            <summary>
            获得所有可用串口
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetooth.RequestDevice(BootstrapBlazor.Components.BluetoothRequestOptions,System.Threading.CancellationToken)">
            <summary>
            请求蓝牙配对方法
            </summary>
            <param name="options"><see cref="T:BootstrapBlazor.Components.BluetoothRequestOptions"/> 实例</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetooth.RequestDevice(System.Collections.Generic.List{System.String},System.Threading.CancellationToken)">
            <summary>
            请求蓝牙配对方法
            </summary>
            <param name="optionalServices"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IBluetoothCharacteristic">
            <summary>
            IBluetoothCharacteristic 接口定义
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetoothCharacteristic.ErrorMessage">
            <summary>
            获得 上次运行错误描述信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetoothCharacteristic.ServiceUUID">
            <summary>
            获得 服务 UUID 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetoothCharacteristic.UUID">
            <summary>
            获得 特征 UUID 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetoothCharacteristic.IsNotify">
            <summary>
            获得 是否已经开始调用 <see cref="M:BootstrapBlazor.Components.IBluetoothCharacteristic.StartNotifications(System.Func{System.Byte[],System.Threading.Tasks.Task},System.Threading.CancellationToken)"/> 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetoothCharacteristic.StartNotifications(System.Func{System.Byte[],System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            设备指定特征开始持续回调方法
            </summary>
            <param name="notificationCallback"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetoothCharacteristic.StopNotifications(System.Threading.CancellationToken)">
            <summary>
            设备指定特征结束回调方法
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetoothCharacteristic.ReadValue(System.Threading.CancellationToken)">
            <summary>
            获得设备指定值方法
            </summary>
            <remarks>比如获得电量方法为 ReadValue("battery_service", "battery_level")</remarks>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IBluetoothDevice">
            <summary>
            IBluetoothDevice 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetoothDevice.Connected">
            <summary>
            获得 当前设备连接状态
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetoothDevice.Id">
            <summary>
            获得 设备 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetoothDevice.Name">
            <summary>
            获得 设备名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetoothDevice.ErrorMessage">
            <summary>
            获得 上次运行错误描述信息
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetoothDevice.Connect(System.Threading.CancellationToken)">
            <summary>
            连接方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetoothDevice.Disconnect(System.Threading.CancellationToken)">
            <summary>
            断开连接方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetoothDevice.GetPrimaryServices(System.Threading.CancellationToken)">
            <summary>
            获得设备所有支持服务
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetoothDevice.GetPrimaryService(System.String,System.Threading.CancellationToken)">
            <summary>
            获得设备指定服务
            </summary>
            <param name="serviceUUID"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetoothDevice.ReadValue(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            获得设备指定值方法
            </summary>
            <remarks>比如获得电量方法为 ReadValue("battery_service", "battery_level")</remarks>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetoothDevice.GetDeviceInfo(System.Threading.CancellationToken)">
            <summary>
            获得设备信息方法
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetoothDevice.GetCurrentTime(System.Threading.CancellationToken)">
            <summary>
            获得设备当前时间方法
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetoothDevice.GetBatteryValue(System.Threading.CancellationToken)">
            <summary>
            获得设备当前时间方法
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IBluetoothService">
            <summary>
            IBluetoothService 接口定义
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetoothService.Name">
            <summary>
            获得 服务名称
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetoothService.UUID">
            <summary>
            获得 服务 UUID 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IBluetoothService.ErrorMessage">
            <summary>
            获得 上次运行错误描述信息
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetoothService.GetCharacteristics(System.Threading.CancellationToken)">
            <summary>
            获得设备所有支持特征
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IBluetoothService.GetCharacteristic(System.String,System.Threading.CancellationToken)">
            <summary>
            获得设备特定支持特征
            </summary>
            <param name="characteristicUUID"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapBlazorRootRegisterService">
            <summary>
            BootstrapBlazorRootRegisterService
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorRootRegisterService.AddProvider(System.Object,BootstrapBlazor.Components.BootstrapBlazorRootContent)">
            <summary>
            Add provider
            </summary>
            <param name="identifier"></param>
            <param name="provider"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorRootRegisterService.RemoveProvider(System.Object,BootstrapBlazor.Components.BootstrapBlazorRootContent)">
            <summary>
            Remove provider
            </summary>
            <param name="identifier"></param>
            <param name="provider"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorRootRegisterService.GetProviders(System.Object)">
            <summary>
            Get all providers by identifier
            </summary>
            <param name="identifier"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorRootRegisterService.Subscribe(System.Object,BootstrapBlazor.Components.BootstrapBlazorRootOutlet)">
            <summary>
            Subscribe
            </summary>
            <param name="identifier"></param>
            <param name="subscriber"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorRootRegisterService.Unsubscribe(System.Object)">
            <summary>
            Unsubscribe
            </summary>
            <param name="identifier"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapBlazorRootRegisterService.NotifyContentProviderChanged(System.Object,BootstrapBlazor.Components.BootstrapBlazorRootContent)">
            <summary>
            Notify content provider changed
            </summary>
            <param name="identifier"></param>
            <param name="provider"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapServiceBase`1">
            <summary>
            BootstrapServiceBase 基类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BootstrapServiceBase`1.Cache">
            <summary>
            获得 回调委托缓存集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapServiceBase`1.Invoke(`0,Microsoft.AspNetCore.Components.ComponentBase)">
            <summary>
            异步回调方法
            </summary>
            <param name="option"></param>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapServiceBase`1.Register(Microsoft.AspNetCore.Components.ComponentBase,System.Func{`0,System.Threading.Tasks.Task})">
            <summary>
            注册弹窗事件
            </summary>
            <param name="key"></param>
            <param name="callback"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapServiceBase`1.UnRegister(Microsoft.AspNetCore.Components.ComponentBase)">
            <summary>
            注销弹窗事件
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.CacheManager">
            <summary>
            缓存操作类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.#ctor(System.IServiceProvider,Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            构造函数
            </summary>
            <param name="provider"></param>
            <param name="memoryCache"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.GetOrCreate``1(System.Object,System.Func{Microsoft.Extensions.Caching.Memory.ICacheEntry,``0})">
            <summary>
            获得或者创建指定 Key 缓存项
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.GetOrCreateAsync``1(System.Object,System.Func{Microsoft.Extensions.Caching.Memory.ICacheEntry,System.Threading.Tasks.Task{``0}})">
            <summary>
            获得或者创建指定 Key 缓存项 异步重载方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.TryGetValue``1(System.Object,``0@)">
            <summary>
            <inheritdoc/>
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.Clear(System.Object)">
            <summary>
            清除指定 Key 缓存项
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.SetStartTime">
            <summary>
            设置 App 开始时间
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.SetStartTime(System.DateTimeOffset)">
            <summary>
            设置 App 开始时间
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.GetStartTime">
            <summary>
            获取 App 开始时间
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.CacheManager.Count">
            <summary>
            获得 缓存数量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.CacheManager.Keys">
            <summary>
            获得 缓存键集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.TryGetCacheEntry(System.Object,Microsoft.Extensions.Caching.Memory.ICacheEntry@)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="key"></param>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.CreateLocalizerByType(System.Type)">
            <summary>
            通过 Type 获得 <see cref="T:Microsoft.Extensions.Localization.IStringLocalizer"/> 实例
            </summary>
            <param name="resourceSource"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.GetJsonLocalizationOption">
            <summary>
            获得 <see cref="T:BootstrapBlazor.Components.JsonLocalizationOptions"/> 值
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.GetStringLocalizerFromService(System.Reflection.Assembly,System.String)">
            <summary>
            通过 程序集与类型获得 IStringLocalizer 实例
            </summary>
            <param name="assembly">Assembly 程序集实例</param>
            <param name="typeName">类型名称</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.GetAllStringsByTypeName(System.Reflection.Assembly,System.String)">
            <summary>
            获取指定文化本地化资源集合
            </summary>
            <param name="assembly">Assembly 程序集实例</param>
            <param name="typeName">类型名称</param>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.GetJsonStringByTypeName(BootstrapBlazor.Components.JsonLocalizationOptions,System.Reflection.Assembly,System.String,System.String,System.Boolean)">
            <summary>
            通过指定程序集获取所有本地化信息键值集合
            </summary>
            <param name="option">JsonLocalizationOptions 实例</param>
            <param name="assembly">Assembly 程序集实例</param>
            <param name="typeName">类型名称</param>
            <param name="cultureName">cultureName 未空时使用 CultureInfo.CurrentUICulture.Name</param>
            <param name="forceLoad">默认 false 使用缓存值 设置 true 时内部强制重新加载</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.GetTypeStringsFromResolve(System.String,System.Boolean)">
            <summary>
            通过 ILocalizationResolve 接口实现类获得本地化键值集合
            </summary>
            <param name="typeName"></param>
            <param name="includeParentCultures"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.GetDisplayName(System.Type,System.String)">
            <summary>
            获得类型属性的描述信息
            </summary>
            <param name="modelType"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.GetLocalizerValueFromResourceManager(System.String)">
            <summary>
            通过指定 Key 获取资源文件中的键值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.GetKeyValue``2(``0,System.Type)">
            <summary>
            获得 指定模型标记 <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute"/> 的属性值
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="model"></param>
            <param name="customAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CacheManager.GetOnValueChangedInvoke``1(System.Type)">
            <summary>
            创建 OnValueChanged 回调委托
            </summary>
            <typeparam name="TModel"></typeparam>
            <param name="fieldType"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ClipboardService">
            <summary>
            粘贴板服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ClipboardService.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            粘贴板服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ClipboardService.Get(System.Threading.CancellationToken)">
            <summary>
            获取剪切板数据方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ClipboardService.GetText(System.Threading.CancellationToken)">
            <summary>
            获得剪切板拷贝文字方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ClipboardService.Copy(System.String,System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            将指定文本设置到剪切板方法
            </summary>
            <param name="text">要拷贝的文字</param>
            <param name="callback">拷贝后回调方法</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ComponentHtmlRenderer.RenderAsync``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            <inheritdoc/>
            </summary>
            <typeparam name="TComponent"></typeparam>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ComponentHtmlRenderer.RenderAsync(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="componentType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DataServiceBase`1">
            <summary>
            IDataServie 实现类基类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DataServiceBase`1.AddAsync(`0)">
            <summary>
            新建数据操作方法
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DataServiceBase`1.DeleteAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            删除数据操作方法
            </summary>
            <param name="models"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DataServiceBase`1.SaveAsync(`0,BootstrapBlazor.Components.ItemChangedType)">
            <summary>
            保存数据操作方法
            </summary>
            <param name="model"></param>
            <param name="changedType"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DataServiceBase`1.QueryAsync(BootstrapBlazor.Components.QueryPageOptions)">
            <summary>
            查询数据操作方法
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultBrowserFingerService">
            <summary>
            浏览器指纹服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBrowserFingerService.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            浏览器指纹服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultBrowserFingerService.GetFingerCodeAsync(System.Threading.CancellationToken)">
            <summary>
            获取剪切板数据方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultCalendarFestivals.GetFestival(System.DateTime)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultCalendarHolidays.IsHoliday(System.DateTime)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultCalendarHolidays.IsWorkday(System.DateTime)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultConnectionService">
            <summary>
            当前链接服务
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultConnectionService.Count">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultConnectionService.AddOrUpdate(BootstrapBlazor.Components.ClientInfo)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultConnectionService.TryGetValue(System.String,BootstrapBlazor.Components.ConnectionItem@)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultConnectionService.Connections">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultConnectionService.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultGeoLocationService.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            构造函数
            </summary>
            <param name="jsRuntime"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultGeoLocationService.GetPositionAsync">
            <summary>
            get the current position of the device
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultGeoLocationService.WatchPositionAsync(System.Func{BootstrapBlazor.Components.GeolocationPosition,System.Threading.Tasks.Task})">
            <summary>
            register a handler function that will be called automatically each time the position of the device changes
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultGeoLocationService.ClearWatchPositionAsync(System.Int64)">
            <summary>
            unregister location/error monitoring handlers previously installed using <see cref="M:BootstrapBlazor.Components.DefaultGeoLocationService.WatchPositionAsync(System.Func{BootstrapBlazor.Components.GeolocationPosition,System.Threading.Tasks.Task})"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultGeoLocationService.WatchCallback(BootstrapBlazor.Components.GeolocationPosition)">
            <summary>
            获得 当前设备地理位置由 JS 调用
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultGeoLocationService.DisposeAsync(System.Boolean)">
            <summary>
            DisposeAsync 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultGeoLocationService.DisposeAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultHtml2ImageService">
            <summary>
            默认 Html2Image 实现
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultHtml2ImageService.GetDataAsync(System.String,BootstrapBlazor.Components.IHtml2ImageOptions)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultHtml2ImageService.GetStreamAsync(System.String,BootstrapBlazor.Components.IHtml2ImageOptions)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultHtml2PdfService">
            <summary>
            默认 Html to Pdf 实现 
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultHtml2PdfService.PdfDataAsync(System.String)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultHtml2PdfService.PdfStreamAsync(System.String)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultHtml2PdfService.PdfDataFromHtmlAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Export method
            </summary>
            <param name="html">html raw string</param>
            <param name="links"></param>
            <param name="scripts"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultHtml2PdfService.PdfStreamFromHtmlAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Export method
            </summary>
            <param name="html">html raw string</param>
            <param name="links"></param>
            <param name="scripts"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultIconTheme.GetIcons">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultIdGenerator">
            <summary>
            默认组件 ID 生成器
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultIdGenerator.Generate(System.Object)">
            <summary>
            生成组件 Id 字符串
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultJSVersionService.GetVersion">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultNetowrkMonitorService">
            <summary>
            网络状态服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultNetowrkMonitorService.GetNetworkMonitorState(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultNetowrkMonitorService.RegisterStateChangedCallback(Microsoft.AspNetCore.Components.IComponent,System.Func{BootstrapBlazor.Components.NetworkMonitorState,System.Threading.Tasks.Task})">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="component"></param>
            <param name="callback"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultNetowrkMonitorService.UnregisterStateChangedCallback(Microsoft.AspNetCore.Components.IComponent)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultNetowrkMonitorService.TriggerNetworkStateChanged(BootstrapBlazor.Components.NetworkMonitorState)">
            <summary>
            JSInvoke 回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultNetowrkMonitorService.DisposeAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultTableExport.ExportAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultTableExport.ExportExcelAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultTableExport.ExportCsvAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultTableExport.ExportPdfAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultThemeProvider.ThemeChangedAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultThemeProvider.SetThemeAsync(System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="themeName"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultThemeProvider.GetThemeAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultThemeProvider.TriggerThemeChanged(System.String)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultThrottleDispatcherFactory.GetOrCreate(System.String,BootstrapBlazor.Components.ThrottleOptions)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="key"></param>
            <param name="options"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultThrottleDispatcherFactory.Clear(System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultZipArchiveService.ArchiveAsync(System.Collections.Generic.IEnumerable{System.String},BootstrapBlazor.Components.ArchiveOptions)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="files">要归档的文件集合</param>
            <param name="options">归档配置</param>
            <returns>归档数据流</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultZipArchiveService.ArchiveAsync(System.String,System.Collections.Generic.IEnumerable{System.String},BootstrapBlazor.Components.ArchiveOptions)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="archiveFileName">归档文件</param>
            <param name="files">要归档的文件集合</param>
            <param name="options">归档配置</param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultZipArchiveService.ArchiveDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="archiveFileName">归档文件</param>
            <param name="directoryName">要归档文件夹</param>
            <param name="compressionLevel"></param>
            <param name="includeBaseDirectory"></param>
            <param name="encoding"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultZipArchiveService.ExtractToDirectory(System.String,System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="archiveFile">归档文件</param>
            <param name="destinationDirectoryName">解压缩文件夹</param>
            <param name="overwriteFiles">是否覆盖文件 默认 false 不覆盖</param>
            <param name="encoding">编码方式 默认 null 内部使用 UTF-8</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultZipArchiveService.GetEntry(System.String,System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="archiveFile">归档文件</param>
            <param name="entryFile">解压缩文件</param>
            <param name="overwriteFiles">是否覆盖文件 默认 false 不覆盖</param>
            <param name="encoding">编码方式 默认 null 内部使用 UTF-8</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.EyeDropperService">
            <summary>
            EyeDropper 服务用于屏幕吸色
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EyeDropperService.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            EyeDropper 服务用于屏幕吸色
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EyeDropperService.PickAsync(System.Threading.CancellationToken)">
            <summary>
            全屏方法，已经全屏时再次调用后退出全屏
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.FullScreenService">
            <summary>
            FullScreen 服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FullScreenService.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            FullScreen 服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.FullScreenService.Toggle(BootstrapBlazor.Components.FullScreenOption,System.Threading.CancellationToken)">
            <summary>
            全屏方法，已经全屏时再次调用后退出全屏
            </summary>
            <param name="option"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IBrowserFingerService">
            <summary>
            浏览器指纹接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IBrowserFingerService.GetFingerCodeAsync(System.Threading.CancellationToken)">
            <summary>
            获得当前浏览器指纹方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ICacheManager">
            <summary>
            CacheManager 接口类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ICacheManager.GetOrCreate``1(System.Object,System.Func{Microsoft.Extensions.Caching.Memory.ICacheEntry,``0})">
            <summary>
            
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="key"></param>
            <param name="factory"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ICacheManager.GetOrCreateAsync``1(System.Object,System.Func{Microsoft.Extensions.Caching.Memory.ICacheEntry,System.Threading.Tasks.Task{``0}})">
            <summary>
            
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="key"></param>
            <param name="factory"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ICacheManager.TryGetValue``1(System.Object,``0@)">
            <summary>
            获取指定键值
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ICacheManager.SetStartTime">
            <summary>
            设置 App 开始时间
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ICacheManager.GetStartTime">
            <summary>
            获取 App 开始时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ICacheManager.Clear(System.Object)">
            <summary>
            通过指定 key 清除缓存方法
            </summary>
            <param name="key"></param>
        </member>
        <member name="P:BootstrapBlazor.Components.ICacheManager.Count">
            <summary>
            获得 缓存数量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ICacheManager.Keys">
            <summary>
            获得 缓存键集合
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ICacheManager.TryGetCacheEntry(System.Object,Microsoft.Extensions.Caching.Memory.ICacheEntry@)">
            <summary>
            通过指定 key 获取缓存项 <see cref="T:Microsoft.Extensions.Caching.Memory.ICacheEntry"/> 实例
            </summary>
            <param name="key"></param>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ICalendarFestivals">
            <summary>
            节日接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ICalendarFestivals.GetFestival(System.DateTime)">
            <summary>
            获得 节日键值对
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ICalendarHolidays">
            <summary>
            休假接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ICalendarHolidays.IsHoliday(System.DateTime)">
            <summary>
            是否为假日
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ICalendarHolidays.IsWorkday(System.DateTime)">
            <summary>
            是否为工作日
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IComponentHtmlRenderer">
            <summary>
            IComponentHtmlRenderer interface
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IComponentHtmlRenderer.RenderAsync``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            转化成 Html 片段方法
            </summary>
            <typeparam name="TComponent"></typeparam>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IComponentHtmlRenderer.RenderAsync(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            转化成 Html 片段方法
            </summary>
            <param name="type">Blazor 组件类型</param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IComponentIdGenerator">
            <summary>
            组件 ID 生成器接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IComponentIdGenerator.Generate(System.Object)">
            <summary>
            生成组件 Id 方法
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IConnectionService">
            <summary>
            当前链接服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IConnectionService.AddOrUpdate(BootstrapBlazor.Components.ClientInfo)">
            <summary>
            增加或更新当前 Key
            </summary>
            <param name="client">ClientInfo 实例</param>
        </member>
        <member name="M:BootstrapBlazor.Components.IConnectionService.TryGetValue(System.String,BootstrapBlazor.Components.ConnectionItem@)">
            <summary>
            获得指定 key 的连接信息
            </summary>
            <param name="key">键值</param>
            <param name="value">连接信息</param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.IConnectionService.Connections">
            <summary>
            获得 链接集合
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IConnectionService.Count">
            <summary>
            获得在线连接数
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IDataService`1">
            <summary>
            IDataService 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IDataService`1.AddAsync(`0)">
            <summary>
            新建数据方法
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IDataService`1.SaveAsync(`0,BootstrapBlazor.Components.ItemChangedType)">
            <summary>
            保存数据方法
            </summary>
            <param name="model">保存实体类实例</param>
            <param name="changedType"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IDataService`1.DeleteAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            删除数据方法
            </summary>
            <param name="models">要删除的数据集合</param>
            <returns>成功返回真，失败返回假</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IDataService`1.QueryAsync(BootstrapBlazor.Components.QueryPageOptions)">
            <summary>
            查询数据方法
            </summary>
            <param name="option">查询条件参数集合</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.NullDataService`1">
            <summary>
            内部默认数据注入服务实现类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NullDataService`1.QueryAsync(BootstrapBlazor.Components.QueryPageOptions)">
            <summary>
            查询操作方法
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.NullDataService`1.SaveAsync(`0,BootstrapBlazor.Components.ItemChangedType)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="changedType"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.NullDataService`1.DeleteAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            
            </summary>
            <param name="models"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IDispatchService`1">
            <summary>
            分发服务接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IDispatchService`1.Dispatch(BootstrapBlazor.Components.DispatchEntry{`0})">
            <summary>
            分发方法
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.IDispatchService`1.Subscribe(System.Func{BootstrapBlazor.Components.DispatchEntry{`0},System.Threading.Tasks.Task})">
            <summary>
            订阅分发
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.IDispatchService`1.UnSubscribe(System.Func{BootstrapBlazor.Components.DispatchEntry{`0},System.Threading.Tasks.Task})">
            <summary>
            取消订阅分发
            </summary>
            <param name="callback"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:BootstrapBlazor.Components.IEntityFrameworkCoreDataService">
            <summary>
            IEntityFrameworkCoreDataService 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IEntityFrameworkCoreDataService.CancelAsync">
            <summary>
            取消方法，由于编辑时使用的是克隆数据，常见取消用法不需要写任何代码，可用于保存数据下次编辑时恢复
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IEntityFrameworkCoreDataService.EditAsync(System.Object)">
            <summary>
            编辑方法，可对未提供编辑 UI 的数据进行填充
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IExportPdf">
            <summary>
            导出 Pdf 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IExportPdf.PdfDataAsync(System.String)">
            <summary>
            导出 Pdf 数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IExportPdf.PdfStreamAsync(System.String)">
            <summary>
            导出 Pdf 流
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IGeoLocationService">
            <summary>
            设备地理位置服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IGeoLocationService.GetPositionAsync">
            <summary>
            获得设备地理位置方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IGeoLocationService.WatchPositionAsync(System.Func{BootstrapBlazor.Components.GeolocationPosition,System.Threading.Tasks.Task})">
            <summary>
            注册 WatchPositionAsync 监控地理位置变化方法
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IGeoLocationService.ClearWatchPositionAsync(System.Int64)">
            <summary>
            清除 WatchPositionAsync 方法
            </summary>
            <param name="id"><see cref="M:BootstrapBlazor.Components.IGeoLocationService.WatchPositionAsync(System.Func{BootstrapBlazor.Components.GeolocationPosition,System.Threading.Tasks.Task})"/> 方法返回值</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IHtml2Image">
            <summary>
            IHtml2Image 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IHtml2Image.GetDataAsync(System.String,BootstrapBlazor.Components.IHtml2ImageOptions)">
            <summary>
            Export method
            </summary>
            <param name="selector">选择器</param>
            <param name="options"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.IHtml2Image.GetStreamAsync(System.String,BootstrapBlazor.Components.IHtml2ImageOptions)">
            <summary>
            Export method
            </summary>
            <param name="selector">选择器</param>
            <param name="options"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.IHtml2ImageOptions">
            <summary>
            IHtml2ImageOptions 选项类接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IHtml2ImageOptions.Width">
            <summary>
            Width in pixels to be applied to node before rendering.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IHtml2ImageOptions.Height">
            <summary>
            Height in pixels to be applied to node before rendering.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IHtml2ImageOptions.BackgroundColor">
            <summary>
            A string value for the background color, any valid CSS color value.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IHtml2ImageOptions.CanvasWidth">
            <summary>
            Width in pixels to be applied to canvas on export.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IHtml2ImageOptions.CanvasHeight">
            <summary>
            Height in pixels to be applied to canvas on export.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IHtml2ImageOptions.IncludeStyleProperties">
            <summary>
            An array of style properties to be copied to node's style before rendering.
            For performance-critical scenarios, users may want to specify only the required properties instead of all styles.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IHtml2ImageOptions.Quality">
            <summary>
            A number between `0` and `1` indicating image quality (e.g. 0.92 => 92%)
            of the JPEG image.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IHtml2ImageOptions.PixelRatio">
            <summary>
            The pixel ratio of captured image. Default is the actual pixel ratio of
            the device. Set 1 to use as initial-scale 1 for the image
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IHtml2ImageOptions.Type">
            <summary>
            A string indicating the image format. The default type is image/png; that type is also used if the given type isn't supported.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IHtml2Pdf">
            <summary>
            Html export PDF service
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IHtml2Pdf.PdfDataAsync(System.String)">
            <summary>
            Export method
            </summary>
            <param name="url">url</param>
        </member>
        <member name="M:BootstrapBlazor.Components.IHtml2Pdf.PdfStreamAsync(System.String)">
            <summary>
            Export method
            </summary>
            <param name="url">url</param>
        </member>
        <member name="M:BootstrapBlazor.Components.IHtml2Pdf.PdfDataFromHtmlAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Export method
            </summary>
            <param name="html">html raw string</param>
            <param name="links"></param>
            <param name="scripts"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.IHtml2Pdf.PdfStreamFromHtmlAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Export method
            </summary>
            <param name="html">html raw string</param>
            <param name="links"></param>
            <param name="scripts"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.IIconTheme">
            <summary>
            Icon 主题服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IIconTheme.GetIcons">
            <summary>
            获得所有图标
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ILookupService">
            <summary>
            ILookupService 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ILookupService.GetItemsByKey(System.String)">
            <summary>
            根据指定键值获取 Lookup 集合方法
            </summary>
            <param name="key">获得 Lookup 数据集合键值</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ILookupService.GetItemsByKey(System.String,System.Object)">
            <summary>
            根据指定键值获取 Lookup 集合方法
            </summary>
            <param name="key">获得 Lookup 数据集合键值</param>
            <param name="data">Lookup 键值附加数据</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ILookupService.GetItemsByKeyAsync(System.String,System.Object)">
            <summary>
            根据指定键值获取 Lookup 集合异步方法
            </summary>
            <param name="key">获得 Lookup 数据集合键值</param>
            <param name="data">Lookup 键值附加数据</param>
        </member>
        <member name="T:BootstrapBlazor.Components.INetworkMonitorService">
            <summary>
            Defines a service for monitoring network state and retrieving the current network monitor status.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.INetworkMonitorService.GetNetworkMonitorState(System.Threading.CancellationToken)">
            <summary>
            Retrieves the current state of the network monitor.
            </summary>
            <param name="token">A cancellation token that can be used to cancel the operation.</param>
            <returns>A task representing the asynchronous operation. The task result contains the current <see
            cref="T:BootstrapBlazor.Components.NetworkMonitorState"/>.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.INetworkMonitorService.RegisterStateChangedCallback(Microsoft.AspNetCore.Components.IComponent,System.Func{BootstrapBlazor.Components.NetworkMonitorState,System.Threading.Tasks.Task})">
            <summary>
            Registers a callback to be invoked when the network monitor state changes.
            </summary>
            <remarks>The callback is executed asynchronously whenever the network monitor detects a change in
            state. Ensure that the callback function is thread-safe and handles any exceptions that may occur during
            execution.</remarks>
            <param name="component">The component that will be associated with the callback. Cannot be null.</param>
            <param name="callback">A function to be called when the network monitor state changes. The function receives the new state and returns
            a task. Cannot be null.</param>
        </member>
        <member name="M:BootstrapBlazor.Components.INetworkMonitorService.UnregisterStateChangedCallback(Microsoft.AspNetCore.Components.IComponent)">
            <summary>
            Unregisters a previously registered callback for state changes on the specified component.
            </summary>
            <param name="component">The component for which the state change callback should be unregistered. Cannot be null.</param>
        </member>
        <member name="T:BootstrapBlazor.Components.BaiduIpLocatorProvider">
            <summary>
            百度搜索引擎 IP 定位器
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BaiduIpLocatorProvider.#ctor(System.Net.Http.IHttpClientFactory,Microsoft.Extensions.Options.IOptions{BootstrapBlazor.Components.BootstrapBlazorOptions},Microsoft.Extensions.Logging.ILogger{BootstrapBlazor.Components.BaiduIpLocatorProvider})">
            <summary>
            百度搜索引擎 IP 定位器
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BaiduIpLocatorProvider.LocateByIp(System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="ip"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.BaiduIpLocatorProvider.GetHttpClient">
            <summary>
            获得 HttpClient 实例方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BaiduIpLocatorProvider.GetUrl(System.String)">
            <summary>
            获得 Url 地址
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BaiduIpLocatorProvider.Fetch(System.String,System.Net.Http.HttpClient,System.Threading.CancellationToken)">
            <summary>
            请求获得地理位置接口方法
            </summary>
            <param name="url"></param>
            <param name="client"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.BaiduIpLocatorProvider.LocationResult">
            <summary>
            LocationResult 结构体
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProvider.LocationResult.Status">
            <summary>
            获得/设置 结果状态返回码 为 0 时通讯正常
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProvider.LocationResult.Data">
            <summary>
            获得/设置 定位信息
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BaiduIpLocatorProvider.LocationResult.ToString">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProvider.LocationData.Location">
            <summary>
            获得/设置 定位信息
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BaiduIpLocatorProviderV2">
            <summary>
            BaiduIPLocatorV2 第二个版本实现类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.#ctor(System.Net.Http.IHttpClientFactory,Microsoft.Extensions.Options.IOptions{BootstrapBlazor.Components.BootstrapBlazorOptions},Microsoft.Extensions.Logging.ILogger{BootstrapBlazor.Components.BaiduIpLocatorProvider})">
            <summary>
            BaiduIPLocatorV2 第二个版本实现类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.GetUrl(System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.Fetch(System.String,System.Net.Http.HttpClient,System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="url"></param>
            <param name="client"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.Continent">
            <summary>
            获得/设置 州
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.Country">
            <summary>
            获得/设置 国家
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.ZipCode">
            <summary>
            获得/设置 邮编
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.TimeZone">
            <summary>
            获得/设置 时区
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.Accuracy">
            <summary>
            获得/设置 精度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.Owner">
            <summary>
            获得/设置 所属
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.Isp">
            <summary>
            获得/设置 运营商
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.Source">
            <summary>
            获得/设置 来源
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.AreaCode">
            <summary>
            获得/设置 区号
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.AdCode">
            <summary>
            获得/设置 行政区划代码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.AsNumber">
            <summary>
            获得/设置 国家代码
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.Lat">
            <summary>
            获得/设置 经度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.Lng">
            <summary>
            获得/设置 纬度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.Radius">
            <summary>
            获得/设置 半径
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.Prov">
            <summary>
            获得/设置 省份
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.City">
            <summary>
            获得/设置 城市
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.BaiduIpLocatorProviderV2.LocationDataV2.District">
            <summary>
            获得/设置 区县
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultIpLocatorFactory">
            <summary>
            IIPLocatorFactory 接口实现类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultIpLocatorFactory.#ctor(System.IServiceProvider,Microsoft.Extensions.Options.IOptionsMonitor{BootstrapBlazor.Components.BootstrapBlazorOptions})">
            <summary>
            IIPLocatorFactory 接口实现类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultIpLocatorFactory.Create(System.String)">
            <summary>
            创建 <see cref="T:BootstrapBlazor.Components.IIpLocatorProvider"/> 实例方法
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultIpLocatorProvider">
            <summary>
            默认 IP 地理位置定位器
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultIpLocatorProvider.IpCache">
            <summary>
            获得 Ip 定位结果缓存
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultIpLocatorProvider.Options">
            <summary>
            获得 IpLocator 配置信息
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultIpLocatorProvider.#ctor(Microsoft.Extensions.Options.IOptions{BootstrapBlazor.Components.BootstrapBlazorOptions})">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.DefaultIpLocatorProvider._localhostList">
            <summary>
            获得 本机地址列表
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultIpLocatorProvider.Key">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultIpLocatorProvider.Locate(System.String)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultIpLocatorProvider.LocateByIp(System.String)">
            <summary>
            内部定位方法
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IIpLocatorFactory">
            <summary>
            IIpLocatorFactory 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IIpLocatorFactory.Create(System.String)">
            <summary>
            创建 IIPLocator 实例方法
            </summary>
            <param name="key">注入时使用的 key 值</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IIpLocatorProvider">
            <summary>
            IP 地址定位服务接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IIpLocatorProvider.Key">
            <summary>
            获得/设置 定位器 Key 默认 null 使用已注册的最后一个 Provider
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IIpLocatorProvider.Locate(System.String)">
            <summary>
            通过 IP 地址定位地理位置信息
            </summary>
            <param name="ip"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.IpLocatorOptions">
            <summary>
            IpLocator 配置类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IpLocatorOptions.ProviderName">
            <summary>
            获得/设置 定位器名称 内置支持 BaiduIpLocatorProvider BaiduIpLocatorProviderV2
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IpLocatorOptions.EnableCache">
            <summary>
            获得/设置 是否开启缓存降低请求频率 默认 true 缓存
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IpLocatorOptions.SlidingExpiration">
            <summary>
            获得/设置 滑动过期时间 默认 5 分钟
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IRootComponentGenerator">
            <summary>
            根组件接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IRootComponentGenerator.Generator">
            <summary>
            生成组件方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ITableExcelExport">
            <summary>
            Table 组件 Excel 导出接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExcelExport.ExportAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.String)">
            <summary>
            导出 Excel 方法
            </summary>
            <param name="items">导出数据集合</param>
            <param name="cols">当前可见列数据集合 默认 null 导出全部列</param>
            <param name="fileName">文件名 默认 null ExportData_{DateTime.Now:yyyyMMddHHmmss}.xlsx</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExcelExport.ExportCsvAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.String)">
            <summary>
            导出 Csv 方法
            </summary>
            <param name="items">导出数据集合</param>
            <param name="cols">当前可见列数据集合 默认 null 导出全部列</param>
            <param name="fileName">文件名 默认 null ExportData_{DateTime.Now:yyyyMMddHHmmss}.xlsx</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExcelExport.ExportPdfAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.String)">
            <summary>
            导出 Pdf 方法
            </summary>
            <param name="items">导出数据集合</param>
            <param name="cols">当前可见列数据集合 默认 null 导出全部列</param>
            <param name="fileName">文件名 默认 null ExportData_{DateTime.Now:yyyyMMddHHmmss}.xlsx</param>
        </member>
        <member name="T:BootstrapBlazor.Components.ITableExport">
            <summary>
            Table 组件 Excel 导出接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExport.ExportAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.String)">
            <summary>
            导出 方法
            </summary>
            <param name="items">导出数据集合</param>
            <param name="cols">当前可见列数据集合 默认 null 导出全部列</param>
            <param name="fileName">文件名 默认 null ExportData_{DateTime.Now:yyyyMMddHHmmss}.xlsx</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExport.ExportAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},BootstrapBlazor.Components.TableExportOptions,System.String)">
            <summary>
            导出 方法
            </summary>
            <param name="items">导出数据集合</param>
            <param name="cols">当前可见列数据集合 默认 null 导出全部列</param>
            <param name="options">导出配置实例</param>
            <param name="fileName">文件名 默认 null ExportData_{DateTime.Now:yyyyMMddHHmmss}.xlsx</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExport.ExportExcelAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.String)">
            <summary>
            导出 Excel 方法
            </summary>
            <param name="items">导出数据集合</param>
            <param name="cols">当前可见列数据集合 默认 null 导出全部列</param>
            <param name="fileName">文件名 默认 null ExportData_{DateTime.Now:yyyyMMddHHmmss}.xlsx</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExport.ExportExcelAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},BootstrapBlazor.Components.TableExportOptions,System.String)">
            <summary>
            导出 Excel 方法
            </summary>
            <param name="items">导出数据集合</param>
            <param name="cols">当前可见列数据集合 默认 null 导出全部列</param>
            <param name="options">导出配置实例</param>
            <param name="fileName">文件名 默认 null ExportData_{DateTime.Now:yyyyMMddHHmmss}.xlsx</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExport.ExportCsvAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.String)">
            <summary>
            导出 Csv 方法
            </summary>
            <param name="items">导出数据集合</param>
            <param name="cols">当前可见列数据集合 默认 null 导出全部列</param>
            <param name="fileName">文件名 默认 null ExportData_{DateTime.Now:yyyyMMddHHmmss}.xlsx</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExport.ExportCsvAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},BootstrapBlazor.Components.TableExportOptions,System.String)">
            <summary>
            导出 Csv 方法
            </summary>
            <param name="items">导出数据集合</param>
            <param name="cols">当前可见列数据集合 默认 null 导出全部列</param>
            <param name="options">导出配置实例</param>
            <param name="fileName">文件名 默认 null ExportData_{DateTime.Now:yyyyMMddHHmmss}.xlsx</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExport.ExportPdfAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.String)">
            <summary>
            导出 Pdf 方法
            </summary>
            <param name="items">导出数据集合</param>
            <param name="cols">当前可见列数据集合 默认 null 导出全部列</param>
            <param name="fileName">文件名 默认 null ExportData_{DateTime.Now:yyyyMMddHHmmss}.xlsx</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExport.ExportPdfAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},BootstrapBlazor.Components.TableExportOptions,System.String)">
            <summary>
            导出 Pdf 方法
            </summary>
            <param name="items">导出数据集合</param>
            <param name="cols">当前可见列数据集合 默认 null 导出全部列</param>
            <param name="options">导出配置实例</param>
            <param name="fileName">文件名 默认 null ExportData_{DateTime.Now:yyyyMMddHHmmss}.xlsx</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ITableExport.ExportPdfAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},BootstrapBlazor.Components.TableExportOptions,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            导出 Pdf 方法
            </summary>
            <param name="items">导出数据集合</param>
            <param name="cols">当前可见列数据集合 默认 null 导出全部列</param>
            <param name="options">导出配置实例</param>
            <param name="fileName">文件名 默认 null ExportData_{DateTime.Now:yyyyMMddHHmmss}.xlsx</param>
            <param name="links">样式表集合</param>
        </member>
        <member name="T:BootstrapBlazor.Components.ITablePdfExport">
            <summary>
            Table 组件 Pdf 导出接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITablePdfExport.ExportAsync``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.String)">
            <summary>
            导出 Pdf 方法
            </summary>
            <param name="items">导出数据集合</param>
            <param name="cols">当前可见列数据集合 默认 null 导出全部列</param>
            <param name="fileName">文件名 默认 null ExportData_{DateTime.Now:yyyyMMddHHmmss}.pdf</param>
        </member>
        <member name="T:BootstrapBlazor.Components.IThemeProvider">
            <summary>
            Interface for theme provider
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IThemeProvider.SetThemeAsync(System.String)">
            <summary>
            Sets the theme asynchronously.
            </summary>
            <param name="themeName">The name of the theme to set.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IThemeProvider.GetThemeAsync">
            <summary>
            Gets the current theme asynchronously.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1"/> representing the asynchronous operation, with the current theme name as the result.</returns>
        </member>
        <member name="P:BootstrapBlazor.Components.IThemeProvider.ThemeChangedAsync">
            <summary>
            The callback when theme changed
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IThemeProvider.TriggerThemeChanged(System.String)">
            <summary>
            Trigger the theme changed event
            </summary>
            <param name="themeName">The name of the theme to set.</param>
        </member>
        <member name="T:BootstrapBlazor.Components.IThrottleDispatcherFactory">
            <summary>
            同步限流器接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IThrottleDispatcherFactory.GetOrCreate(System.String,BootstrapBlazor.Components.ThrottleOptions)">
            <summary>
            获得或创建限流器
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IThrottleDispatcherFactory.GetOrCreate(System.String,System.Int32)">
            <summary>
            获得或创建限流器
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IThrottleDispatcherFactory.Clear(System.String)">
            <summary>
            销毁限流器
            </summary>
            <param name="key">为空时销毁所有限流器</param>
        </member>
        <member name="T:BootstrapBlazor.Components.ITotpService">
            <summary>
            ITotpService interface
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITotpService.GenerateOtpUri(BootstrapBlazor.Components.OtpOptions)">
            <summary>
            Generates a one-time password (OTP) URI for the specified parameters.
            </summary>
            <param name="options">the instance of <see cref="T:BootstrapBlazor.Components.OtpOptions"/></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ITotpService.Compute(System.String,System.Int32,BootstrapBlazor.Components.OtpHashMode,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Computes the Time-based One-Time Password (TOTP) for the given secret key and timestamp.
            </summary>
            <param name="secretKey"></param>
            <param name="period"></param>
            <param name="mode"></param>
            <param name="digits"></param>
            <param name="timestamp"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ITotpService.GetRemainingSeconds(System.Nullable{System.DateTime})">
            <summary>
            Computes the remaining seconds until the next TOTP expiration for the given secret key and timestamp.
            </summary>
            <param name="timestamp"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ITotpService.GenerateSecretKey(System.Int32)">
            <summary>
            Generates a random secret key for OTP authentication.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ITotpService.GetSecretKeyBytes(System.String)">
            <summary>
            Gets the secret key bytes from the given input string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ITotpService.Verify(System.String,System.Nullable{System.DateTime})">
            <summary>
            Verifies the given TOTP code against the expected value using the provided secret key.
            </summary>
            <param name="code"></param>
            <param name="timestamp"></param>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.ITotpService.Instance">
            <summary>
            Gets the <see cref="T:BootstrapBlazor.Components.TotpInstanceBase"/> instance. Default is null.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IVersionService">
            <summary>
            组件版本号服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IVersionService.GetVersion">
            <summary>
            获得 版本号
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IVersionService.GetVersion(System.String)">
            <summary>
            获得 版本号
            </summary>
            <param name="url">当前资源 相对路径 如 ./css/site.css</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IZipArchiveService">
            <summary>
            Zip 归档服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IZipArchiveService.ArchiveAsync(System.Collections.Generic.IEnumerable{System.String},BootstrapBlazor.Components.ArchiveOptions)">
            <summary>
            将文件归档方法
            </summary>
            <param name="files">要归档的文件集合</param>
            <param name="options">归档配置</param>
            <returns>归档数据流</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IZipArchiveService.ArchiveAsync(System.String,System.Collections.Generic.IEnumerable{System.String},BootstrapBlazor.Components.ArchiveOptions)">
            <summary>
            将文件归档方法
            </summary>
            <param name="archiveFileName">归档文件</param>
            <param name="files">要归档的文件集合</param>
            <param name="options">归档配置</param>
        </member>
        <member name="M:BootstrapBlazor.Components.IZipArchiveService.ArchiveDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)">
            <summary>
            将指定目录归档方法
            </summary>
            <param name="archiveFileName">归档文件</param>
            <param name="directoryName">要归档文件夹</param>
            <param name="compressionLevel"></param>
            <param name="includeBaseDirectory"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IZipArchiveService.ExtractToDirectory(System.String,System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            解压缩归档文件到指定文件夹
            </summary>
            <param name="archiveFile">归档文件</param>
            <param name="destinationDirectoryName">解压缩文件夹</param>
            <param name="overwriteFiles">是否覆盖文件 默认 false 不覆盖</param>
            <param name="encoding">编码方式 默认 null 内部使用 UTF-8</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IZipArchiveService.GetEntry(System.String,System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            获得归档压缩文件中指定归档文件
            </summary>
            <param name="archiveFile">归档文件</param>
            <param name="entryFile">解压缩文件</param>
            <param name="overwriteFiles">是否覆盖文件 默认 false 不覆盖</param>
            <param name="encoding">编码方式 默认 null 内部使用 UTF-8</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.LookupServiceBase">
            <summary>
            LookupService 基类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.LookupServiceBase.GetItemsByKey(System.String)">
             <summary>
            <inheritdoc/>
             </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.LookupServiceBase.GetItemsByKey(System.String,System.Object)">
             <summary>
            <inheritdoc/>
             </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.LookupServiceBase.GetItemsByKeyAsync(System.String,System.Object)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultAudioDevice.GetDevices">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultVideoDevice.GetDevices">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IAudioDevice">
            <summary>
            Audio Media Device Interface
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IAudioDevice.GetDevices">
            <summary>
            Gets the list of audio devices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IAudioDevice.Open(BootstrapBlazor.Components.MediaTrackConstraints)">
            <summary>
            Opens the audio device with the specified constraints.
            </summary>
            <param name="constraints"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IAudioDevice.Close(System.String)">
            <summary>
            Close the audio device with the specified selector.
            </summary>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IAudioDevice.GetData">
            <summary>
            Gets the stream of the audio.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IMediaDeviceInfo">
            <summary>
            The MediaDeviceInfo interface of the Media Capture and Streams API contains information that describes a single media input or output device.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IMediaDeviceInfo.DeviceId">
            <summary>
            The deviceId read-only property of the MediaDeviceInfo interface returns a string that is an identifier for the represented device and is persisted across sessions.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IMediaDeviceInfo.GroupId">
            <summary>
            The groupId read-only property of the MediaDeviceInfo interface returns a string that is a group identifier.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IMediaDeviceInfo.Kind">
            <summary>
            The kind read-only property of the MediaDeviceInfo interface returns an enumerated value, that is either "videoinput", "audioinput" or "audiooutput".
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.IMediaDeviceInfo.Label">
            <summary>
            The label read-only property of the MediaDeviceInfo interface returns a string describing this device (for example "External USB Webcam").
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IMediaDevices">
            <summary>
            The MediaDevices interface of the Media Capture and Streams API provides access to connected media input devices like cameras and microphones, as well as screen sharing. In essence, it lets you obtain access to any hardware source of media data.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IMediaDevices.EnumerateDevices">
            <summary>
            An array of MediaDeviceInfo objects. Each object in the array describes one of the available media input and output devices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IMediaDevices.Open(System.String,BootstrapBlazor.Components.MediaTrackConstraints)">
            <summary>
            The open() method of the MediaDevices interface creates a new MediaStream object and starts capturing media from the specified device.
            </summary>
            <param name="type">video or audio</param>
            <param name="constraints"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IMediaDevices.Close(System.String)">
            <summary>
            The close() method of the MediaDevices interface stops capturing media from the specified device and closes the MediaStream object.
            </summary>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IMediaDevices.Capture">
            <summary>
            The capture() method of the MediaDevices interface captures a still image from the specified video stream and saves it to the specified location.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IMediaDevices.GetPreviewUrl">
            <summary>
            Gets the preview URL of the captured image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IMediaDevices.GetPreviewData">
            <summary>
            Gets the stream of the captured image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IMediaDevices.Apply(BootstrapBlazor.Components.MediaTrackConstraints)">
            <summary>
            Apply the media track constraints.
            </summary>
            <param name="constraints"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IMediaDevices.GetAudioData">
            <summary>
            Gets the stream of the audio.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IVideoDevice">
            <summary>
            Video Media Device Interface
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IVideoDevice.GetDevices">
            <summary>
            Gets the list of video devices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IVideoDevice.Open(BootstrapBlazor.Components.MediaTrackConstraints)">
            <summary>
            Opens the video device with the specified constraints.
            </summary>
            <param name="constraints"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IVideoDevice.Close(System.String)">
            <summary>
            Close the video device with the specified selector.
            </summary>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IVideoDevice.Capture">
            <summary>
            Capture a still image from the video stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IVideoDevice.GetPreviewUrl">
            <summary>
            Gets the preview URL of the captured image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IVideoDevice.GetPreviewData">
            <summary>
            Gets the stream of the captured image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IVideoDevice.Apply(BootstrapBlazor.Components.MediaTrackConstraints)">
            <summary>
            Apply the media track constraints.
            </summary>
            <param name="constraints"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.MediaDeviceInfo">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MediaDeviceInfo.DeviceId">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MediaDeviceInfo.GroupId">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MediaDeviceInfo.Kind">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MediaDeviceInfo.Label">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.MediaTrackConstraints">
            <summary>
            The MediaTrackConstraints interface of the Media Capture and Streams API is used to specify constraints on the media tracks that are requested from a media device. It is used in conjunction with the getUserMedia() method to specify the desired properties of the media tracks, such as resolution, frame rate, and aspect ratio.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MediaTrackConstraints.DeviceId">
             <summary>
            
             </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MediaTrackConstraints.Selector">
             <summary>
            
             </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MediaTrackConstraints.Width">
             <summary>
            
             </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MediaTrackConstraints.Height">
             <summary>
            
             </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MediaTrackConstraints.FacingMode">
             <summary>
            
             </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.NotificationService">
            <summary>
            浏览器通知服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NotificationService.#ctor(Microsoft.JSInterop.IJSRuntime,BootstrapBlazor.Components.ICacheManager)">
            <summary>
            构造函数
            </summary>
            <param name="runtime"></param>
            <param name="cache"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.NotificationService.CheckPermission(System.Boolean)">
            <summary>
            检查浏览器通知权限状态
            </summary>
            <param name="requestPermission">是否请求权限 默认 true</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.NotificationService.Dispatch(BootstrapBlazor.Components.NotificationItem)">
            <summary>
            发送浏览器通知
            </summary>
            <param name="item">NotificationItem 实例</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.NotificationService.DispatchCallback(System.String)">
            <summary>
            消息通知回调方法由 JS 点击触发
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.NotificationService.DisposeAsync(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously.
            </summary>
            <param name="disposing"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.NotificationService.DisposeAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.NullLookupService">
            <summary>
            内部默认字典服务实现类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.NullLookupService.GetItemsByKey(System.String,System.Object)">
            <summary>
            <inheritdoc/>>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.PrintService">
            <summary>
            Print 服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PrintService.#ctor(BootstrapBlazor.Components.DialogService)">
            <summary>
            Print 服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.PrintService.PrintAsync(BootstrapBlazor.Components.DialogOption)">
            <summary>
            打印方法
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.AutoFrameBreakType">
            <summary>
            自动断帧方式
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.AutoFrameBreakType.None">
            <summary>
            未启用自动断帧
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.AutoFrameBreakType.Character">
            <summary>
            字符断帧
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.AutoFrameBreakType.Timeout">
            <summary>
            空闲中断 (未完成)
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.AutoFrameBreakType.FrameTail">
            <summary>
            帧头、帧尾 (未实现)
            <para></para>例如: 帧头（AA 、BB） + 数据长度 + 数据  + CRC校验 + 帧尾（CC、DD）
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.AutoFrameBreakType.CharacterInterval">
            <summary>
            字符间隔 (未实现)
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultSerialService.IsSupport">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultSerialService.GetPort(System.Threading.CancellationToken)">
            <summary>
            get the current position of the device
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultSerialService.DisposeAsync(System.Boolean)">
            <summary>
            DisposeAsync 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultSerialService.DisposeAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ISerialPort">
            <summary>
            ISerialPort 接口
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ISerialPort.IsOpen">
            <summary>
            获得 端口是否打开
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ISerialPort.Close(System.Threading.CancellationToken)">
            <summary>
            关闭端口方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ISerialPort.Open(BootstrapBlazor.Components.SerialPortOptions,System.Threading.CancellationToken)">
            <summary>
            打开端口方法
            </summary>
            <returns></returns>
        </member>
        <member name="P:BootstrapBlazor.Components.ISerialPort.DataReceive">
            <summary>
            接收数据回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ISerialPort.Write(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            写入数据方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ISerialPort.GetUsbInfo(System.Threading.CancellationToken)">
            <summary>
            获得 Usb 设备信息
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ISerialPort.GetSignals(System.Threading.CancellationToken)">
            <summary>
            获得设备参数
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ISerialPort.SetSignals(BootstrapBlazor.Components.SerialPortSignalsOptions,System.Threading.CancellationToken)">
            <summary>
            设置设备参数
            </summary>
            <param name="options"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ISerialService">
            <summary>
            ISerialService 串口通讯服务
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ISerialService.IsSupport">
            <summary>
            获得/设置 是否支持串口通讯
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ISerialService.GetPort(System.Threading.CancellationToken)">
            <summary>
            获得所有可用串口
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SerialPort">
            <summary>
            串口通讯类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SerialPort.#ctor(BootstrapBlazor.Components.JSModule,System.String)">
            <summary>
            串口通讯类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPort.IsOpen">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPort.DataReceive">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.SerialPort.Write(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SerialPort.Open(BootstrapBlazor.Components.SerialPortOptions,System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SerialPort.Close(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SerialPort.DataReceiveCallback(System.Byte[])">
            <summary>
            接收数据回调方法 由 Javascript 调用
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SerialPort.GetUsbInfo(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SerialPort.GetSignals(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.SerialPort.SetSignals(BootstrapBlazor.Components.SerialPortSignalsOptions,System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="options"></param>
            <param name="token"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:BootstrapBlazor.Components.SerialPort.DisposeAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SerialPortFlowControlType">
            <summary>
            流量控制方法
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SerialPortFlowControlType.None">
            <summary>
            未启用流量控制
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SerialPortFlowControlType.Hardware">
            <summary>
            启用使用 RTS 和 CTS 信号的硬件流控制
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SerialPortOptions">
            <summary>
            串口通讯参数
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortOptions.BaudRate">
            <summary>
            波特率 默认 9600
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortOptions.DataBits">
            <summary>
            数据位 7 或 8 默认 8
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortOptions.StopBits">
            <summary>
            停止位 1 或 2 默认为 1
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortOptions.ParityType">
            <summary>
            校验位 none、even、odd 默认 "none" 
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortOptions.BufferSize">
            <summary>
            读写缓冲区 默认 255
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortOptions.FlowControlType">
            <summary>
            流控制 "none"或"hardware" 默认值为"none" 
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SerialPortParityType">
            <summary>
            校验位枚举
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SerialPortParityType.None">
            <summary>
            每个数据字不发送奇偶校验位
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SerialPortParityType.Even">
            <summary>
            数据字加上奇偶校验位具有偶奇偶校验
            </summary>
        </member>
        <member name="F:BootstrapBlazor.Components.SerialPortParityType.Odd">
            <summary>
            数据字加奇偶校验位具有奇校验
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SerialPortSignals">
            <summary>
            串口信号
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortSignals.RING">
            <summary>
            振铃提示 RI（Ring Indicator）
            如果 RI 为 true，则表示已检测到振铃。如果 RI 为 false，则表示未检测到振铃。Pin 9
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortSignals.DSR">
            <summary>
            数据准备就绪 DSR（Data Set Ready）
            如果 DSR 为 true，则表示已准备好接收数据。如果 DSR 为 false，则表示未准备好接收数据。Pin 6
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortSignals.CTS">
            <summary>
            清除发送 CTS（Clear To Send）
            如果 CTS 为 true，则表示已准备好发送数据。如果 CTS 为 false，则表示未准备好发送数据。Pin 8
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortSignals.DCD">
            <summary>
            载波检测 DCD（Data Carrier Detect）
            如果 DCD 为 true，则表示已检测到载波。如果 DCD 为 false，则表示未检测到载波。Pin 1
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SerialPortSignalsOptions">
            <summary>
            串口信号设置
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortSignalsOptions.Break">
            <summary>
            中断
            <para></para>如果 Break 为 true，则表示已中断。如果 Break 为 false，则表示未中断。
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortSignalsOptions.DTR">
            <summary>
            数据终端准备就绪 DTR（Data Terminal Ready）
            <para></para>如果 DTR 为 true，则表示已准备好接收数据。如果 DTR 为 false，则表示未准备好接收数据。Pin 4
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortSignalsOptions.RTS">
            <summary>
            请求发送 RTS（Request To Send）
            <para></para>如果 RTS 为 true，则表示已准备好发送数据。如果 RTS 为 false，则表示未准备好发送数据。Pin 7
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.SerialPortUsbInfo">
            <summary>
            Usb 串口设备信息类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortUsbInfo.UsbVendorId">
            <summary>
            厂商 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SerialPortUsbInfo.UsbProductId">
            <summary>
            产品 Id
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TableMetadataTypeService">
            <summary>
            service for storage metadata type/data type pair for Table component
            more details: <see cref="T:BootstrapBlazor.Components.TableMetadataForAttribute"/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TableMetadataTypeService.RegisterMatadataType(System.Type,System.Type)">
            <summary>
            register metadata type for target model/data type
            </summary>
            <param name="metadataType">Table ui metadata type</param>
            <param name="targetType">the target model/data type</param>
        </member>
        <member name="M:BootstrapBlazor.Components.TableMetadataTypeService.RegisterMetadataType(System.Type,System.Type)">
            <summary>
            register metadata type for target model/data type
            </summary>
            <param name="metadataType">Table ui metadata type</param>
            <param name="targetType">the target model/data type</param>
        </member>
        <member name="M:BootstrapBlazor.Components.TableMetadataTypeService.GetMetadataType(System.Type)">
            <summary>
            get metadata type for target data type. return data type itself if metadata type not registered.
            </summary>
            <param name="targetType">the target data type</param>
            <returns>metadata type</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.TableMetadataTypeService.RegisterMetadataTypes(System.Reflection.Assembly[])">
            <summary>
            register metadata types from assemblies by using reflection
            </summary>
            <param name="assemblies">Assemblies contains metadata types</param>
        </member>
        <member name="T:BootstrapBlazor.Components.DataPackageAdapter">
            <summary>
            Provides a base implementation for adapting data packages between different systems or formats.
            </summary>
            <remarks>This abstract class serves as a foundation for implementing custom data package adapters. It defines
            common methods for sending, receiving, and handling data packages, as well as a property for accessing the
            associated data package handler. Derived classes should override the virtual methods to provide specific behavior
            for handling data packages.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.DataPackageAdapter.ReceivedCallBack">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DataPackageAdapter.DataPackageHandler">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DataPackageAdapter.HandlerAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="data"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DataPackageAdapter.TryConvertTo(System.ReadOnlyMemory{System.Byte},System.Object@)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="data"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DataPackageAdapter.OnHandlerReceivedCallBack(System.ReadOnlyMemory{System.Byte})">
            <summary>
            Handles incoming data by invoking a callback method, if one is defined.
            </summary>
            <remarks>This method is designed to be overridden in derived classes to provide custom handling of
            incoming data. If a callback method is assigned, it will be invoked asynchronously with the provided
            data.</remarks>
            <param name="data">The incoming data to be processed, represented as a read-only memory block of bytes.</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IDataPackageAdapter">
            <summary>
            Defines an adapter for handling and transmitting data packages to a target destination.
            </summary>
            <remarks>This interface provides methods for sending data asynchronously and configuring a data handler.
            Implementations of this interface are responsible for managing the interaction between the caller and the underlying
            data transmission mechanism.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.IDataPackageAdapter.ReceivedCallBack">
            <summary>
            Gets or sets the callback function to be invoked when data is received.
            </summary>
            <remarks>The callback function is expected to handle the received data asynchronously. Ensure that the
            implementation of the callback does not block the calling thread and completes promptly to avoid performance
            issues.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.IDataPackageAdapter.DataPackageHandler">
            <summary>
            Gets the handler responsible for processing data packages.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IDataPackageAdapter.HandlerAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            Asynchronously receives data from a source and processes it.
            </summary>
            <remarks>This method does not return any result directly. It is intended for scenarios where data is received
            and processed asynchronously. Ensure that the <paramref name="data"/> parameter contains valid data before calling
            this method.</remarks>
            <param name="data">A read-only memory region containing the data to be received. The caller must ensure the memory is valid and
            populated.</param>
            <param name="token">An optional cancellation token that can be used to cancel the operation. Defaults to <see langword="default"/> if
            not provided.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> representing the asynchronous operation. The task completes when the data has been
            successfully received and processed.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.IDataPackageAdapter.TryConvertTo(System.ReadOnlyMemory{System.Byte},System.Object@)">
            <summary>
            Attempts to convert the specified binary data into an object representation.
            </summary>
            <remarks>This method does not throw an exception if the conversion fails. Instead, it returns  <see
            langword="false"/> and sets <paramref name="entity"/> to <see langword="null"/>.</remarks>
            <param name="data">The binary data to be converted. Must not be empty.</param>
            <param name="entity">When this method returns <see langword="true"/>, contains the converted object.  When this method returns <see
            langword="false"/>, contains <see langword="null"/>.</param>
            <returns><see langword="true"/> if the conversion was successful; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DataPackageHandlerBase">
            <summary>
            Provides a base implementation for handling data packages in a communication system.
            </summary>
            <remarks>This abstract class defines the core contract for receiving and sending data packages. Derived
            classes should override and extend its functionality to implement specific data handling logic. The default
            implementation simply returns the provided data.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.DataPackageHandlerBase.ReceivedCallBack">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DataPackageHandlerBase.HandlerAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="data"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DataPackageHandlerBase.SlicePackage(System.ReadOnlyMemory{System.Byte},System.Int32)">
            <summary>
            Handles the processing of a sticky package by adjusting the provided buffer and length.
            </summary>
            <remarks>This method processes the portion of the buffer beyond the specified length and updates the
            internal state accordingly. The caller must ensure that the <paramref name="buffer"/> contains sufficient data
            for the specified <paramref name="length"/>.</remarks>
            <param name="buffer">The memory buffer containing the data to process.</param>
            <param name="length">The length of the valid data within the buffer.</param>
        </member>
        <member name="M:BootstrapBlazor.Components.DataPackageHandlerBase.ConcatBuffer(System.ReadOnlyMemory{System.Byte})">
            <summary>
            Concatenates the provided buffer with any previously stored data and returns the combined result.
            </summary>
            <remarks>This method combines the provided buffer with any data stored in the internal buffer.  After
            concatenation, the internal buffer is cleared. The returned memory block is allocated  from a shared memory pool
            and should be used promptly to avoid holding onto pooled resources.</remarks>
            <param name="buffer">The buffer to concatenate with the previously stored data. Must not be empty.</param>
            <returns>A <see cref="T:System.Memory`1"/> instance containing the concatenated data.  If no previously stored data exists, the
            method returns the input <paramref name="buffer"/>.</returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DelimiterDataPackageHandler">
            <summary>
            Handles data packages that are delimited by a specific sequence of bytes or characters.
            </summary>
            <remarks>This class provides functionality for processing data packages that are separated by a defined
            delimiter. The delimiter can be specified as a string with an optional encoding or as a byte array.</remarks>
        </member>
        <member name="M:BootstrapBlazor.Components.DelimiterDataPackageHandler.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:BootstrapBlazor.Components.DelimiterDataPackageHandler"/> class with the specified delimiter
            and optional encoding.
            </summary>
            <param name="delimiter">The string delimiter used to separate data packages. This value cannot be null or empty.</param>
            <param name="encoding">The character encoding used to convert the delimiter to bytes. If null, <see cref="P:System.Text.Encoding.UTF8"/> is used as
            the default.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="delimiter"/> is null or empty.</exception>
        </member>
        <member name="M:BootstrapBlazor.Components.DelimiterDataPackageHandler.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:BootstrapBlazor.Components.DelimiterDataPackageHandler"/> class with the specified delimiters.
            </summary>
            <param name="delimiter">An array of bytes representing the delimiters used to parse data packages. Cannot be <see langword="null"/>.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="delimiter"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:BootstrapBlazor.Components.DelimiterDataPackageHandler.HandlerAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="data"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.FixLengthDataPackageHandler">
            <summary>
            Handles fixed-length data packages by processing incoming data of a specified length.
            </summary>
            <remarks>This class is designed to handle data packages with a fixed length, as specified during
            initialization. It extends <see cref="T:BootstrapBlazor.Components.DataPackageHandlerBase"/> and overrides its behavior to process fixed-length
            data.</remarks>
            <param name="length">The data package total data length.</param>
        </member>
        <member name="M:BootstrapBlazor.Components.FixLengthDataPackageHandler.#ctor(System.Int32)">
            <summary>
            Handles fixed-length data packages by processing incoming data of a specified length.
            </summary>
            <remarks>This class is designed to handle data packages with a fixed length, as specified during
            initialization. It extends <see cref="T:BootstrapBlazor.Components.DataPackageHandlerBase"/> and overrides its behavior to process fixed-length
            data.</remarks>
            <param name="length">The data package total data length.</param>
        </member>
        <member name="M:BootstrapBlazor.Components.FixLengthDataPackageHandler.HandlerAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="data"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.IDataPackageHandler">
            <summary>
            Defines an interface for adapting data packages to and from a TCP socket connection.
            </summary>
            <remarks>Implementations of this interface are responsible for converting raw data received from a TCP socket
            into structured data packages and vice versa. This allows for custom serialization and deserialization logic
            tailored to specific application protocols.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.IDataPackageHandler.ReceivedCallBack">
            <summary>
            Gets or sets the callback function to be invoked when data is received asynchronously.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IDataPackageHandler.HandlerAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            Asynchronously receives data and processes it.
            </summary>
            <remarks>The method is designed for asynchronous operations and may be used in scenarios where
            efficient handling of data streams is required. Ensure that the <paramref name="data"/> parameter contains valid
            data for processing, and handle potential cancellation using the <paramref name="token"/>.</remarks>
            <param name="data">The data to be received, represented as a read-only memory block of bytes.</param>
            <param name="token">A cancellation token that can be used to cancel the operation. Defaults to <see langword="default"/> if not
            provided.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1"/> containing <see langword="true"/> if the data was successfully received and
            processed; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:BootstrapBlazor.Components.DefaultSocketClientProvider">
            <summary>
            TcpSocket 客户端默认实现
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultSocketClientProvider.IsConnected">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultSocketClientProvider.LocalEndPoint">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultSocketClientProvider.ConnectAsync(System.Net.IPEndPoint,System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultSocketClientProvider.SendAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultSocketClientProvider.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultSocketClientProvider.CloseAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultTcpSocketClient.SocketClientProvider">
            <summary>
            Gets or sets the socket client provider used for managing socket connections.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultTcpSocketClient.Logger">
            <summary>
            Gets or sets the logger instance used for logging messages and events.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultTcpSocketClient.ServiceProvider">
            <summary>
            Gets or sets the service provider used to resolve dependencies.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultTcpSocketClient.Options">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultTcpSocketClient.IsConnected">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultTcpSocketClient.LocalEndPoint">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultTcpSocketClient.ReceivedCallBack">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultTcpSocketClient.OnConnecting">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.DefaultTcpSocketClient.OnConnected">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultTcpSocketClient.ConnectAsync(System.Net.IPEndPoint,System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="endPoint"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultTcpSocketClient.SendAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="data"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultTcpSocketClient.ReceiveAsync(System.Threading.CancellationToken)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultTcpSocketClient.Log(Microsoft.Extensions.Logging.LogLevel,System.Exception,System.String)">
            <summary>
            Logs a message with the specified log level, exception, and additional context.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultTcpSocketClient.CloseAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultTcpSocketClient.DisposeAsync(System.Boolean)">
            <summary>
            Releases the resources used by the current instance of the class.
            </summary>
            <remarks>This method is called to free both managed and unmanaged resources. If the <paramref
            name="disposing"/> parameter is <see langword="true"/>, the method releases managed resources in addition to
            unmanaged resources. Override this method in a derived class to provide custom cleanup logic.</remarks>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only
            unmanaged resources.</param>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultTcpSocketClient.DisposeAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DefaultTcpSocketFactory.DisposeAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.TcpSocketExtensions">
            <summary>
            TcpSocket 扩展方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TcpSocketExtensions.AddBootstrapBlazorTcpSocketFactory(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            增加 ITcpSocketFactory 服务
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ISocketClientProvider">
            <summary>
            Defines the contract for a socket client that provides asynchronous methods for connecting, sending, receiving, and
            closing network connections.
            </summary>
            <remarks>This interface is designed to facilitate network communication using sockets. It provides methods for
            establishing connections, transmitting data, and receiving data asynchronously. Implementations of this interface
            should ensure proper resource management, including closing connections and releasing resources when no longer
            needed.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.ISocketClientProvider.IsConnected">
            <summary>
            Gets a value indicating whether the connection is currently active.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ISocketClientProvider.LocalEndPoint">
            <summary>
            Gets the local network endpoint that the socket is bound to.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ISocketClientProvider.ConnectAsync(System.Net.IPEndPoint,System.Threading.CancellationToken)">
            <summary>
            Establishes an asynchronous connection to the specified endpoint.
            </summary>
            <remarks>This method attempts to establish a connection to the specified endpoint. If the connection
            fails,  the method returns <see langword="false"/> rather than throwing an exception. Ensure the endpoint is
            valid  and reachable before calling this method.</remarks>
            <param name="endPoint">The <see cref="T:System.Net.IPEndPoint"/> representing the remote endpoint to connect to.</param>
            <param name="token">An optional <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the connection to complete.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1"/> that represents the asynchronous operation.  The result is <see
            langword="true"/> if the connection was successfully established; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ISocketClientProvider.SendAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            Sends the specified data asynchronously to the connected endpoint.
            </summary>
            <remarks>This method performs a non-blocking operation to send data. If the operation is canceled via
            the  <paramref name="token"/>, the returned task will not complete successfully. Ensure the connected  endpoint
            is ready to receive data before calling this method.</remarks>
            <param name="data">The data to send, represented as a read-only memory block of bytes.</param>
            <param name="token">An optional cancellation token that can be used to cancel the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1"/> representing the asynchronous operation.  The result is <see
            langword="true"/> if the data was sent successfully; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ISocketClientProvider.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            Asynchronously receives data from a source and writes it into the specified buffer.
            </summary>
            <remarks>This method does not guarantee that the buffer will be completely filled. The caller should
            check the return value to determine the number of bytes received.</remarks>
            <param name="buffer">The memory buffer where the received data will be stored. Must be large enough to hold the incoming data.</param>
            <param name="token">A cancellation token that can be used to cancel the operation. Defaults to <see langword="default"/> if not
            provided.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1"/> representing the asynchronous operation. The result is the number of bytes
            successfully received and written into the buffer. Returns 0 if the end of the data stream is reached.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ISocketClientProvider.CloseAsync">
            <summary>
            Closes the current connection or resource, releasing any associated resources.
            </summary>
            <remarks>Once the connection or resource is closed, it cannot be reopened. Ensure that all necessary
            operations  are completed before calling this method. This method is typically used to clean up resources when
            they  are no longer needed.</remarks>
        </member>
        <member name="T:BootstrapBlazor.Components.ITcpSocketClient">
            <summary>
            Represents a TCP socket for network communication.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITcpSocketClient.IsConnected">
            <summary>
            Gets a value indicating whether the system is currently connected. Default is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITcpSocketClient.Options">
            <summary>
            Gets or sets the configuration options for the socket client.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITcpSocketClient.LocalEndPoint">
            <summary>
            Gets the local network endpoint that the socket is bound to.
            </summary>
            <remarks>This property provides information about the local endpoint of the socket, which is typically
            used to identify the local address and port being used for communication. If the socket is not  bound to a
            specific local endpoint, this property may return <see langword="null"/>.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.ITcpSocketClient.ReceivedCallBack">
            <summary>
            Gets or sets the callback function to handle received data.
            </summary>
            <remarks>The callback function should be designed to handle the received data efficiently and
            asynchronously.  Ensure that the implementation does not block or perform long-running operations, as this may
            impact performance.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.ITcpSocketClient.OnConnecting">
            <summary>
            Gets or sets the callback function that is invoked when a connection attempt is initiated.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ITcpSocketClient.OnConnected">
            <summary>
            Gets or sets the delegate to be invoked when a connection is successfully established.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITcpSocketClient.ConnectAsync(System.Net.IPEndPoint,System.Threading.CancellationToken)">
            <summary>
            Establishes an asynchronous connection to the specified endpoint.
            </summary>
            <remarks>This method attempts to establish a connection to the specified endpoint. If the connection
            cannot be established, the method returns <see langword="false"/> rather than throwing an exception.</remarks>
            <param name="endPoint">The <see cref="T:System.Net.IPEndPoint"/> representing the remote endpoint to connect to. Cannot be null.</param>
            <param name="token">A <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the connection attempt. Defaults to <see
            langword="default"/> if not provided.</param>
            <returns>A task that represents the asynchronous operation. The task result is <see langword="true"/> if the connection
            is successfully established; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ITcpSocketClient.SendAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            Sends the specified data asynchronously to the target endpoint.
            </summary>
            <remarks>This method performs a non-blocking operation to send data. If the operation is canceled via
            the <paramref name="token"/>, the task will complete with a canceled state. Ensure the connection is properly
            initialized before calling this method.</remarks>
            <param name="data">The byte array containing the data to be sent. Cannot be null or empty.</param>
            <param name="token">An optional <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the operation to complete.</param>
            <returns>A task that represents the asynchronous operation. The task result is <see langword="true"/> if the data was
            sent successfully; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ITcpSocketClient.ReceiveAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously receives a block of data from the underlying source.
            </summary>
            <remarks>This method is non-blocking and completes when data is available or the operation is
            canceled. If the operation is canceled, the returned task will be in a faulted state with a <see
            cref="T:System.OperationCanceledException"/>.</remarks>
            <param name="token">A cancellation token that can be used to cancel the operation. The default value is <see langword="default"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask`1"/> containing a <see cref="T:System.Memory`1"/> of bytes representing the received data.
            The returned memory may be empty if no data is available.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ITcpSocketClient.CloseAsync">
            <summary>
            Closes the current connection or resource, releasing any associated resources.
            </summary>
            <remarks>Once the connection or resource is closed, it cannot be reopened. Ensure that all necessary
            operations  are completed before calling this method. This method is typically used to clean up resources when
            they  are no longer needed.</remarks>
        </member>
        <member name="T:BootstrapBlazor.Components.ITcpSocketFactory">
            <summary>
            ITcpSocketFactory Interface
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ITcpSocketFactory.GetOrCreate(System.String,System.Action{BootstrapBlazor.Components.SocketClientOptions})">
            <summary>
            Retrieves an existing TCP socket client by name or creates a new one using the specified configuration.
            </summary>
            <param name="name">The unique name of the TCP socket client to retrieve or create. Cannot be null or empty.</param>
            <param name="valueFactory">A delegate used to configure the <see cref="T:BootstrapBlazor.Components.SocketClientOptions"/> for the new TCP socket client if it does not
            already exist. This delegate is invoked only when a new client is created.</param>
            <returns>An instance of <see cref="T:BootstrapBlazor.Components.ITcpSocketClient"/> corresponding to the specified name. If the client already exists,
            the existing instance is returned; otherwise, a new instance is created and returned.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ITcpSocketFactory.Remove(System.String)">
            <summary>
            Removes the TCP socket client associated with the specified name.
            </summary>
            <param name="name">The name of the TCP socket client to remove. Cannot be <see langword="null"/> or empty.</param>
            <returns>The removed <see cref="T:BootstrapBlazor.Components.ITcpSocketClient"/> instance if a client with the specified name exists;  otherwise, <see
            langword="null"/>.</returns>
        </member>
        <member name="T:BootstrapBlazor.Components.SocketClientOptions">
            <summary>
            Represents configuration options for a socket client, including buffer sizes, timeouts, and endpoints.
            </summary>
            <remarks>Use this class to configure various settings for a socket client, such as connection timeouts, 
            buffer sizes, and local or remote endpoints. These options allow fine-tuning of socket behavior  to suit specific
            networking scenarios.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.SocketClientOptions.ReceiveBufferSize">
            <summary>
            Gets or sets the size, in bytes, of the receive buffer used by the connection.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SocketClientOptions.IsAutoReceive">
            <summary>
            Gets or sets a value indicating whether automatic receiving data is enabled. Default is true.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SocketClientOptions.ConnectTimeout">
            <summary>
            Gets or sets the timeout duration, in milliseconds, for establishing a connection.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SocketClientOptions.SendTimeout">
            <summary>
            Gets or sets the duration, in milliseconds, to wait for a send operation to complete before timing out.
            </summary>
            <remarks>If the send operation does not complete within the specified timeout period, an exception may
            be thrown.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.SocketClientOptions.ReceiveTimeout">
            <summary>
            Gets or sets the amount of time, in milliseconds, that the receiver will wait for a response before timing out.
            </summary>
            <remarks>Use this property to configure the maximum wait time for receiving a response. Setting an
            appropriate timeout can help prevent indefinite blocking in scenarios where responses may be delayed or
            unavailable.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.SocketClientOptions.LocalEndPoint">
            <summary>
            Gets or sets the local endpoint for the socket client. Default value is <see cref="F:System.Net.IPAddress.Any"/>
            </summary>
            <remarks>This property specifies the local network endpoint that the socket client will bind to when establishing a connection.</remarks>
        </member>
        <member name="P:BootstrapBlazor.Components.SocketClientOptions.EnableLog">
            <summary>
            Gets or sets a value indicating whether logging is enabled. Default value is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SocketClientOptions.IsAutoReconnect">
            <summary>    
            Gets or sets a value indicating whether the system should automatically attempt to reconnect  after a connection is lost. Default value is false.
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.SocketClientOptions.ReconnectInterval">
            <summary>
            Gets or sets the interval, in milliseconds, between reconnection attempts. Default value is 5000.
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ThrottleDispatcher">
            <summary>
            限流器泛型类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ThrottleDispatcher.#ctor(BootstrapBlazor.Components.ThrottleOptions)">
            <summary>
            限流器泛型类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ThrottleDispatcher.ShouldWait">
            <summary>
            判断是否等待方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.ThrottleDispatcher.ThrottleAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            异步限流方法
            </summary>
            <param name="function">异步回调方法</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ThrottleDispatcher.Throttle(System.Action,System.Threading.CancellationToken)">
            <summary>
            同步限流方法
            </summary>
            <param name="action">同步回调方法</param>
            <param name="token">取消令牌</param>
        </member>
        <member name="M:BootstrapBlazor.Components.ThrottleDispatcher.InternalThrottleAsync(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            限流异步方法
            </summary>
            <param name="function">异步回调方法</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="T:BootstrapBlazor.Components.TitleService">
            <summary>
            Title 服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TitleService.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Title 服务
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.TitleService.SetTitle(System.String,System.Threading.CancellationToken)">
            <summary>
            设置当前网页 Title 方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.WebClientService">
            <summary>
            WebClient 服务类
            </summary>
            <param name="ipLocatorFactory"></param>
            <param name="options"></param>
            <param name="runtime"></param>
            <param name="navigation"></param>
            <param name="logger"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.WebClientService.#ctor(BootstrapBlazor.Components.IIpLocatorFactory,Microsoft.Extensions.Options.IOptionsMonitor{BootstrapBlazor.Components.BootstrapBlazorOptions},Microsoft.JSInterop.IJSRuntime,Microsoft.AspNetCore.Components.NavigationManager,Microsoft.Extensions.Logging.ILogger{BootstrapBlazor.Components.WebClientService})">
            <summary>
            WebClient 服务类
            </summary>
            <param name="ipLocatorFactory"></param>
            <param name="options"></param>
            <param name="runtime"></param>
            <param name="navigation"></param>
            <param name="logger"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.WebClientService.GetClientInfo">
            <summary>
            获得 ClientInfo 实例方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebClientService.SetData(BootstrapBlazor.Components.ClientInfo)">
            <summary>
            SetData 方法由 JS 调用
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.WebClientService.DisposeAsync(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously.
            </summary>
            <param name="disposing"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.WebClientService.DisposeAsync">
            <summary>
            <inheritdoc/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.ClientInfo">
            <summary>
            客户端请求信息实体类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClientInfo.Id">
            <summary>
            获得/设置 链接 Id
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClientInfo.Ip">
            <summary>
            获得/设置 客户端IP
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClientInfo.City">
            <summary>
            获得/设置 客户端地点
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClientInfo.Browser">
            <summary>
            获得/设置 客户端浏览器
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClientInfo.OS">
            <summary>
            获得/设置 客户端操作系统
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClientInfo.Device">
            <summary>
            获得/设置 客户端设备类型
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClientInfo.Language">
            <summary>
            获得/设置 客户端浏览器语言
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClientInfo.RequestUrl">
            <summary>
            获取/设置 请求网址
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClientInfo.UserAgent">
            <summary>
            获得/设置 客户端 UserAgent
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.ClientInfo.Engine">
            <summary>
            获得/设置 浏览器引擎信息
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.BootstrapDynamicComponent">
            <summary>
            动态组件类
            </summary>
            <param name="componentType"></param>
            <param name="parameters">TCom 组件所需要的参数集合</param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapDynamicComponent.#ctor(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            动态组件类
            </summary>
            <param name="componentType"></param>
            <param name="parameters">TCom 组件所需要的参数集合</param>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapDynamicComponent.CreateComponent``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            创建自定义组件方法
            </summary>
            <typeparam name="TCom"></typeparam>
            <param name="parameters">TCom 组件所需要的参数集合</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapDynamicComponent.CreateComponent``1">
            <summary>
            创建自定义组件方法
            </summary>
            <typeparam name="TCom"></typeparam>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapDynamicComponent.CreateComponent(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            创建自定义组件方法
            </summary>
            <param name="type"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.BootstrapDynamicComponent.Render">
            <summary>
            创建组件实例并渲染
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.CssBuilder">
            <summary>
            Css 生成操作类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.Default(System.String)">
            <summary>
            Creates a CssBuilder used to define conditional CSS classes used in a component.
            Call Build() to return the completed CSS Classes as a string.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.#ctor(System.String)">
            <summary>
            Creates a CssBuilder used to define conditional CSS classes used in a component.
            Call Build() to return the completed CSS Classes as a string.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(System.String)">
            <summary>
            Adds a raw string to the builder that will be concatenated with the next class or value added to the builder.
            </summary>
            <param name="value"></param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(System.String,System.Boolean)">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(System.String,System.Func{System.Boolean})">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(System.Func{System.String},System.Boolean)">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">Function that returns a CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(System.Func{System.String},System.Func{System.Boolean})">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="value">Function that returns a CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(BootstrapBlazor.Components.CssBuilder,System.Boolean)">
            <summary>
            Adds a conditional nested CssBuilder to the builder with space separator.
            </summary>
            <param name="builder">CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClass(BootstrapBlazor.Components.CssBuilder,System.Func{System.Boolean})">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="builder">CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddClassFromAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds a conditional CSS Class when it exists in a dictionary to the builder with space separator.
            Null safe operation.
            </summary>
            <param name="additionalAttributes">Additional Attribute splat parameters</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddStyle(System.String,System.String)">
            <summary>
            Adds a raw string to the builder that will be concatenated with the next style or value added to the builder.
            </summary>
            <param name="key">style property name</param>
            <param name="value">CSS style to conditionally add.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddStyle(System.String,System.String,System.Boolean)">
            <summary>
            Adds a conditional css Style to the builder with space separator.
            </summary>
            <param name="key">style property name</param>
            <param name="value">CSS style to conditionally add.</param>
            <param name="when">Condition in which the CSS style is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddStyle(System.String,System.String,System.Func{System.Boolean})">
            <summary>
            Adds a conditional css Style to the builder with space separator.
            </summary>
            <param name="key">style property name</param>
            <param name="value">CSS style to conditionally add.</param>
            <param name="when">Condition in which the CSS Style is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddStyle(System.String,System.Func{System.String},System.Boolean)">
            <summary>
            Adds a conditional css Style to the builder with space separator.
            </summary>
            <param name="key">style property name</param>
            <param name="value">Function that returns a css Style to conditionally add.</param>
            <param name="when">Condition in which the CSS Style is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddStyle(System.String,System.Func{System.String},System.Func{System.Boolean})">
            <summary>
            Adds a conditional css Style to the builder with space separator.
            </summary>
            <param name="key">style property name</param>
            <param name="value">Function that returns a css Style to conditionally add.</param>
            <param name="when">Condition in which the CSS Style is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddStyle(BootstrapBlazor.Components.CssBuilder,System.Boolean)">
            <summary>
            Adds a conditional nested CssBuilder to the builder with space separator.
            </summary>
            <param name="builder">CSS Style to conditionally add.</param>
            <param name="when">Condition in which the CSS Style is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddStyle(BootstrapBlazor.Components.CssBuilder,System.Func{System.Boolean})">
            <summary>
            Adds a conditional CSS Class to the builder with space separator.
            </summary>
            <param name="builder">CSS Class to conditionally add.</param>
            <param name="when">Condition in which the CSS Class is added.</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.AddStyleFromAttributes(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds a conditional css Style when it exists in a dictionary to the builder with space separator.
            Null safe operation.
            </summary>
            <param name="additionalAttributes">Additional Attribute splat parameters</param>
            <returns>CssBuilder</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.CssBuilder.Build">
            <summary>
            Finalize the completed CSS Classes as a string.
            </summary>
            <returns>string</returns>
        </member>
        <member name="T:BootstrapBlazor.Components.EmitHelper">
            <summary>
            Emit 方法帮助类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.EmitHelper.CreateTypeByName(System.String,System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.Type,System.Func{BootstrapBlazor.Components.ITableColumn,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}})">
            <summary>
            通过 ITableColumn 创建动态类
            </summary>
            <param name="typeName">动态类名称</param>
            <param name="cols">ITableColumn 集合</param>
            <param name="parent">父类类型</param>
            <param name="creatingCallback">回调委托</param>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.JSModule">
            <summary>
            模块加载器
            </summary>
            <param name="jSObjectReference"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModule.#ctor(Microsoft.JSInterop.IJSObjectReference)">
            <summary>
            模块加载器
            </summary>
            <param name="jSObjectReference"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModule.InvokeVoidAsync(System.String,System.Object[])">
            <summary>
            InvokeVoidAsync 方法
            </summary>
            <param name="identifier"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModule.InvokeVoidAsync(System.String,System.TimeSpan,System.Object[])">
            <summary>
            InvokeVoidAsync 方法
            </summary>
            <param name="identifier"></param>
            <param name="timeout"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModule.InvokeVoidAsync(System.String,System.Threading.CancellationToken,System.Object[])">
            <summary>
            InvokeVoidAsync 方法
            </summary>
            <param name="identifier"></param>
            <param name="cancellationToken"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModule.InvokeAsync``1(System.String,System.Object[])">
            <summary>
            InvokeAsync 方法
            </summary>
            <param name="identifier"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModule.InvokeAsync``1(System.String,System.TimeSpan,System.Object[])">
            <summary>
            InvokeAsync 方法
            </summary>
            <param name="identifier"></param>
            <param name="timeout"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModule.InvokeAsync``1(System.String,System.Threading.CancellationToken,System.Object[])">
            <summary>
            InvokeAsync 方法
            </summary>
            <param name="identifier"></param>
            <param name="cancellationToken"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModule.DisposeAsyncCore(System.Boolean)">
            <summary>
            Dispose 方法
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.JSModule.DisposeAsync">
            <summary>
            Dispose 方法
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.Offset">
            <summary>
            物体偏移量类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Offset.Top">
            <summary>
            获得/设置 X 轴偏移量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Offset.Left">
            <summary>
            获得/设置 Y 轴偏移量
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Offset.Width">
            <summary>
            获得/设置 宽度
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.Offset.Height">
            <summary>
            获得/设置 高度
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.QueryHelper">
            <summary>
            Provides methods for parsing and manipulating query strings.
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryHelper.AddQueryString(System.String,System.String,System.String)">
            <summary>
            Append the given query key and value to the URI.
            </summary>
            <param name="uri">The base URI.</param>
            <param name="name">The name of the query key.</param>
            <param name="value">The query value.</param>
            <returns>The combined result.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="uri"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <c>null</c>.</exception>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryHelper.AddQueryString(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Append the given query keys and values to the URI.
            </summary>
            <param name="uri">The base URI.</param>
            <param name="queryString">A dictionary of query keys and values to append.</param>
            <returns>The combined result.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="uri"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="queryString"/> is <c>null</c>.</exception>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryHelper.AddQueryString(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}})">
            <summary>
            Append the given query keys and values to the URI.
            </summary>
            <param name="uri">The base URI.</param>
            <param name="queryString">A collection of query names and values to append.</param>
            <returns>The combined result.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="uri"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="queryString"/> is <c>null</c>.</exception>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryHelper.AddQueryString(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Append the given query keys and values to the URI.
            </summary>
            <param name="uri">The base URI.</param>
            <param name="queryString">A collection of name value query pairs to append.</param>
            <returns>The combined result.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="uri"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="queryString"/> is <c>null</c>.</exception>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryHelper.ParseQuery(System.String)">
            <summary>
            Parse a query string into its component key and value parts.
            </summary>
            <param name="queryString">The raw query string value, with or without the leading '?'.</param>
            <returns>A collection of parsed keys and values.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.QueryHelper.ParseNullableQuery(System.String)">
            <summary>
            Parse a query string into its component key and value parts.
            </summary>
            <param name="queryString">The raw query string value, with or without the leading '?'.</param>
            <returns>A collection of parsed keys and values, null if there are no entries.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetRange(System.Type,System.String)">
            <summary>
            获得 RangeAttribute 标签值
            </summary>
            <param name="modelType">模型类型</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetNullableBoolItems(System.Object,System.String)">
            <summary>
            获取资源文件中 NullableBoolItemsAttribute 标签名称方法
            </summary>
            <param name="model">模型实例</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetNullableBoolItems(System.Type,System.String)">
            <summary>
            获取资源文件中 NullableBoolItemsAttribute 标签名称方法
            </summary>
            <param name="modelType">模型实例</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetKeyValue``2(``0,System.Type)">
            <summary>
            获得 指定模型标记 <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute"/> 的属性值
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="model"></param>
            <param name="customAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetPropertyValue``2(``0,System.String)">
            <summary>
            获得 指定模型属性值
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="model"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetPropertyValue(System.Object,System.String)">
            <summary>
            获取 指定对象的属性值
            </summary>
            <param name="model"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.SetPropertyValue``2(``0,System.String,``1)">
            <summary>
            设置指定模型属性值方法
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="model"></param>
            <param name="fieldName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetSortFunc``1">
            <summary>
            获得 排序方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetSortListFunc``1">
            <summary>
            获得 通过排序集合进行排序 Func 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetJsonStringByTypeName(BootstrapBlazor.Components.JsonLocalizationOptions,System.Reflection.Assembly,System.String,System.String,System.Boolean)">
            <summary>
            通过指定程序集获取所有本地化信息键值集合
            </summary>
            <param name="option">JsonLocalizationOptions 实例</param>
            <param name="assembly">Assembly 程序集实例</param>
            <param name="typeName">类名称</param>
            <param name="cultureName">cultureName 未空时使用 CultureInfo.CurrentUICulture.Name</param>
            <param name="forceLoad">默认 false 使用缓存值 设置 true 时内部强制重新加载</param>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetStringLocalizerFromService(System.Reflection.Assembly,System.String)">
            <summary>
            通过指定程序集与类型获得 IStringLocalizer 实例
            </summary>
            <param name="assembly"></param>
            <param name="typeName"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetPlaceHolder``1(System.String)">
            <summary>
            获取 PlaceHolder 方法
            </summary>
            <typeparam name="TModel">模型类型</typeparam>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetPlaceHolder(System.Object,System.String)">
            <summary>
            获取 PlaceHolder 方法
            </summary>
            <param name="model">模型实例</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetPlaceHolder(System.Type,System.String)">
            <summary>
            获取 PlaceHolder 方法
            </summary>
            <param name="modelType">模型类型</param>
            <param name="fieldName">字段名称</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.TryGetProperty(System.Type,System.String,System.Reflection.PropertyInfo@)">
            <summary>
            通过 数据类型与字段名称获取 PropertyInfo 实例方法
            </summary>
            <param name="modelType"></param>
            <param name="fieldName"></param>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.Reset``1(``0)">
            <summary>
            重置对象属性值到默认值方法
            </summary>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.Reset``1(``0,``0)">
            <summary>
            重置对象属性值到默认值方法
            </summary>
            <typeparam name="TModel"></typeparam>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.Clone``1(``0)">
            <summary>
            泛型 Clone 方法
            <para>仅克隆类 公开 Field 与 Property</para>
            </summary>
            <typeparam name="TModel"></typeparam>
            <param name="item">克隆对象</param>
            <remarks>简单的深克隆方法，内部未使用序列化技术</remarks>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.Copy``1(``0,``0)">
            <summary>
            泛型 Copy 方法
            </summary>
            <typeparam name="TModel"></typeparam>
            <param name="source"></param>
            <param name="destination"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetTableColumns``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.Func{System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn}})">
            <summary>
            通过特定类型模型获取模型属性集合
            </summary>
            <typeparam name="TModel"></typeparam>
            <param name="source"></param>
            <param name="defaultOrderCallback">默认排序回调方法</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetTableColumns(System.Type,System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.Func{System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn},System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn}})">
            <summary>
            通过特定类型模型获取模型属性集合
            </summary>
            <param name="type">绑定模型类型</param>
            <param name="source">Razor 文件中列集合</param>
            <param name="defaultOrderCallback">默认排序回调方法</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GenerateColumns``1(System.Func{BootstrapBlazor.Components.ITableColumn,System.Boolean})">
            <summary>
            通过指定 Model 获得 IEditorItem 集合方法
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.CreateDisplayByFieldType(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,BootstrapBlazor.Components.IEditorItem,System.Object)">
            <summary>
            RenderTreeBuilder 扩展方法 通过 IEditorItem 与 model 创建 Display 组件
            </summary>
            <param name="builder"></param>
            <param name="item"></param>
            <param name="model"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.CreateComponentByFieldType(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,Microsoft.AspNetCore.Components.ComponentBase,BootstrapBlazor.Components.IEditorItem,System.Object,BootstrapBlazor.Components.ItemChangedType,System.Boolean,BootstrapBlazor.Components.ILookupService,System.Nullable{System.Boolean})">
            <summary>
            RenderTreeBuilder 扩展方法 通过指定模型与属性生成编辑组件
            </summary>
            <param name="builder"></param>
            <param name="model"></param>
            <param name="component"></param>
            <param name="item"></param>
            <param name="changedType"></param>
            <param name="isSearch"></param>
            <param name="lookupService"></param>
            <param name="skipValidate"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GenerateValueExpression(System.Object,System.String,System.Type)">
            <summary>
            通过指定类型实例获取属性 Lambda 表达式
            </summary>
            <param name="model"></param>
            <param name="fieldName"></param>
            <param name="fieldType"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GenerateComponentType(BootstrapBlazor.Components.IEditorItem)">
            <summary>
            通过指定类型生成组件类型
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.IsCheckboxList(System.Type,System.Type)">
            <summary>
            通过指定数据类型判断是否可使用 CheckboxList 进行渲染
            </summary>
            <param name="fieldType"></param>
            <param name="componentType">组件类型</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.CreateMultipleAttributes(System.Type,System.Object,System.String,BootstrapBlazor.Components.IEditorItem)">
            <summary>
            通过模型与指定数据类型生成组件参数集合
            </summary>
            <param name="fieldType">待编辑数据类型</param>
            <param name="model">上下文模型</param>
            <param name="fieldName">字段名称</param>
            <param name="item">IEditorItem 实例</param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.CreateOnValueChangedCallback``2(``0,BootstrapBlazor.Components.ITableColumn,System.Func{``0,BootstrapBlazor.Components.ITableColumn,System.Object,System.Threading.Tasks.Task})">
            <summary>
            创建 <see cref="T:System.Func`2"/> 委托方法
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TType"></typeparam>
            <param name="model"></param>
            <param name="col"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.CreateOnValueChanged``1(System.Type)">
            <summary>
            创建 OnValueChanged 回调委托
            </summary>
            <typeparam name="TModel"></typeparam>
            <param name="fieldType"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GetOnValueChangedInvoke``1(System.Type)">
            <summary>
            创建 OnValueChanged 回调委托
            </summary>
            <typeparam name="TModel"></typeparam>
            <param name="fieldType"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.Format(System.Object,System.String,System.IFormatProvider)">
            <summary>
            任意类型格式化方法
            </summary>
            <param name="source"></param>
            <param name="format"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.Format(System.Object,System.IFormatProvider)">
            <summary>
            任意类型格式化方法
            </summary>
            <param name="source"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.ConvertValueToString``1(``0)">
            <summary>
            转换泛型类型为字符串方法
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GenerateValueChanged(Microsoft.AspNetCore.Components.ComponentBase,System.Object,System.String,System.Type)">
            <summary>
            获得 ValueChanged 回调委托
            </summary>
            <param name="component"></param>
            <param name="model"></param>
            <param name="fieldName"></param>
            <param name="fieldType"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.CreateCallback``1(Microsoft.AspNetCore.Components.ComponentBase,System.Object,System.String)">
            <summary>
            创建 <see cref="T:Microsoft.AspNetCore.Components.EventCallback`1"/> 方法
            </summary>
            <typeparam name="TType"></typeparam>
            <param name="component"></param>
            <param name="model"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.GenerateEditorItems``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.ITableColumn})">
            <summary>
            获得指定泛型的 IEditorItem 集合
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.CreateLocalizer``1">
            <summary>
            通过指定类型创建 IStringLocalizer 实例
            </summary>
            <typeparam name="TType"></typeparam>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.CreateLocalizer(System.Type)">
            <summary>
            通过指定类型创建 IStringLocalizer 实例
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.ConvertToIPAddress(System.String)">
            <summary>
            Converts a string representation of an IP address or hostname into an <see cref="T:System.Net.IPAddress"/> object.
            </summary>
            <remarks>This method handles common special cases for IP address strings, such as "localhost" and
            "any". For other inputs, it attempts  to parse the string as an IP address using <see
            cref="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)"/>. If parsing fails, the method  resolves the input as a
            hostname.</remarks>
            <param name="ipString">A string containing the IP address or hostname to convert. Special values include: <list type="bullet">
            <item><description><c>"localhost"</c> returns the loopback address (<see
            cref="F:System.Net.IPAddress.Loopback"/>).</description></item> <item><description><c>"any"</c> returns the wildcard address
            (<see cref="F:System.Net.IPAddress.Any"/>).</description></item> </list> For other values, the method attempts to parse the
            string as an IP address or resolve it as a hostname.</param>
            <returns>An <see cref="T:System.Net.IPAddress"/> object representing the parsed or resolved IP address. If the input cannot be parsed
            or resolved,  the method returns a default IP address.</returns>
        </member>
        <member name="M:BootstrapBlazor.Components.Utility.ConvertToIpEndPoint(System.String,System.Int32)">
            <summary>
            Converts a string representation of an IP address and a port number into an <see cref="T:System.Net.IPEndPoint"/> instance.
            </summary>
            <remarks>This method is not supported on browser platforms.</remarks>
            <param name="ipString">The string representation of the IP address. Must be a valid IPv4 or IPv6 address.</param>
            <param name="port">The port number associated with the endpoint. Must be between 0 and 65535.</param>
            <returns>An <see cref="T:System.Net.IPEndPoint"/> representing the specified IP address and port.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <paramref name="port"/> is less than 0 or greater than 65535.</exception>
        </member>
        <member name="T:BootstrapBlazor.Components.DateTimeRangeRequiredValidator">
            <summary>
            DateTimeRange 验证
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.DateTimeRangeRequiredValidator.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <inheritdoc/>
        </member>
        <member name="T:BootstrapBlazor.Components.FormItemValidator">
            <summary>
            自定义验证类
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.FormItemValidator.#ctor(System.ComponentModel.DataAnnotations.ValidationAttribute)">
            <summary>
            自定义验证类
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.FormItemValidator.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            验证方法
            </summary>
            <param name="propertyValue">待校验值</param>
            <param name="context">ValidateContext 实例</param>
            <param name="results">ValidateResult 集合实例</param>
        </member>
        <member name="P:BootstrapBlazor.Components.FormItemValidator.IsRequired">
            <summary>
            是否为 RequiredAttribute 标签特性
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.IValidator">
            <summary>
            IValidator 接口
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IValidator.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            异步验证方法
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.IValidatorAsync">
            <summary>
            异步验证组件
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.IValidatorAsync.ValidateAsync(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            异步验证方法
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.MaxValidator">
            <summary>
            选项最大数验证实现类
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MaxValidator.ErrorMessage">
            <summary>
            获得/设置 错误描述信息
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MaxValidator.Value">
            <summary>
            获得/设置 值
            </summary>
        </member>
        <member name="P:BootstrapBlazor.Components.MaxValidator.SplitCallback">
            <summary>
            获得/设置 分割回调方法 默认 使用 ',' 分割
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MaxValidator.GetErrorMessage">
            <summary>
            获得 ErrorMessage 方法
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MaxValidator.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            验证方法
            </summary>
            <param name="propertyValue">待校验值</param>
            <param name="context">ValidateContext 实例</param>
            <param name="results">ValidateResult 集合实例</param>
        </member>
        <member name="M:BootstrapBlazor.Components.MaxValidator.Validate(System.Object)">
            <summary>
            检查 Value 是否合法 返回 true 表示合法
            </summary>
            <param name="propertyValue"></param>
        </member>
        <member name="M:BootstrapBlazor.Components.MaxValidator.Validate(System.Int32)">
            <summary>
            验证方法 小于等于 Value 时 返回 true
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.MinValidator">
            <summary>
            选项最小数验证实现类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MinValidator.Validate(System.Int32)">
            <summary>
            验证方法 大于等于 Value 时 返回 true
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.MinValidator.GetErrorMessage">
            <summary>
            获得 ErrorMessage 方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:BootstrapBlazor.Components.RequiredValidator">
            <summary>
            Required 验证实现类
            </summary>
        </member>
        <member name="T:BootstrapBlazor.Components.ValidatorAsyncBase">
            <summary>
            IValidator 异步实现类基类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidatorAsyncBase.ValidateAsync(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            数据验证方法
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="T:BootstrapBlazor.Components.ValidatorBase">
            <summary>
            IValidator 实现类基类
            </summary>
        </member>
        <member name="M:BootstrapBlazor.Components.ValidatorBase.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.List{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            数据验证方法
            </summary>
            <param name="propertyValue"></param>
            <param name="context"></param>
            <param name="results"></param>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.Web.ReconnectorOutlet">
            <summary>
            ReconnectorOutlet 组件
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.Web.ReconnectorOutlet.AutoReconnect">
            <summary>
            获得/设置 是否自动尝试重连 默认 true
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Components.Web.ReconnectorOutlet.ReconnectInterval">
            <summary>
            获得/设置 自动重连间隔 默认 5000 毫秒 最小值为 1000 毫秒
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.Web.ReconnectorOutlet.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            BuildRenderTree 方法
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.Routing.RouteTableFactory">
            <summary>
            Resolves components for an application.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.Routing.RouteTableFactory.RouteComparison(Microsoft.AspNetCore.Components.Routing.RouteEntry,Microsoft.AspNetCore.Components.Routing.RouteEntry)">
             <summary>
             Route precedence algorithm.
             We collect all the routes and sort them from most specific to
             less specific. The specificity of a route is given by the specificity
             of its segments and the position of those segments in the route.
             * A literal segment is more specific than a parameter segment.
             * A parameter segment with more constraints is more specific than one with fewer constraints
             * Segment earlier in the route are evaluated before segments later in the route.
             For example:
             /Literal is more specific than /Parameter
             /Route/With/{parameter} is more specific than /{multiple}/With/{parameters}
             /Product/{id:int} is more specific than /Product/{id}
            
             Routes can be ambiguous if:
             They are composed of literals and those literals have the same values (case insensitive)
             They are composed of a mix of literals and parameters, in the same relative order and the
             literals have the same values.
             For example:
             * /literal and /Literal
             /{parameter}/literal and /{something}/literal
             /{parameter:constraint}/literal and /{something:constraint}/literal
            
             To calculate the precedence we sort the list of routes as follows:
             * Shorter routes go first.
             * A literal wins over a parameter in precedence.
             * For literals with different values (case insensitive) we choose the lexical order
             * For parameters with different numbers of constraints, the one with more wins
             If we get to the end of the comparison routing we've detected an ambiguous pair of routes.
             </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.Routing.UrlValueConstraint">
            <summary>
            Shared logic for parsing tokens from route values and querystring values.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Internal.LinkerFlags.JsonSerialized">
            <summary>
            Flags for a member that is JSON (de)serialized.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Internal.LinkerFlags.Component">
            <summary>
            Flags for a component
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Internal.QueryStringEnumerable">
            <summary>
            An enumerable that can supply the name/value pairs from a URI query string.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.QueryStringEnumerable.#ctor(System.String)">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Internal.QueryStringEnumerable"/>.
            </summary>
            <param name="queryString">The query string.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.QueryStringEnumerable.#ctor(System.ReadOnlyMemory{System.Char})">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Internal.QueryStringEnumerable"/>.
            </summary>
            <param name="queryString">The query string.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.QueryStringEnumerable.GetEnumerator">
            <summary>
            Retrieves an object that can iterate through the name/value pairs in the query string.
            </summary>
            <returns>An object that can iterate through the name/value pairs in the query string.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Internal.QueryStringEnumerable.EncodedNameValuePair">
            <summary>
            Represents a single name/value pair extracted from a query string during enumeration.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Internal.QueryStringEnumerable.EncodedNameValuePair.EncodedName">
            <summary>
            Gets the name from this name/value pair in its original encoded form.
            To get the decoded string, call <see cref="M:Microsoft.AspNetCore.Internal.QueryStringEnumerable.EncodedNameValuePair.DecodeName"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Internal.QueryStringEnumerable.EncodedNameValuePair.EncodedValue">
            <summary>
            Gets the value from this name/value pair in its original encoded form.
            To get the decoded string, call <see cref="M:Microsoft.AspNetCore.Internal.QueryStringEnumerable.EncodedNameValuePair.DecodeValue"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.QueryStringEnumerable.EncodedNameValuePair.DecodeName">
            <summary>
            Decodes the name from this name/value pair.
            </summary>
            <returns>Characters representing the decoded name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.QueryStringEnumerable.EncodedNameValuePair.DecodeValue">
            <summary>
            Decodes the value from this name/value pair.
            </summary>
            <returns>Characters representing the decoded value.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Internal.QueryStringEnumerable.Enumerator">
            <summary>
            An enumerator that supplies the name/value pairs from a URI query string.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Internal.QueryStringEnumerable.Enumerator.Current">
            <summary>
            Gets the currently referenced key/value pair in the query string being enumerated.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.QueryStringEnumerable.Enumerator.MoveNext">
            <summary>
            Moves to the next key/value pair in the query string being enumerated.
            </summary>
            <returns>True if there is another key/value pair, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.BootstrapBlazorServiceCollectionExtensions">
            <summary>
            BootstrapBlazor 服务扩展类
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BootstrapBlazorServiceCollectionExtensions.AddBootstrapBlazor(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BootstrapBlazor.Components.BootstrapBlazorOptions},System.Action{BootstrapBlazor.Components.JsonLocalizationOptions})">
            <summary>
            增加 BootstrapBlazor 服务
            </summary>
            <param name="services"></param>
            <param name="configureOptions"></param>
            <param name="localizationConfigure"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BootstrapBlazorServiceCollectionExtensions.ConfigureBootstrapBlazorOption(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BootstrapBlazor.Components.BootstrapBlazorOptions})">
            <summary>
            BootstrapBlazorOptions 扩展配置方法
            </summary>
            <param name="services"></param>
            <param name="configureOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BootstrapBlazorServiceCollectionExtensions.ConfigureIPLocatorOption(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BootstrapBlazor.Components.IPLocatorOption})">
            <summary>
            IPLocatorOption 扩展配置方法
            </summary>
            <param name="services"></param>
            <param name="locatorAction"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BootstrapBlazorServiceCollectionExtensions.ConfigureJsonLocalizationOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BootstrapBlazor.Components.JsonLocalizationOptions})">
            <summary>
            JsonLocalizationOptions 扩展配置方法
            </summary>
            <param name="services"></param>
            <param name="localizationConfigure"></param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BootstrapBlazorServiceCollectionExtensions.AddOptionsMonitor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            增加支持热更新配置类
            </summary>
            <typeparam name="TOptions"></typeparam>
            <param name="services"></param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BootstrapBlazorServiceCollectionExtensions.AddTabItemBindOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            增加 菜单与标签捆绑类配置项服务
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BootstrapBlazorServiceCollectionExtensions.ConfigureTabItemMenuBindOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BootstrapBlazor.Components.TabItemBindOptions})">
            <summary>
            增加第三方菜单路由与 Tab 捆绑字典配置
            </summary>
            <param name="services"></param>
            <param name="configureOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BootstrapBlazorServiceCollectionExtensions.AddIconTheme(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            增加 图标映射配置项服务
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BootstrapBlazorServiceCollectionExtensions.ConfigureIconThemeOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BootstrapBlazor.Components.IconThemeOptions})">
            <summary>
            IconThemeOptions 扩展配置方法
            </summary>
            <param name="services"></param>
            <param name="configureOptions"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.JsonLocalizationServiceCollectionExtensions">
            <summary>
            多语言支持注入服务扩展类
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.JsonLocalizationServiceCollectionExtensions.AddJsonLocalization(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BootstrapBlazor.Components.JsonLocalizationOptions})">
            <summary>
            注入 Json 格式多语言服务
            </summary>
            <param name="services">IServiceCollection 实例</param>
            <param name="localizationConfigure">JsonLocalizationOptions 配置回调方法</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ConfigureOptions`1">
            <summary>
            BlazorConfigureFromConfigurationOptions 配置实现类
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ConfigureOptions`1.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            构造函数
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ConfigurationExtensions">
            <summary>
            IConfiguration 扩展类
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.GetOS">
            <summary>
            获得 环境变量中的 OS 属性值
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.GetUserName(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            获得 环境变量中的 UserName 属性值
            </summary>
            <param name="config"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.GetEnvironmentName(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            获得 环境变量中的 ASPNETCORE_ENVIRONMENT 属性值
            </summary>
            <param name="config"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.GetIISPath(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            获得 环境变量中的 ASPNETCORE_IIS_PHYSICAL_PATH 属性值
            </summary>
            <param name="config"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.GetVisualStudioVersion(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            获得 环境变量中的 VisualStudioEdition 属性值
            </summary>
            <param name="config"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:System.Linq.LambdaExtensions">
            <summary>
            Lambda 表达式扩展类
            </summary>
        </member>
        <member name="T:System.Linq.LambdaExtensions.ComboExpressionVisitor">
            <summary>
            Expression 统一 node 变量
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:System.Linq.LambdaExtensions.ComboExpressionVisitor.#ctor(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Expression 统一 node 变量
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:System.Linq.LambdaExtensions.ComboExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetFilterFunc``1(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            指定 FilterKeyValueAction 获取委托
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetFilterLambda``1(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            指定 FilterKeyValueAction 获取 Lambda 表达式
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetFilterFunc``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IFilterAction},BootstrapBlazor.Components.FilterLogic)">
            <summary>
            指定 IFilter 集合获取委托
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="filters"></param>
            <param name="logic"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetFilterLambda``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.IFilterAction},BootstrapBlazor.Components.FilterLogic)">
            <summary>
            指定 IFilter 集合获取 Lambda 表达式
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="filters"></param>
            <param name="logic"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetFilterLambda``1(System.Collections.Generic.IEnumerable{BootstrapBlazor.Components.FilterKeyValueAction},BootstrapBlazor.Components.FilterLogic)">
            <summary>
            指定 IFilter 集合获取 Lambda 表达式
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="filters"></param>
            <param name="logic"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.ExpressionAndLambda``1(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}},BootstrapBlazor.Components.FilterLogic)">
            <summary>
            表达式取 and 逻辑操作方法
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="expressions"></param>
            <param name="logic"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetInnerFilterLambda``1(BootstrapBlazor.Components.FilterKeyValueAction)">
            <summary>
            指定 FilterKeyValueAction 获取 Lambda 表达式
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.ElementCount(System.Object)">
            <summary>
            Count 方法内部使用 Lambda 表达式做通用适配 可接受 IEnumerable 与 Array 子类
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.CountLambda(System.Type)">
            <summary>
            Count 方法内部使用 Lambda 表达式做通用适配 可接受 IEnumerable 与 Array 子类
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetSortListLambda``1">
            <summary>
            获得排序 Expression 表达式
            </summary>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.Sort``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{System.String})">
            <summary>
            IEnumerable 排序扩展方法
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="items"></param>
            <param name="sortList"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.Sort``1(System.Linq.IQueryable{``0},System.Collections.Generic.List{System.String})">
            <summary>
            IQueryable 排序扩展方法
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="items"></param>
            <param name="sortList"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetSortLambda``1">
            <summary>
            获得排序 Expression 表达式
            </summary>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.Sort``1(System.Collections.Generic.IEnumerable{``0},System.String,BootstrapBlazor.Components.SortOrder)">
            <summary>
            IEnumerable 排序扩展方法
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="items"></param>
            <param name="sortName"></param>
            <param name="sortOrder"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.Sort``1(System.Linq.IQueryable{``0},System.String,BootstrapBlazor.Components.SortOrder)">
            <summary>
            IQueryable 排序扩展方法
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="items"></param>
            <param name="sortName"></param>
            <param name="sortOrder"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetPropertyValueLambda``2(``0,System.String)">
            <summary>
            获取属性方法 Lambda 表达式
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="model"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.SetPropertyValueLambda``2(``0,System.String)">
            <summary>
            给指定模型属性赋值 Lambda 表达式
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="model"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.GetKeyValue``2(System.Type)">
            <summary>
            获得 指定模型标记 <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute"/> 的属性值
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.EnumerableConvertToStringLambda``1">
            <summary>
            数组转成字符串表达式
            </summary>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <remarks><code><![CDATA[string.Join<T>(",", IEnumerable<T>)]]></code></remarks>
        </member>
        <member name="M:System.Linq.LambdaExtensions.ConvertToStringEnumerableLambda``1">
            <summary>
            泛型集合转换成 <![CDATA[IEnumerable<string>]]> 方法
            </summary>
            <typeparam name="TValue"></typeparam>
            <remarks><code><![CDATA[IEnumerable<T>]]> to <![CDATA[IEnumerable<string>]]></code></remarks>
            <returns></returns>
        </member>
        <member name="M:System.Linq.LambdaExtensions.ArrayConvertToStringLambda``1(System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})">
            <summary>
            数组转成字符串表达式
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="typeResolver"></param>
            <remarks><code><![CDATA[string.Join<T>(",", Array)]]></code></remarks>
        </member>
    </members>
</doc>
