@page "/report-detail-seo-performance-bod"
@layout PageLayout

<h3>Báo cáo perf SEO BOD</h3>




<DemoBlock Title="Bộ lọc báo cáo">
    <div class="row g-3">
        <div class="col-12 col-sm-6">
            <DateTimeRange @bind-Value="@MonthRangeValue"
            ViewMode="DatePickerViewMode.Month"
            DateFormat="MM-yyyy"
            ShowLabel="true"
            DisplayText="Thời gian"
            ShowSidebar="true"
            AutoCloseClickSideBar="true" >
            </DateTimeRange>
        </div>
        <div class="col-12 col-sm-6">
            <Select
            Items="PicItems"
            @bind-Value="SelectedPic"
            ShowSearch="true"
            IsClearable="@(Role != "SEO")"
            ShowLabel="true"
            DisplayText="Người phụ trách">
            </Select>
        </div>
        <div class="col-12 col-sm-6"><Button IsBlock="true" Color="Color.Primary" OnClick="OnViewReport">Xem báo cáo</Button></div>
        <div class="col-12 col-sm-6"><Button IsBlock="true" Color="Color.Success" OnClick="OnExportExcel">Xuất Excel</Button></div>
    </div>
</DemoBlock>

<DemoBlock>
    <Tab IsCard="true" ShowClose="true"
     TabStyle="TabStyle.Chrome"
     AllowDrag="true"
     ShowToolbar="true"
     IsOnlyRenderActiveTab="true"
     ShowExtendButtons="true">
        <TabItem Text="Tổng hợp" Icon="fa-solid fa-gauge-high">
            @if (!IsLoading)
            {
                @if(Data.ReportByBrand != null &&  Data.ReportByBrand.Count > 0)
                {
                    foreach (var brand in Data.ReportByBrand)
                    {
                        var value = brand.Value;
                        var total = Data.TotalByBrandTotal[brand.Key];
                        var classColor = brand.Key == "All" ? "blue" : brand.Key.Contains("S") ? "green" : "red";
                        int startMonth = Filter.FromDate?.Month ?? 1;
                        int endMonth = Filter.ToDate?.Month ?? DateTime.UtcNow.Month;
                        <div class="title rz-mt-2">
                            <h1>@(Data.Brands[brand.Key])</h1>
                        </div>
                        <div class="table-container">
                            <table class="table-freeze @(classColor)">
                                <thead>
                                <tr>
                                    <th class="sticky" rowspan="2">Top</th>
                                    <th class="sticky2" rowspan="2">Độ khó keyword<br /><small>(theo Search Volume)</small></th>
                                    @for (int month = startMonth; month <= endMonth; month++)
                                    {
                                        <th colspan="3">Tháng @month/@Filter.FromDate?.Year</th>
                                    }
                                </tr>
                                <tr>
                                    @for (int month = startMonth; month <= endMonth; month++)
                                    {
                                        <th>Số keyword</th>
                                        <th>Số domain</th>
                                        <th>Số lần</th>
                                    }
                                </tr>
                                </thead>
                                <tbody>
                                <tr>
                                    <td class="sticky" rowspan="3">1-5</td>
                                    <td class="sticky2">Dễ (0-100k)</td>
                                    @for (int month = startMonth; month <= endMonth; month++)
                                    {
                                        <td> @(value[month].FirstOrDefault(x => x.TopRange == TopRange.Top1ToTop5 && x.VolumeRange == LevelSearchVolumne.Easy)?.KeyWords ?? 0 + value[month].FirstOrDefault(x => x.TopRange == TopRange.Top1ToTop5 && x.VolumeRange == LevelSearchVolumne.Easy)?.KeyWords ?? 0)</td>
                                        <td> @(value[month].FirstOrDefault(x => x.TopRange == TopRange.Top1ToTop5 && x.VolumeRange == LevelSearchVolumne.Easy)?.Domains ?? 0 + value[month].FirstOrDefault(x => x.TopRange == TopRange.Top1ToTop5 && x.VolumeRange == LevelSearchVolumne.Easy)?.Domains ?? 0)</td>
                                        <td> @(value[month].FirstOrDefault(x => x.TopRange == TopRange.Top1ToTop5 && x.VolumeRange == LevelSearchVolumne.Easy)?.Count ?? 0 + value[month].FirstOrDefault(x => x.TopRange == TopRange.Top1ToTop5 && x.VolumeRange == LevelSearchVolumne.Easy)?.Count ?? 0)</td>
                                    }
                                </tr>
                                <tr>
                                    <td class="sticky2">Trung bình (100k-500k)</td>
                                    @for (int month = startMonth; month <= endMonth; month++)
                                    {
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top1ToTop5 && x.VolumeRange == LevelSearchVolumne.Medium)?.KeyWords</td>
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top1ToTop5 && x.VolumeRange == LevelSearchVolumne.Medium)?.Domains</td>
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top1ToTop5 && x.VolumeRange == LevelSearchVolumne.Medium)?.Count</td>
                                    }
                                </tr>
                                <tr>
                                    <td class="sticky2">Khó(>500k)</td>
                                    @for (int month = startMonth; month <= endMonth; month++)
                                    {
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top1ToTop5 && x.VolumeRange == LevelSearchVolumne.Hard)?.KeyWords</td>
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top1ToTop5 && x.VolumeRange == LevelSearchVolumne.Hard)?.Domains</td>
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top1ToTop5 && x.VolumeRange == LevelSearchVolumne.Hard)?.Count</td>
                                    }
                                </tr>
                                <tr>
                                    <td class="sticky" rowspan="3">6-10</td>
                                    <td class="sticky2">Dễ (0-100k)</td>
                                    @for (int month = startMonth; month <= endMonth; month++)
                                    {
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top6ToTop10 && x.VolumeRange == LevelSearchVolumne.Easy)?.KeyWords</td>
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top6ToTop10 && x.VolumeRange == LevelSearchVolumne.Easy)?.Domains</td>
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top6ToTop10 && x.VolumeRange == LevelSearchVolumne.Easy)?.Count</td>
                                    }
                                </tr>
                                <tr>
                                    <td class="sticky2">Trung bình (100k-500k)</td>
                                    @for (int month = startMonth; month <= endMonth; month++)
                                    {
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top6ToTop10 && x.VolumeRange == LevelSearchVolumne.Medium)?.KeyWords</td>
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top6ToTop10 && x.VolumeRange == LevelSearchVolumne.Medium)?.Domains</td>
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top6ToTop10 && x.VolumeRange == LevelSearchVolumne.Medium)?.Count</td>
                                    }
                                </tr>
                                <tr>
                                    <td class="sticky2">Khó(>500k)</td>
                                    @for (int month = startMonth; month <= endMonth; month++)
                                    {
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top6ToTop10 && x.VolumeRange == LevelSearchVolumne.Hard)?.KeyWords</td>
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top6ToTop10 && x.VolumeRange == LevelSearchVolumne.Hard)?.Domains</td>
                                        <td> @value[month].FirstOrDefault(x => x.TopRange == TopRange.Top6ToTop10 && x.VolumeRange == LevelSearchVolumne.Hard)?.Count</td>
                                    }
                                </tr>
                                <tr>
                                    <td class="sticky" colspan="2">Tổng</td>
                                    @for (int month = startMonth; month <= endMonth; month++)
                                    {
                                        <td> @total[month].TotalKeyWord</td>
                                        <td> @total[month].TotalDomain</td>
                                        <td> @total[month].CountAll</td>
                                    }
                                </tr>
                                </tbody>
                            </table>
                        </div>
                    }
                }
            }
            else
            {
                <div class="d-flex justify-content-center align-items-center">
                    <div class="text-center">
                        <i class="fa-solid fa-spinner fa-spin-pulse fa-2x"></i>
                        <p class="mt-2">Đang khởi tạo bảng dữ liệu mới...</p>
                    </div>
                </div>
            }
        </TabItem>
    </Tab>
</DemoBlock>

